
open import Agda.Primitive

import matita-arithmetics-nat
import matita-basics-logic
decidable-not : (l37-v : Level) -> (P-v : Set l37-v) -> (X---v : matita-basics-logic.decidable l37-v P-v) -> matita-basics-logic.decidable l37-v (matita-basics-logic.Not l37-v P-v)
decidable-not = λ (l37-v : Level) -> λ (P-v : Set l37-v) -> λ (X-clearme-v : matita-basics-logic.decidable l37-v P-v) -> matita-basics-logic.match-Or l37-v l37-v P-v (matita-basics-logic.Not l37-v P-v) l37-v (λ (X---v : matita-basics-logic.Or l37-v l37-v P-v (matita-basics-logic.Not l37-v P-v)) -> matita-basics-logic.decidable l37-v (matita-basics-logic.Not l37-v P-v)) (λ (H-v : P-v) -> matita-basics-logic.or-intror l37-v l37-v (matita-basics-logic.Not l37-v P-v) (matita-basics-logic.Not l37-v (matita-basics-logic.Not l37-v P-v)) (matita-basics-logic.nmk l37-v (matita-basics-logic.Not l37-v P-v) (λ (X-clearme0-v : matita-basics-logic.Not l37-v P-v) -> matita-basics-logic.match-Not l37-v P-v l37-v (λ (X---v : matita-basics-logic.Not l37-v P-v) -> matita-basics-logic.False l37-v) (λ (auto-v : (X---v : P-v) -> matita-basics-logic.False l37-v) -> auto-v H-v) X-clearme0-v))) (λ (H-v : matita-basics-logic.Not l37-v P-v) -> matita-basics-logic.or-introl l37-v l37-v (matita-basics-logic.Not l37-v P-v) (matita-basics-logic.Not l37-v (matita-basics-logic.Not l37-v P-v)) H-v) X-clearme-v

decidable-or : (ll1-v ll0-v : Level) -> (P-v : Set (lzero ⊔ (ll1-v ⊔ ll0-v))) -> (Q-v : Set (lzero ⊔ (ll1-v ⊔ ll0-v))) -> (X---v : matita-basics-logic.decidable (ll1-v ⊔ ll0-v) P-v) -> (X--1-v : matita-basics-logic.decidable (ll1-v ⊔ ll0-v) Q-v) -> matita-basics-logic.decidable (ll1-v ⊔ ll0-v) (matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v)
decidable-or = λ (ll1-v ll0-v : Level) -> λ (P-v : Set (lzero ⊔ (ll1-v ⊔ ll0-v))) -> λ (Q-v : Set (lzero ⊔ (ll1-v ⊔ ll0-v))) -> λ (X-clearme-v : matita-basics-logic.decidable (ll1-v ⊔ ll0-v) P-v) -> matita-basics-logic.match-Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v (matita-basics-logic.Not (ll1-v ⊔ ll0-v) P-v) (ll1-v ⊔ ll0-v) (λ (X---v : matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v (matita-basics-logic.Not (ll1-v ⊔ ll0-v) P-v)) -> (X--1-v : matita-basics-logic.decidable (ll1-v ⊔ ll0-v) Q-v) -> matita-basics-logic.decidable (ll1-v ⊔ ll0-v) (matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v)) (λ (HP-v : P-v) -> λ (X---v : matita-basics-logic.decidable (ll1-v ⊔ ll0-v) Q-v) -> matita-basics-logic.or-introl (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) (matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v) (matita-basics-logic.Not (ll1-v ⊔ ll0-v) (matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v)) (matita-basics-logic.or-introl (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v HP-v)) (λ (HP-v : matita-basics-logic.Not (ll1-v ⊔ ll0-v) P-v) -> λ (X-clearme0-v : matita-basics-logic.decidable (ll1-v ⊔ ll0-v) Q-v) -> matita-basics-logic.match-Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) Q-v (matita-basics-logic.Not (ll1-v ⊔ ll0-v) Q-v) (ll1-v ⊔ ll0-v) (λ (X---v : matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) Q-v (matita-basics-logic.Not (ll1-v ⊔ ll0-v) Q-v)) -> matita-basics-logic.decidable (ll1-v ⊔ ll0-v) (matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v)) (λ (HQ-v : Q-v) -> matita-basics-logic.or-introl (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) (matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v) (matita-basics-logic.Not (ll1-v ⊔ ll0-v) (matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v)) (matita-basics-logic.or-intror (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v HQ-v)) (λ (HQ-v : matita-basics-logic.Not (ll1-v ⊔ ll0-v) Q-v) -> matita-basics-logic.or-intror (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) (matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v) (matita-basics-logic.Not (ll1-v ⊔ ll0-v) (matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v)) (matita-basics-logic.nmk (ll1-v ⊔ ll0-v) (matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v) (λ (X-clearme1-v : matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v) -> matita-basics-logic.match-Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v (ll1-v ⊔ ll0-v) (λ (X---v : matita-basics-logic.Or (ll1-v ⊔ ll0-v) (ll1-v ⊔ ll0-v) P-v Q-v) -> matita-basics-logic.False (ll1-v ⊔ ll0-v)) (λ (auto-v : P-v) -> matita-basics-logic.absurd (ll1-v ⊔ ll0-v) P-v auto-v HP-v) (λ (auto-v : Q-v) -> matita-basics-logic.absurd (ll1-v ⊔ ll0-v) Q-v auto-v HQ-v) X-clearme1-v))) X-clearme0-v) X-clearme-v

decidable-forall : (l220-v : Level) -> (P-v : (X---v : matita-arithmetics-nat.nat) -> Set l220-v) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.decidable l220-v (P-v i-v)) -> (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.decidable l220-v ((i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v n-v) -> P-v i-v)
decidable-forall = λ (l220-v : Level) -> λ (P-v : (X---v : matita-arithmetics-nat.nat) -> Set l220-v) -> λ (Hdec-v : (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.decidable l220-v (P-v i-v)) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind l220-v (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-basics-logic.decidable l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v X-x-365-v) -> P-v i-v)) (matita-basics-logic.or-introl l220-v l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> P-v i-v) (matita-basics-logic.Not l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> P-v i-v)) (λ (i-v : matita-arithmetics-nat.nat) -> λ (lti0-v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero l220-v (λ (X-x-66-v : matita-basics-logic.False lzero) -> P-v i-v) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) lti0-v (matita-arithmetics-nat.le-to-not-lt matita-arithmetics-nat.O i-v (matita-arithmetics-nat.le-O-n i-v))))) (λ (m-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.decidable l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> P-v i-v)) -> matita-basics-logic.match-Or l220-v l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> P-v i-v) (matita-basics-logic.Not l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> P-v i-v)) l220-v (λ (X---v : matita-basics-logic.Or l220-v l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> P-v i-v) (matita-basics-logic.Not l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> P-v i-v))) -> matita-basics-logic.decidable l220-v ((i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v)) (λ (H-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> P-v i-v) -> matita-basics-logic.match-Or l220-v l220-v (P-v m-v) (matita-basics-logic.Not l220-v (P-v m-v)) l220-v (λ (X---v : matita-basics-logic.Or l220-v l220-v (P-v m-v) (matita-basics-logic.Not l220-v (P-v m-v))) -> matita-basics-logic.decidable l220-v ((i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v)) (λ (HPm-v : P-v m-v) -> matita-basics-logic.or-introl l220-v l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v) (matita-basics-logic.Not l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v)) (λ (i-v : matita-arithmetics-nat.nat) -> λ (lei0-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) l220-v (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v))) -> P-v i-v) (λ (H1-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) -> H-v i-v (matita-arithmetics-nat.le-S-S-to-le (matita-arithmetics-nat.S i-v) m-v H1-v)) (λ (H1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.eq-ind-r lzero l220-v matita-arithmetics-nat.nat m-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v m-v) -> P-v x-v) HPm-v i-v (matita-arithmetics-nat.injective-S i-v m-v H1-v)) (matita-arithmetics-nat.le-to-or-lt-eq (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v) lei0-v))) (λ (HPm-v : matita-basics-logic.Not l220-v (P-v m-v)) -> matita-basics-logic.or-intror l220-v l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v) (matita-basics-logic.Not l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v)) (matita-basics-logic.not-to-not l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v) (P-v m-v) (λ (H1-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v) -> H1-v m-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.lt-plus-Sn-r m-v matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v X---v) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X---v) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus-n-Sm m-v matita-arithmetics-nat.O) m-v (matita-arithmetics-nat.plus-n-O m-v))) (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O m-v)))) HPm-v)) (Hdec-v m-v)) (λ (H-v : matita-basics-logic.Not l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> P-v i-v)) -> matita-basics-logic.or-intror l220-v l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v) (matita-basics-logic.Not l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v)) (matita-basics-logic.not-to-not l220-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v) ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> P-v i-v) (λ (H1-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (leim-v : matita-arithmetics-nat.lt i-v m-v) -> H1-v i-v (matita-arithmetics-nat.le-S (matita-arithmetics-nat.S i-v) m-v leim-v)) H-v)) X-clearme-v) n-v

not-exists-to-forall : (l145-v : Level) -> (P-v : (X---v : matita-arithmetics-nat.nat) -> Set l145-v) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.Not l145-v (matita-basics-logic.ex lzero l145-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i-v n-v) (P-v i-v)))) -> (i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.Not l145-v (P-v i-v)
not-exists-to-forall = λ (l145-v : Level) -> λ (P-v : (X---v : matita-arithmetics-nat.nat) -> Set l145-v) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind l145-v (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.Not l145-v (matita-basics-logic.ex lzero l145-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i-v X-x-365-v) (P-v i-v)))) -> (i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v X-x-365-v) -> matita-basics-logic.Not l145-v (P-v i-v)) (λ (X---v : matita-basics-logic.Not l145-v (matita-basics-logic.ex lzero l145-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) (P-v i-v)))) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (lti0-v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero l145-v (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.Not l145-v (P-v i-v)) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) lti0-v (matita-arithmetics-nat.le-to-not-lt matita-arithmetics-nat.O i-v (matita-arithmetics-nat.le-O-n i-v)))) (λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (X---v : matita-basics-logic.Not l145-v (matita-basics-logic.ex lzero l145-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i-v m-v) (P-v i-v)))) -> (i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.Not l145-v (P-v i-v)) -> λ (H1-v : matita-basics-logic.Not l145-v (matita-basics-logic.ex lzero l145-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) (P-v i-v)))) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (leiS-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) l145-v (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v))) -> matita-basics-logic.Not l145-v (P-v i-v)) (λ (H2-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) -> Hind-v (matita-basics-logic.not-to-not l145-v (matita-basics-logic.ex lzero l145-v matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i0-v m-v) (P-v i0-v))) (matita-basics-logic.ex lzero l145-v matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i0-v (matita-arithmetics-nat.S m-v)) (P-v i0-v))) (λ (X-clearme-v : matita-basics-logic.ex lzero l145-v matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i0-v m-v) (P-v i0-v))) -> matita-basics-logic.match-ex lzero l145-v matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i0-v m-v) (P-v i0-v)) l145-v (λ (X---v : matita-basics-logic.ex lzero l145-v matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i0-v m-v) (P-v i0-v))) -> matita-basics-logic.ex lzero l145-v matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i0-v (matita-arithmetics-nat.S m-v)) (P-v i0-v))) (λ (a-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt a-v m-v) (P-v a-v)) -> matita-basics-logic.match-And lzero l145-v (matita-arithmetics-nat.lt a-v m-v) (P-v a-v) l145-v (λ (X---v : matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt a-v m-v) (P-v a-v)) -> matita-basics-logic.ex lzero l145-v matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i0-v (matita-arithmetics-nat.S m-v)) (P-v i0-v))) (λ (leam-v : matita-arithmetics-nat.lt a-v m-v) -> λ (Pa-v : P-v a-v) -> matita-basics-logic.ex-intro lzero l145-v matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i0-v (matita-arithmetics-nat.S m-v)) (P-v i0-v)) a-v (matita-basics-logic.conj lzero l145-v (matita-arithmetics-nat.lt a-v (matita-arithmetics-nat.S m-v)) (P-v a-v) (matita-arithmetics-nat.le-S (matita-arithmetics-nat.S a-v) m-v leam-v) Pa-v)) X-clearme0-v) X-clearme-v) H1-v) i-v (matita-arithmetics-nat.le-S-S-to-le (matita-arithmetics-nat.S i-v) m-v H2-v)) (λ (H2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.not-to-not l145-v (P-v i-v) (matita-basics-logic.ex lzero l145-v matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i0-v (matita-arithmetics-nat.S m-v)) (P-v i0-v))) (λ (Pi-v : P-v i-v) -> matita-basics-logic.ex-intro lzero l145-v matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l145-v (matita-arithmetics-nat.lt i0-v (matita-arithmetics-nat.S m-v)) (P-v i0-v)) i-v (matita-basics-logic.conj lzero l145-v (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) (P-v i-v) leiS-v Pi-v)) H1-v) (matita-arithmetics-nat.le-to-or-lt-eq (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v) leiS-v)) n-v

not-forall-to-exists : (l244-v : Level) -> (P-v : (X---v : matita-arithmetics-nat.nat) -> Set l244-v) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.decidable l244-v (P-v i-v)) -> (X--1-v : matita-basics-logic.Not l244-v ((i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v n-v) -> P-v i-v)) -> matita-basics-logic.ex lzero l244-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.Not l244-v (P-v i-v)))
not-forall-to-exists = λ (l244-v : Level) -> λ (P-v : (X---v : matita-arithmetics-nat.nat) -> Set l244-v) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (decP-v : (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.decidable l244-v (P-v i-v)) -> matita-arithmetics-nat.nat-ind l244-v (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.Not l244-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v X-x-365-v) -> P-v i-v)) -> matita-basics-logic.ex lzero l244-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i-v X-x-365-v) (matita-basics-logic.Not l244-v (P-v i-v)))) (λ (X-clearme-v : matita-basics-logic.Not l244-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> P-v i-v)) -> matita-basics-logic.match-Not l244-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> P-v i-v) l244-v (λ (X---v : matita-basics-logic.Not l244-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> P-v i-v)) -> matita-basics-logic.ex lzero l244-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) (matita-basics-logic.Not l244-v (P-v i-v)))) (λ (H-v : (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> P-v i-v) -> matita-basics-logic.False l244-v) -> matita-basics-logic.False-ind l244-v l244-v (λ (X-x-66-v : matita-basics-logic.False l244-v) -> matita-basics-logic.ex lzero l244-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) (matita-basics-logic.Not l244-v (P-v i-v)))) (H-v (λ (i-v : matita-arithmetics-nat.nat) -> λ (lti0-v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero l244-v (λ (X-x-66-v : matita-basics-logic.False lzero) -> P-v i-v) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) lti0-v (matita-arithmetics-nat.le-to-not-lt matita-arithmetics-nat.O i-v (matita-arithmetics-nat.le-O-n i-v)))))) X-clearme-v) (λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (X---v : matita-basics-logic.Not l244-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> P-v i-v)) -> matita-basics-logic.ex lzero l244-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.Not l244-v (P-v i-v)))) -> λ (H1-v : matita-basics-logic.Not l244-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v)) -> matita-basics-logic.match-Or l244-v l244-v (P-v m-v) (matita-basics-logic.Not l244-v (P-v m-v)) l244-v (λ (X---v : matita-basics-logic.Or l244-v l244-v (P-v m-v) (matita-basics-logic.Not l244-v (P-v m-v))) -> matita-basics-logic.ex lzero l244-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not l244-v (P-v i-v)))) (λ (H2-v : P-v m-v) -> matita-basics-logic.match-ex lzero l244-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.Not l244-v (P-v i-v))) l244-v (λ (X---v : matita-basics-logic.ex lzero l244-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.Not l244-v (P-v i-v)))) -> matita-basics-logic.ex lzero l244-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not l244-v (P-v i-v)))) (λ (i-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.Not l244-v (P-v i-v))) -> matita-basics-logic.match-And lzero l244-v (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.Not l244-v (P-v i-v)) l244-v (λ (X---v : matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.Not l244-v (P-v i-v))) -> matita-basics-logic.ex lzero l244-v matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i0-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not l244-v (P-v i0-v)))) (λ (leim-v : matita-arithmetics-nat.lt i-v m-v) -> λ (nPi-v : matita-basics-logic.Not l244-v (P-v i-v)) -> matita-basics-logic.ex-intro lzero l244-v matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i0-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not l244-v (P-v i0-v))) i-v (matita-basics-logic.conj lzero l244-v (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not l244-v (P-v i-v)) (matita-arithmetics-nat.le-S (matita-arithmetics-nat.S i-v) m-v leim-v) nPi-v)) X-clearme-v) (Hind-v (matita-basics-logic.not-to-not l244-v ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> P-v i-v) ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> P-v i-v) (λ (H3-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> P-v i-v) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (leiS-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) l244-v (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v))) -> P-v i-v) (λ (ltiS-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) -> H3-v i-v (matita-arithmetics-nat.le-S-S-to-le (matita-arithmetics-nat.S i-v) m-v ltiS-v)) (λ (eqi-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.eq-coerc l244-v (P-v m-v) (P-v i-v) H2-v (matita-basics-logic.rewrite-l lzero ((lsuc lzero) ⊔ (lsuc l244-v)) matita-arithmetics-nat.nat i-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq ((lsuc lzero) ⊔ (lsuc l244-v)) (Set l244-v) (P-v X---v) (P-v i-v)) (matita-basics-logic.refl ((lsuc lzero) ⊔ (lsuc l244-v)) (Set l244-v) (P-v i-v)) m-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.pred (matita-arithmetics-nat.S m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v (matita-arithmetics-nat.pred X---v)) (matita-arithmetics-nat.pred-Sn i-v) (matita-arithmetics-nat.S m-v) eqi-v) m-v (matita-arithmetics-nat.pred-Sn m-v)))) (matita-arithmetics-nat.le-to-or-lt-eq (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v) leiS-v)) H1-v))) (λ (H2-v : matita-basics-logic.Not l244-v (P-v m-v)) -> matita-basics-logic.ex-intro lzero l244-v matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero l244-v (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not l244-v (P-v i-v))) m-v (matita-basics-logic.conj lzero l244-v (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not l244-v (P-v m-v)) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.lt-plus-Sn-r m-v matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v X---v) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X---v) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus-n-Sm m-v matita-arithmetics-nat.O) m-v (matita-arithmetics-nat.plus-n-O m-v))) (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O m-v))) H2-v)) (decP-v m-v)) n-v

