open import Agda.Primitive
import matita-basics-relations
import matita-arithmetics-div-and-mod
import matita-basics-logic
import matita-arithmetics-nat

exp : (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat
exp x matita-arithmetics-nat.O = (matita-arithmetics-nat.S matita-arithmetics-nat.O)
exp x (matita-arithmetics-nat.S y) = matita-arithmetics-nat.times (exp x y) x
{-

(X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.nat) -> exp-body X---v X--1-v ≡ matita-arithmetics-nat.match-nat lzero (λ (X--2-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (p-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.times (exp X---v p-v) X---v) X--1-v

postulate exp-body : (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat

-- postulate rewrite-rule-162 : (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.nat) -> exp X---v X--1-v ≡ matita-arithmetics-nat.filter-nat lzero (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) (exp-body X---v) X--1-v


-- postulate rewrite-rule-163 : (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.nat) -> exp-body X---v X--1-v ≡ matita-arithmetics-nat.match-nat lzero (λ (X--2-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (p-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.times (exp X---v p-v) X---v) X--1-v
-}

exp-plus-times : (n-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp n-v (matita-arithmetics-nat.plus p-v q-v)) (matita-arithmetics-nat.times (exp n-v p-v) (exp n-v q-v))
exp-plus-times = λ (n-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> λ (q-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp n-v (matita-arithmetics-nat.plus X-x-365-v q-v)) (matita-arithmetics-nat.times (exp n-v X-x-365-v) (exp n-v q-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus matita-arithmetics-nat.O (exp n-v q-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp n-v q-v) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (exp n-v q-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp n-v q-v) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (exp n-v q-v)) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (exp n-v q-v)) (matita-arithmetics-nat.plus-O-n (exp n-v q-v))) (matita-arithmetics-nat.plus (exp n-v q-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.commutative-plus (exp n-v q-v) matita-arithmetics-nat.O)) (λ (x-366-v : matita-arithmetics-nat.nat) -> λ (X-x-368-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp n-v (matita-arithmetics-nat.plus x-366-v q-v)) (matita-arithmetics-nat.times (exp n-v x-366-v) (exp n-v q-v))) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus q-v x-366-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v X---v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (exp n-v x-366-v) n-v) (exp n-v q-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v q-v) (exp n-v x-366-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times X---v n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (exp n-v x-366-v) n-v) (exp n-v q-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times (exp n-v q-v) (exp n-v x-366-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-nat.times (exp n-v x-366-v) n-v) (exp n-v q-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (exp n-v x-366-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times (exp n-v q-v) (exp n-v x-366-v))) (matita-arithmetics-nat.times X---v (exp n-v q-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v q-v) (matita-arithmetics-nat.times n-v (exp n-v x-366-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times (exp n-v q-v) (exp n-v x-366-v))) X---v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times (exp n-v q-v) (exp n-v x-366-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times (exp n-v q-v) (exp n-v x-366-v))) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times (exp n-v q-v) (exp n-v x-366-v)))) (matita-arithmetics-nat.times (exp n-v q-v) (matita-arithmetics-nat.times n-v (exp n-v x-366-v))) (matita-arithmetics-nat.times-times (exp n-v q-v) n-v (exp n-v x-366-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times n-v (exp n-v x-366-v)) (exp n-v q-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times n-v (exp n-v x-366-v)) (exp n-v q-v))) (matita-arithmetics-nat.times (exp n-v x-366-v) n-v) (matita-arithmetics-nat.commutative-times (exp n-v x-366-v) n-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (exp n-v q-v) (exp n-v x-366-v)) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times (exp n-v q-v) (exp n-v x-366-v)) n-v)) (exp n-v (matita-arithmetics-nat.plus q-v x-366-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v x-366-v) (exp n-v q-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp n-v (matita-arithmetics-nat.plus q-v x-366-v)) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus x-366-v q-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp n-v X---v) (matita-arithmetics-nat.times (exp n-v x-366-v) (exp n-v q-v))) X-x-368-v (matita-arithmetics-nat.plus q-v x-366-v) (matita-arithmetics-nat.commutative-plus x-366-v q-v)) (matita-arithmetics-nat.times (exp n-v q-v) (exp n-v x-366-v)) (matita-arithmetics-nat.commutative-times (exp n-v x-366-v) (exp n-v q-v)))) (matita-arithmetics-nat.plus x-366-v q-v) (matita-arithmetics-nat.commutative-plus x-366-v q-v)) p-v

exp-n-O : (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (exp n-v matita-arithmetics-nat.O)
exp-n-O = λ (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O)

exp-n-1 : (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (exp n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))
exp-n-1 = λ (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat n-v) (matita-arithmetics-nat.plus n-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O n-v)

exp-1-n : (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (exp (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v)
exp-1-n = λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (exp (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-x-365-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-366-v : matita-arithmetics-nat.nat) -> λ (X-x-368-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (exp (matita-arithmetics-nat.S matita-arithmetics-nat.O) x-366-v)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (exp (matita-arithmetics-nat.S matita-arithmetics-nat.O) x-366-v) X-x-368-v) n-v

exp-2 : (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp n-v (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.times n-v n-v)
exp-2 = λ (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times X---v n-v) (matita-arithmetics-nat.times n-v n-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v n-v)) (matita-arithmetics-nat.plus n-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O n-v)

exp-exp-times : (n-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp (exp n-v p-v) q-v) (exp n-v (matita-arithmetics-nat.times p-v q-v))
exp-exp-times = λ (n-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> λ (q-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp (exp n-v p-v) X-x-365-v) (exp n-v (matita-arithmetics-nat.times p-v X-x-365-v))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (exp n-v x-1-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.times-n-O p-v)) (λ (x-366-v : matita-arithmetics-nat.nat) -> λ (X-x-368-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp (exp n-v p-v) x-366-v) (exp n-v (matita-arithmetics-nat.times p-v x-366-v))) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v p-v) (exp (exp n-v p-v) x-366-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (exp n-v (matita-arithmetics-nat.times p-v (matita-arithmetics-nat.S x-366-v)))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus p-v (matita-arithmetics-nat.times p-v x-366-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v p-v) (exp (exp n-v p-v) x-366-v)) (exp n-v X---v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v p-v) (exp n-v (matita-arithmetics-nat.times p-v x-366-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v p-v) (exp (exp n-v p-v) x-366-v)) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (exp (exp n-v p-v) x-366-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v p-v) (exp (exp n-v p-v) x-366-v)) (matita-arithmetics-nat.times (exp n-v p-v) X---v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v p-v) (exp (exp n-v p-v) x-366-v))) (exp n-v (matita-arithmetics-nat.times p-v x-366-v)) X-x-368-v) (exp n-v (matita-arithmetics-nat.plus p-v (matita-arithmetics-nat.times p-v x-366-v))) (exp-plus-times n-v p-v (matita-arithmetics-nat.times p-v x-366-v))) (matita-arithmetics-nat.times p-v (matita-arithmetics-nat.S x-366-v)) (matita-arithmetics-nat.times-n-Sm p-v x-366-v)) (matita-arithmetics-nat.times (exp (exp n-v p-v) x-366-v) (exp n-v p-v)) (matita-arithmetics-nat.commutative-times (exp (exp n-v p-v) x-366-v) (exp n-v p-v))) q-v

lt-O-exp : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-arithmetics-nat.lt matita-arithmetics-nat.O (exp n-v m-v)
lt-O-exp = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-arithmetics-nat.lt matita-arithmetics-nat.O (exp n-v X-x-365-v)) (λ (auto-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> matita-arithmetics-nat.lt-O-S matita-arithmetics-nat.O) (λ (a-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (X---v : matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) (exp n-v a-v)) -> λ (posn-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> matita-arithmetics-nat.le-times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (exp n-v a-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v (Hind-v posn-v) posn-v) m-v

lt-m-exp-nm : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> matita-arithmetics-nat.lt m-v (exp n-v m-v)
lt-m-exp-nm = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (lt1n-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.lt X-x-365-v (exp n-v X-x-365-v)) (matita-arithmetics-nat.lt-O-S matita-arithmetics-nat.O) (λ (n0-v : matita-arithmetics-nat.nat) -> λ (Hind-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S n0-v) (exp n-v n0-v)) -> matita-arithmetics-nat.transitive-le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.times (exp n-v n0-v) n-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.S n0-v))) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-nat.lt-plus-Sn-r (matita-arithmetics-nat.S n0-v) matita-arithmetics-nat.O n0-v) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) X---v) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v)))) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v)))) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) X---v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v)))) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) X---v)))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v)))) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) X---v)))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v)))) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) X---v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S n0-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v)))) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) X---v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S n0-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) X---v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S n0-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S n0-v)))) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus-O-n (matita-arithmetics-nat.S n0-v))) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus-O-n (matita-arithmetics-nat.S n0-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S n0-v) matita-arithmetics-nat.O)) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.times-O-n (matita-arithmetics-nat.S n0-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.S n0-v) matita-arithmetics-nat.O)) (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-Sm (matita-arithmetics-nat.S n0-v) matita-arithmetics-nat.O)) (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.times-n-Sm (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.associative-plus (matita-arithmetics-nat.S n0-v) matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v)))) (matita-arithmetics-nat.le-times (matita-arithmetics-nat.S n0-v) (exp n-v n0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v Hind-v lt1n-v)) m-v

exp-to-eq-O : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v matita-arithmetics-nat.O
exp-to-eq-O = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (ltin-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> λ (eq1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-arithmetics-nat.le-to-le-to-eq m-v matita-arithmetics-nat.O (matita-arithmetics-nat.le-S-S-to-le m-v matita-arithmetics-nat.O (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (exp n-v m-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp n-v m-v) x-1-v) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S m-v) x-1-v) (lt-m-exp-nm n-v m-v ltin-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O) eq1-v)) (matita-arithmetics-nat.le-O-n m-v)

let-clause-1258 : (b-v : matita-arithmetics-nat.nat) -> (lt1b-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) b-v) -> (n-v : matita-arithmetics-nat.nat) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp b-v n-v) b-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times b-v (exp b-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)
let-clause-1258 = λ (b-v : matita-arithmetics-nat.nat) -> λ (lt1b-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) b-v) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp b-v n-v) b-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp b-v n-v) b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) H-v (matita-arithmetics-nat.times b-v (exp b-v n-v)) (matita-arithmetics-nat.commutative-times (exp b-v n-v) b-v)

injective-exp-r : (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) b-v) -> matita-basics-relations.||injective|| lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> exp b-v i-v)
injective-exp-r = λ (b-v : matita-arithmetics-nat.nat) -> λ (lt1b-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) b-v) -> matita-arithmetics-nat.nat-elim2 lzero (λ (X---v : matita-arithmetics-nat.nat) -> λ (X-0-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp b-v X---v) (exp b-v X-0-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v X-0-v) (λ (n-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (exp b-v n-v)) -> matita-basics-logic.sym-eq lzero matita-arithmetics-nat.nat n-v matita-arithmetics-nat.O (exp-to-eq-O b-v n-v lt1b-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (exp b-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp b-v n-v) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (exp b-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) H-v))) (λ (n-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp b-v n-v) b-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n-v) matita-arithmetics-nat.O) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp b-v n-v) b-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp b-v n-v) b-v) x-1-v) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) x-1-v) (matita-arithmetics-nat.lt-to-le-to-lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) b-v) (matita-arithmetics-nat.times (exp b-v n-v) b-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) b-v) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) b-v)) lt1b-v (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times b-v (exp b-v n-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt X---v b-v) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) b-v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times b-v (exp b-v n-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (matita-arithmetics-nat.times b-v (exp b-v n-v)) b-v) (matita-arithmetics-nat.lt X---v (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) b-v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times b-v (exp b-v n-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (matita-arithmetics-nat.times b-v (exp b-v n-v)) b-v) (matita-arithmetics-nat.lt (matita-arithmetics-nat.times b-v (exp b-v n-v)) (matita-arithmetics-nat.times X---v b-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.times b-v (exp b-v n-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (matita-arithmetics-nat.times b-v (exp b-v n-v)) b-v) (matita-arithmetics-nat.lt (matita-arithmetics-nat.times b-v (exp b-v n-v)) X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (matita-arithmetics-nat.times b-v (exp b-v n-v)) b-v) (matita-arithmetics-nat.lt (matita-arithmetics-nat.times b-v (exp b-v n-v)) X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (matita-arithmetics-nat.times b-v (exp b-v n-v)) b-v)) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.times b-v (exp b-v n-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v (matita-arithmetics-nat.times b-v X---v)) (matita-arithmetics-nat.times-n-1 b-v) (matita-arithmetics-nat.times b-v (exp b-v n-v)) (let-clause-1258 b-v lt1b-v n-v H-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v (exp b-v n-v)) b-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times b-v (exp b-v n-v)) b-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (let-clause-1258 b-v lt1b-v n-v H-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (let-clause-1258 b-v lt1b-v n-v H-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (let-clause-1258 b-v lt1b-v n-v H-v))) (matita-arithmetics-nat.le-times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (exp b-v n-v) b-v b-v (lt-O-exp b-v n-v (matita-arithmetics-nat.lt-S-to-lt matita-arithmetics-nat.O b-v lt1b-v)) (matita-arithmetics-nat.le-n b-v))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) H-v) (matita-arithmetics-nat.not-le-Sn-n (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp b-v n-v) (exp b-v m-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v m-v) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp b-v n-v) b-v) (matita-arithmetics-nat.times (exp b-v m-v) b-v)) -> matita-basics-logic.eq-f lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.S n-v m-v (Hind-v (matita-arithmetics-div-and-mod.injective-times-l b-v (matita-arithmetics-nat.lt-S-to-lt matita-arithmetics-nat.O b-v lt1b-v) (exp b-v n-v) (exp b-v m-v) H-v)))

le-exp : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> (X--1-v : matita-arithmetics-nat.le n-v m-v) -> matita-arithmetics-nat.le (exp p-v n-v) (exp p-v m-v)
le-exp = matita-arithmetics-nat.nat-elim2 lzero (λ (X---v : matita-arithmetics-nat.nat) -> λ (X-0-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> (X--2-v : matita-arithmetics-nat.le X---v X-0-v) -> matita-arithmetics-nat.le (exp p-v X---v) (exp p-v X-0-v)) (λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (ltm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (len-v : matita-arithmetics-nat.le matita-arithmetics-nat.O n-v) -> lt-O-exp m-v n-v ltm-v) (λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (len-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.le (exp m-v (matita-arithmetics-nat.S n-v)) (exp m-v matita-arithmetics-nat.O)) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) matita-arithmetics-nat.O) len-v (matita-arithmetics-nat.not-le-Sn-O n-v))) (λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> (X--1-v : matita-arithmetics-nat.le n-v m-v) -> matita-arithmetics-nat.le (exp p-v n-v) (exp p-v m-v)) -> λ (p-v : matita-arithmetics-nat.nat) -> λ (posp-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> λ (lenm-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.S m-v)) -> matita-arithmetics-nat.le-times (exp p-v n-v) (exp p-v m-v) p-v p-v (Hind-v p-v posp-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.pred (matita-arithmetics-nat.S n-v)) (matita-arithmetics-nat.pred (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.le n-v m-v) (matita-arithmetics-nat.monotonic-pred (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.S m-v) lenm-v) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.pred (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.le n-v m-v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le n-v X---v) (matita-arithmetics-nat.le n-v m-v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le n-v m-v)) (matita-arithmetics-nat.pred (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.pred-Sn m-v)) (matita-arithmetics-nat.pred (matita-arithmetics-nat.S n-v)) (matita-arithmetics-nat.pred-Sn n-v)))) (matita-arithmetics-nat.le-n p-v))

le-exp1 : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O a-v) -> (X--1-v : matita-arithmetics-nat.le n-v m-v) -> matita-arithmetics-nat.le (exp n-v a-v) (exp m-v a-v)
le-exp1 = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (posa-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O a-v) -> λ (lenm-v : matita-arithmetics-nat.le n-v m-v) -> matita-arithmetics-nat.le-ind lzero (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (x-417-v : matita-arithmetics-nat.nat) -> λ (X-x-418-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) x-417-v) -> matita-arithmetics-nat.le (exp n-v x-417-v) (exp m-v x-417-v)) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le n-v m-v) (matita-arithmetics-nat.le (exp n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (exp m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) lenm-v (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le n-v m-v) (matita-arithmetics-nat.le X---v (exp m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le n-v m-v) (matita-arithmetics-nat.le n-v X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le n-v m-v)) (exp m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (exp-n-1 m-v)) (exp n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (exp-n-1 n-v))) (λ (a0-v : matita-arithmetics-nat.nat) -> λ (posa0-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) a0-v) -> λ (Hind-v : matita-arithmetics-nat.le (exp n-v a0-v) (exp m-v a0-v)) -> matita-arithmetics-nat.le-times (exp n-v a0-v) (exp m-v a0-v) n-v m-v Hind-v lenm-v) a-v posa-v

lt-exp : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> (X--1-v : matita-arithmetics-nat.lt n-v m-v) -> matita-arithmetics-nat.lt (exp p-v n-v) (exp p-v m-v)
lt-exp = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> λ (ltnm-v : matita-arithmetics-nat.lt n-v m-v) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt (exp p-v n-v) (exp p-v m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp p-v n-v) (exp p-v m-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (exp p-v n-v) (exp p-v m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp p-v n-v) (exp p-v m-v))) -> matita-arithmetics-nat.lt (exp p-v n-v) (exp p-v m-v)) (λ (auto-v : matita-arithmetics-nat.lt (exp p-v n-v) (exp p-v m-v)) -> auto-v) (λ (eqexp-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (exp p-v n-v) (exp p-v m-v)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.lt (exp p-v n-v) (exp p-v m-v)) (matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v m-v) (injective-exp-r p-v lt1p-v n-v m-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (exp p-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (exp p-v m-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (exp p-v m-v)) (exp p-v n-v) eqexp-v)) (matita-arithmetics-nat.lt-to-not-eq n-v m-v ltnm-v))) (matita-arithmetics-nat.le-to-or-lt-eq (exp p-v n-v) (exp p-v m-v) (le-exp n-v m-v p-v (matita-arithmetics-nat.lt-S-to-lt matita-arithmetics-nat.O p-v lt1p-v) (matita-arithmetics-nat.lt-to-le n-v m-v ltnm-v)))

lt-exp1 : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> (X--1-v : matita-arithmetics-nat.lt n-v m-v) -> matita-arithmetics-nat.lt (exp n-v p-v) (exp m-v p-v)
lt-exp1 = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> λ (posp-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> λ (ltnm-v : matita-arithmetics-nat.lt n-v m-v) -> matita-arithmetics-nat.le-ind lzero (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (x-417-v : matita-arithmetics-nat.nat) -> λ (X-x-418-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) x-417-v) -> matita-arithmetics-nat.lt (exp n-v x-417-v) (exp m-v x-417-v)) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt n-v m-v) (matita-arithmetics-nat.lt (exp n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (exp m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) ltnm-v (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt n-v m-v) (matita-arithmetics-nat.lt X---v (exp m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt n-v m-v) (matita-arithmetics-nat.lt n-v X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt n-v m-v)) (exp m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (exp-n-1 m-v)) (exp n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (exp-n-1 n-v))) (λ (p0-v : matita-arithmetics-nat.nat) -> λ (posp0-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p0-v) -> λ (Hind-v : matita-arithmetics-nat.lt (exp n-v p0-v) (exp m-v p0-v)) -> matita-arithmetics-nat.lt-times (exp n-v p0-v) (exp m-v p0-v) n-v m-v Hind-v ltnm-v) p-v posp-v

le-exp-to-le : (b-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) b-v) -> (X--1-v : matita-arithmetics-nat.le (exp b-v n-v) (exp b-v m-v)) -> matita-arithmetics-nat.le n-v m-v
le-exp-to-le = λ (b-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (lt1b-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) b-v) -> λ (leexp-v : matita-arithmetics-nat.le (exp b-v n-v) (exp b-v m-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.le n-v m-v) (matita-basics-logic.Not lzero (matita-arithmetics-nat.le n-v m-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.le n-v m-v) (matita-basics-logic.Not lzero (matita-arithmetics-nat.le n-v m-v))) -> matita-arithmetics-nat.le n-v m-v) (λ (auto-v : matita-arithmetics-nat.le n-v m-v) -> auto-v) (λ (notle-v : matita-basics-logic.Not lzero (matita-arithmetics-nat.le n-v m-v)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.le n-v m-v) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.le (exp b-v n-v) (exp b-v m-v)) leexp-v (matita-arithmetics-nat.lt-to-not-le (exp b-v m-v) (exp b-v n-v) (lt-exp m-v n-v b-v lt1b-v (matita-arithmetics-nat.not-le-to-lt n-v m-v notle-v))))) (matita-arithmetics-nat.decidable-le n-v m-v)

le-exp-to-le1 : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> (X--1-v : matita-arithmetics-nat.le (exp n-v p-v) (exp m-v p-v)) -> matita-arithmetics-nat.le n-v m-v
le-exp-to-le1 = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> λ (posp-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> λ (leexp-v : matita-arithmetics-nat.le (exp n-v p-v) (exp m-v p-v)) -> matita-arithmetics-nat.not-lt-to-le m-v n-v (matita-basics-logic.not-to-not lzero (matita-arithmetics-nat.lt m-v n-v) (matita-arithmetics-nat.lt (exp m-v p-v) (exp n-v p-v)) (lt-exp1 m-v n-v p-v posp-v) (matita-arithmetics-nat.le-to-not-lt (exp n-v p-v) (exp m-v p-v) leexp-v))

lt-exp-to-lt : (a-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O a-v) -> (X--1-v : matita-arithmetics-nat.lt (exp a-v n-v) (exp a-v m-v)) -> matita-arithmetics-nat.lt n-v m-v
lt-exp-to-lt = λ (a-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (lt1a-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O a-v) -> λ (ltexp-v : matita-arithmetics-nat.lt (exp a-v n-v) (exp a-v m-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) m-v) (matita-basics-logic.Not lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) m-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) m-v) (matita-basics-logic.Not lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) m-v))) -> matita-arithmetics-nat.lt n-v m-v) (λ (auto-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) m-v) -> auto-v) (λ (H-v : matita-basics-logic.Not lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) m-v)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.lt n-v m-v) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt (exp a-v n-v) (exp a-v m-v)) ltexp-v (matita-arithmetics-nat.le-to-not-lt (exp a-v m-v) (exp a-v n-v) (le-exp m-v n-v a-v lt1a-v (matita-arithmetics-nat.not-lt-to-le n-v m-v H-v))))) (matita-arithmetics-nat.decidable-le (matita-arithmetics-nat.S n-v) m-v)

lt-exp-to-lt1 : (a-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O a-v) -> (X--1-v : matita-arithmetics-nat.lt (exp n-v a-v) (exp m-v a-v)) -> matita-arithmetics-nat.lt n-v m-v
lt-exp-to-lt1 = λ (a-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (posa-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O a-v) -> λ (ltexp-v : matita-arithmetics-nat.lt (exp n-v a-v) (exp m-v a-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) m-v) (matita-basics-logic.Not lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) m-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) m-v) (matita-basics-logic.Not lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) m-v))) -> matita-arithmetics-nat.lt n-v m-v) (λ (auto-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) m-v) -> auto-v) (λ (H-v : matita-basics-logic.Not lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) m-v)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.lt n-v m-v) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt (exp n-v a-v) (exp m-v a-v)) ltexp-v (matita-arithmetics-nat.le-to-not-lt (exp m-v a-v) (exp n-v a-v) (le-exp1 m-v n-v a-v posa-v (matita-arithmetics-nat.not-lt-to-le n-v m-v H-v))))) (matita-arithmetics-nat.decidable-le (matita-arithmetics-nat.S n-v) m-v)

times-exp : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v p-v) (exp m-v p-v)) (exp (matita-arithmetics-nat.times n-v m-v) p-v)
times-exp = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v X-x-365-v) (exp m-v X-x-365-v)) (exp (matita-arithmetics-nat.times n-v m-v) X-x-365-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v matita-arithmetics-nat.O) (exp m-v matita-arithmetics-nat.O))) (λ (p0-v : matita-arithmetics-nat.nat) -> λ (Hind-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (exp n-v p0-v) (exp m-v p0-v)) (exp (matita-arithmetics-nat.times n-v m-v) p0-v)) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (exp n-v p0-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times X---v (matita-arithmetics-nat.times (exp m-v p0-v) m-v)) (matita-arithmetics-nat.times (exp (matita-arithmetics-nat.times n-v m-v) p0-v) (matita-arithmetics-nat.times n-v m-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (exp m-v p0-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times n-v (exp n-v p0-v)) X---v) (matita-arithmetics-nat.times (exp (matita-arithmetics-nat.times n-v m-v) p0-v) (matita-arithmetics-nat.times n-v m-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times (exp n-v p0-v) (matita-arithmetics-nat.times m-v (exp m-v p0-v)))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (exp (matita-arithmetics-nat.times n-v m-v) p0-v) (matita-arithmetics-nat.times n-v m-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times (exp n-v p0-v) (exp m-v p0-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v X---v) (matita-arithmetics-nat.times (exp (matita-arithmetics-nat.times n-v m-v) p0-v) (matita-arithmetics-nat.times n-v m-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (exp (matita-arithmetics-nat.times n-v m-v) p0-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times m-v X---v)) (matita-arithmetics-nat.times (exp (matita-arithmetics-nat.times n-v m-v) p0-v) (matita-arithmetics-nat.times n-v m-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times n-v m-v) (exp (matita-arithmetics-nat.times n-v m-v) p0-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times m-v (exp (matita-arithmetics-nat.times n-v m-v) p0-v))) X---v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times m-v (exp (matita-arithmetics-nat.times n-v m-v) p0-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times m-v (exp (matita-arithmetics-nat.times n-v m-v) p0-v))) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times m-v (exp (matita-arithmetics-nat.times n-v m-v) p0-v)))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times n-v m-v) (exp (matita-arithmetics-nat.times n-v m-v) p0-v)) (matita-arithmetics-nat.associative-times n-v m-v (exp (matita-arithmetics-nat.times n-v m-v) p0-v))) (matita-arithmetics-nat.times (exp (matita-arithmetics-nat.times n-v m-v) p0-v) (matita-arithmetics-nat.times n-v m-v)) (matita-arithmetics-nat.commutative-times (exp (matita-arithmetics-nat.times n-v m-v) p0-v) (matita-arithmetics-nat.times n-v m-v))) (matita-arithmetics-nat.times (exp n-v p0-v) (exp m-v p0-v)) Hind-v) (matita-arithmetics-nat.times (exp n-v p0-v) (matita-arithmetics-nat.times m-v (exp m-v p0-v))) (matita-arithmetics-nat.times-times (exp n-v p0-v) m-v (exp m-v p0-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times n-v (exp n-v p0-v)) (matita-arithmetics-nat.times m-v (exp m-v p0-v))) (matita-arithmetics-nat.associative-times n-v (exp n-v p0-v) (matita-arithmetics-nat.times m-v (exp m-v p0-v)))) (matita-arithmetics-nat.times (exp m-v p0-v) m-v) (matita-arithmetics-nat.commutative-times (exp m-v p0-v) m-v)) (matita-arithmetics-nat.times (exp n-v p0-v) n-v) (matita-arithmetics-nat.commutative-times (exp n-v p0-v) n-v)) p-v

