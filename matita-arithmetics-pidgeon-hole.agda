
open import Agda.Primitive

import matita-basics-bool
import matita-arithmetics-bounded-quantifiers
import matita-basics-logic
import matita-basics-lists-list
import matita-arithmetics-nat
decidable-mem-nat : (n-v : matita-arithmetics-nat.nat) -> (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> matita-basics-logic.decidable lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v l-v)
decidable-mem-nat = λ (n-v : matita-arithmetics-nat.nat) -> λ (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> matita-basics-lists-list.list-ind lzero lzero matita-arithmetics-nat.nat (λ (X-x-716-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> matita-basics-logic.decidable lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v X-x-716-v)) (matita-basics-logic.or-intror lzero lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) (matita-basics-logic.nmk lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)) (matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.False lzero)))) (λ (a-v : matita-arithmetics-nat.nat) -> λ (tl-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> λ (Htl-v : matita-basics-logic.decidable lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v tl-v)) -> matita-arithmetics-bounded-quantifiers.decidable-or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v a-v) (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v tl-v) (matita-arithmetics-nat.decidable-eq-nat n-v a-v) Htl-v) l-v

length-unique-le : (n-v : matita-arithmetics-nat.nat) -> (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> (X---v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> (X--1-v : (x-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v n-v) -> matita-arithmetics-nat.le (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) n-v
length-unique-le = λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> (X---v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> (X--1-v : (x-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v X-x-365-v) -> matita-arithmetics-nat.le (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) X-x-365-v) (λ (X-clearme-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> matita-basics-lists-list.match-list lzero matita-arithmetics-nat.nat lzero (λ (X---v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat X---v) -> (X--2-v : (x-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v X---v) -> matita-arithmetics-nat.lt x-v matita-arithmetics-nat.O) -> matita-arithmetics-nat.le (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat X---v) matita-arithmetics-nat.O) (λ (auto-v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)) -> λ (auto'-v : (x-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)) -> matita-arithmetics-nat.lt x-v matita-arithmetics-nat.O) -> matita-arithmetics-nat.le-n (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) (λ (a-v : matita-arithmetics-nat.nat) -> λ (tl-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat a-v tl-v)) -> λ (H-v : (x-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat a-v tl-v)) -> matita-arithmetics-nat.lt x-v matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.le (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat a-v tl-v)) matita-arithmetics-nat.O) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt a-v matita-arithmetics-nat.O) (H-v a-v (matita-basics-logic.or-introl lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat a-v a-v) (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat a-v tl-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat a-v))) (matita-arithmetics-nat.le-to-not-lt matita-arithmetics-nat.O a-v (matita-arithmetics-nat.le-O-n a-v)))) X-clearme-v) (λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> (X---v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> (X--1-v : (x-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v m-v) -> matita-arithmetics-nat.le (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) m-v) -> λ (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> λ (Huni-v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> λ (Hmem-v : (x-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v)) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v))) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v)) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v))) x-1-v) -> matita-arithmetics-nat.le x-1-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.transitive-le (matita-arithmetics-nat.plus (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v)) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v))) (matita-arithmetics-nat.S m-v) (matita-arithmetics-nat.le-plus (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v)) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v)) (matita-basics-lists-list.length-filter-eqb m-v l-v Huni-v) (matita-arithmetics-nat.le-n (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v)))) (matita-arithmetics-nat.le-S-S (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v))) m-v (Hind-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v) (matita-basics-lists-list.unique-filter lzero matita-arithmetics-nat.nat l-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) Huni-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (memx-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) l-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt x-v m-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v m-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt x-v m-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v m-v)) -> matita-arithmetics-nat.lt x-v m-v) (λ (auto-v : matita-arithmetics-nat.lt x-v m-v) -> auto-v) (λ (eqxm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v m-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.lt x-v m-v) (matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v m-v) eqxm-v (matita-basics-logic.sym-not-eq lzero matita-arithmetics-nat.nat m-v x-v (matita-arithmetics-nat.eqb-false-to-not-eq m-v x-v (matita-basics-bool.injective-notb (matita-arithmetics-nat.eqb m-v x-v) matita-basics-bool.false (matita-basics-lists-list.mem-filter-true lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) x-v l-v memx-v)))))) (matita-arithmetics-nat.le-to-or-lt-eq x-v m-v (matita-arithmetics-nat.le-S-S-to-le x-v m-v (Hmem-v x-v (matita-basics-lists-list.mem-filter lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) x-v l-v memx-v)))))))) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) (matita-basics-lists-list.filter-length2 lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v)) n-v

eq-length-to-mem : (n-v : matita-arithmetics-nat.nat) -> (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) (matita-arithmetics-nat.S n-v)) -> (X--1-v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> (X--2-v : (x-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.le x-v n-v) -> matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v l-v
eq-length-to-mem = λ (n-v : matita-arithmetics-nat.nat) -> λ (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> λ (H1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) (matita-arithmetics-nat.S n-v)) -> λ (H2-v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> λ (H3-v : (x-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.le x-v n-v) -> matita-basics-logic.match-Or lzero lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v l-v) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v l-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v l-v) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v l-v))) -> matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v l-v) (λ (auto-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v l-v) -> auto-v) (λ (H4-v : matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v l-v)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v l-v) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.gt (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.S n-v)) -> matita-arithmetics-nat.gt x-v n-v) (matita-arithmetics-nat.le-n (matita-arithmetics-nat.S n-v)) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) H1-v) (matita-arithmetics-nat.le-to-not-lt (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) n-v (length-unique-le n-v l-v H2-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (memx-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt x-v n-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v n-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt x-v n-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v n-v)) -> matita-arithmetics-nat.lt x-v n-v) (λ (auto-v : matita-arithmetics-nat.lt x-v n-v) -> auto-v) (λ (Heq-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v n-v) -> matita-arithmetics-nat.not-le-to-lt n-v x-v (matita-basics-logic.not-to-not lzero (matita-arithmetics-nat.le n-v x-v) (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat n-v l-v) (λ (X---v : matita-arithmetics-nat.le n-v x-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat x-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v x-1-v) -> matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-1-v l-v) memx-v n-v Heq-v) H4-v)) (matita-arithmetics-nat.le-to-or-lt-eq x-v n-v (H3-v x-v memx-v))))))) (decidable-mem-nat n-v l-v)

eq-length-to-mem-all : (n-v : matita-arithmetics-nat.nat) -> (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) n-v) -> (X--1-v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> (X--2-v : (x-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v n-v) -> (i-v : matita-arithmetics-nat.nat) -> (X--3-v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v
eq-length-to-mem-all = λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) X-x-365-v) -> (X--1-v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> (X--2-v : (x-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v X-x-365-v) -> (i-v : matita-arithmetics-nat.nat) -> (X--3-v : matita-arithmetics-nat.lt i-v X-x-365-v) -> matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v) (λ (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) matita-arithmetics-nat.O) -> λ (X-0-v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> λ (X-1-v : (x-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v matita-arithmetics-nat.O) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (lti0-v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) lti0-v (matita-arithmetics-nat.not-le-Sn-O i-v))) (λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) m-v) -> (X--1-v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> (X--2-v : (x-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v m-v) -> (i-v : matita-arithmetics-nat.nat) -> (X--3-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v) -> λ (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) (matita-arithmetics-nat.S m-v)) -> λ (H1-v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> λ (H2-v : (x-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.S m-v)) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (lei-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v))) -> matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v) (λ (leim-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) -> matita-basics-lists-list.mem-filter lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) i-v l-v (matita-basics-logic.match-Or lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)))) (matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v)) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)))) (matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v)) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)))) -> matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) l-v)) (λ (X-clearme-v : matita-basics-logic.And lzero lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)))) -> matita-basics-logic.match-And lzero lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)))) -> matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) l-v)) (λ (memm-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v) -> λ (Hfilter-v : matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) -> Hind-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) l-v) (matita-arithmetics-nat.injective-S (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) l-v)) m-v (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) l-v))) x-1-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v)) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v))) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v)) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v))) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) l-v))) x-1-v) (matita-basics-logic.eq-ind-r lzero lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)) (λ (x-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) x-v (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) l-v))) (matita-arithmetics-nat.plus (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat x-v) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) l-v)))) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) l-v)))) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) Hfilter-v) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) (matita-basics-lists-list.filter-length2 lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v)) (matita-arithmetics-nat.S m-v) H-v)) (matita-basics-lists-list.unique-filter lzero matita-arithmetics-nat.nat l-v (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) H1-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (memx-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) l-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v))) -> matita-arithmetics-nat.lt x-v m-v) (λ (H3-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v)) -> matita-arithmetics-nat.le-S-S-to-le (matita-arithmetics-nat.S x-v) m-v H3-v) (λ (H3-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.lt x-v m-v) (matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v x-v) (matita-arithmetics-nat.injective-S m-v x-v (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S x-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v)) (matita-arithmetics-nat.S x-v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S x-v) X---v) H3-v (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) H-v)) (matita-arithmetics-nat.S m-v) H-v)) (matita-arithmetics-nat.eqb-false-to-not-eq m-v x-v (matita-basics-bool.injective-notb (matita-arithmetics-nat.eqb m-v x-v) matita-basics-bool.false (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x0-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x0-v matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool x0-v (matita-basics-bool.notb matita-basics-bool.false)) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) (matita-basics-lists-list.mem-filter-true lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) x-v l-v memx-v)))))) (matita-arithmetics-nat.le-to-or-lt-eq (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v) (H2-v x-v (matita-basics-lists-list.mem-filter lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) x-v l-v memx-v)))) i-v (matita-arithmetics-nat.le-S-S-to-le (matita-arithmetics-nat.S i-v) m-v leim-v)) X-clearme-v) (λ (X-clearme-v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v)) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v)) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v)) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) -> matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) l-v)) (λ (H0-v : matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> (X---v : matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)) -> matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i0-v)) l-v)) (matita-basics-logic.absurd lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v) (eq-length-to-mem m-v l-v (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v)) (matita-arithmetics-nat.S m-v) H-v) H1-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (memx-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.le-S-S-to-le x-v m-v (H2-v x-v memx-v))) H0-v)) X-clearme-v) (matita-basics-lists-list.filter-eqb m-v l-v H1-v))) (λ (eqi-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v)) -> eq-length-to-mem i-v l-v (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) x-v) H-v (matita-arithmetics-nat.S i-v) eqi-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.S m-v)) -> matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) H1-v (matita-arithmetics-nat.S i-v) eqi-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.S m-v)) -> (x0-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x0-v l-v) -> matita-arithmetics-nat.le x0-v i-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (Hx-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.le-S-S-to-le x-v i-v (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (x0-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x0-v (matita-arithmetics-nat.S m-v)) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) x0-v) (H2-v x-v Hx-v) (matita-arithmetics-nat.S i-v) eqi-v)) (matita-arithmetics-nat.S i-v) eqi-v)) (matita-arithmetics-nat.le-to-or-lt-eq (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S m-v) lei-v)) n-v

lt-length-to-not-mem : (n-v : matita-arithmetics-nat.nat) -> (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> (X---v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> (X--1-v : (x-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v n-v) -> (X--2-v : matita-arithmetics-nat.lt (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) n-v) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v)))
lt-length-to-not-mem = λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> (X---v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> (X--1-v : (x-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v X-x-365-v) -> (X--2-v : matita-arithmetics-nat.lt (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) X-x-365-v) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v X-x-365-v) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v)))) (λ (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> λ (X-0-v : (x-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v matita-arithmetics-nat.O) -> λ (H-v : matita-arithmetics-nat.lt (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v)))) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v)) matita-arithmetics-nat.O) H-v (matita-arithmetics-nat.not-le-Sn-O (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v)))) (λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> (X---v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> (X--1-v : (x-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v m-v) -> (X--2-v : matita-arithmetics-nat.lt (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) m-v) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v)))) -> λ (l-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> λ (Huni-v : matita-basics-lists-list.unique lzero matita-arithmetics-nat.nat l-v) -> λ (Hmem-v : (x-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v l-v) -> matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.S m-v)) -> λ (Hlen-v : matita-arithmetics-nat.lt (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)))) (matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v)) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)))) (matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v)) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)))) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v)))) (λ (X-clearme-v : matita-basics-logic.And lzero lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)))) -> matita-basics-logic.match-And lzero lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)))) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v)))) (λ (memm-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v) -> λ (Hfilter-v : matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) -> matita-basics-logic.match-ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v)))) lzero (λ (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v))))) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v)))) (λ (i-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) l-v)))) -> matita-basics-logic.match-And lzero lzero (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) l-v))) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) l-v)))) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i0-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i0-v l-v)))) (λ (ltim-v : matita-arithmetics-nat.lt i-v m-v) -> λ (memi-v : matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) l-v))) -> matita-basics-logic.ex-intro lzero lzero matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i0-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i0-v l-v))) i-v (matita-basics-logic.conj lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v)) (matita-arithmetics-nat.le-S (matita-arithmetics-nat.S i-v) m-v ltim-v) (matita-basics-logic.not-to-not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v) (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) l-v)) (matita-basics-lists-list.mem-filter-l lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) i-v l-v (matita-basics-bool.injective-notb (matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i-v)) matita-basics-bool.true (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool (matita-arithmetics-nat.eqb m-v i-v) (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v (matita-arithmetics-nat.eqb m-v i-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool x-v (matita-basics-bool.notb matita-basics-bool.true)) (matita-arithmetics-nat.not-eq-to-eqb-false m-v i-v (matita-basics-logic.sym-not-eq lzero matita-arithmetics-nat.nat i-v m-v (matita-arithmetics-nat.lt-to-not-eq i-v m-v ltim-v))) (matita-basics-bool.notb (matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v i-v))) (matita-basics-bool.notb-notb (matita-arithmetics-nat.eqb m-v i-v))))) memi-v))) X-clearme0-v) (Hind-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v) (matita-basics-lists-list.unique-filter lzero matita-arithmetics-nat.nat l-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) Huni-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (memx-v : matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat x-v (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) l-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v))) -> matita-arithmetics-nat.lt x-v m-v) (λ (H-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v)) -> matita-arithmetics-nat.le-S-S-to-le (matita-arithmetics-nat.S x-v) m-v H-v) (λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.lt x-v m-v) (matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v x-v) (matita-arithmetics-nat.injective-S m-v x-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.S x-v) H-v)) (matita-arithmetics-nat.eqb-false-to-not-eq m-v x-v (matita-basics-bool.injective-notb (matita-arithmetics-nat.eqb m-v x-v) matita-basics-bool.false (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x0-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x0-v matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool x0-v (matita-basics-bool.notb matita-basics-bool.false)) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) (matita-basics-lists-list.mem-filter-true lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) x-v l-v memx-v)))))) (matita-arithmetics-nat.le-to-or-lt-eq (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S m-v) (Hmem-v x-v (matita-basics-lists-list.mem-filter lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) x-v l-v memx-v)))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v)) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v))) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v)) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v))) x-1-v) -> (X---v : matita-arithmetics-nat.lt x-1-v (matita-arithmetics-nat.S m-v)) -> matita-arithmetics-nat.lt (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v)) m-v) (matita-basics-logic.eq-ind-r lzero lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)) (λ (x-v : matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) x-v (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) -> (X--1-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.plus (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat x-v) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) l-v))) (matita-arithmetics-nat.S m-v)) -> matita-arithmetics-nat.lt (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x0-v)) l-v)) m-v) (λ (H-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.plus (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.cons lzero matita-arithmetics-nat.nat m-v (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v))) (matita-arithmetics-nat.S m-v)) -> matita-arithmetics-nat.le-S-S-to-le (matita-arithmetics-nat.S (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.notb (matita-arithmetics-nat.eqb m-v x-v)) l-v))) m-v H-v) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) Hfilter-v) (matita-basics-lists-list.length lzero matita-arithmetics-nat.nat l-v) (matita-basics-lists-list.filter-length2 lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) Hlen-v))) X-clearme-v) (λ (X-clearme-v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v)) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v)) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v)) (matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat))) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v)))) (λ (H-v : matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v)) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-lists-list.list lzero matita-arithmetics-nat.nat) (matita-basics-lists-list.filter lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.eqb m-v) l-v) (matita-basics-lists-list.nil lzero matita-arithmetics-nat.nat)) -> matita-basics-logic.ex-intro lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat i-v l-v))) m-v (matita-basics-logic.conj lzero lzero (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.Not lzero (matita-basics-lists-list.mem lzero matita-arithmetics-nat.nat m-v l-v)) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.lt-plus-Sn-r m-v matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus X--1-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v X--1-v) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X--1-v) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus-n-Sm m-v matita-arithmetics-nat.O) m-v (matita-arithmetics-nat.plus-n-O m-v))) (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O m-v))) H-v)) X-clearme-v) (matita-basics-lists-list.filter-eqb m-v l-v Huni-v)) n-v

