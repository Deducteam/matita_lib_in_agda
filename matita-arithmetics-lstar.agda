open import Agda.Primitive
open import matita-basics-logic
open import matita-arithmetics-nat
open import matita-basics-relations

ltransitive : (l25 l21 : Level) -> (B : Set l25) -> predicate ((lsuc lzero) ⊔ (l25 ⊔ (lsuc l21))) (l25 ⊔ l21) ((X-- : nat) -> relation l25 l21 B)
ltransitive = λ (l25 l21 : Level) -> λ (B : Set l25) -> λ (R : (X-- : nat) -> relation l25 l21 B) -> (l1 : nat) -> (b1 : B) -> (b : B) -> (X-- : R l1 b1 b) -> (l2 : nat) -> (b2 : B) -> (X--1 : R l2 b b2) -> R (plus l1 l2) b1 b2

inv-ltransitive : (l24 l20 : Level) -> (B : Set l24) -> predicate ((lsuc lzero) ⊔ (l24 ⊔ (lsuc l20))) (l24 ⊔ l20) ((X-- : nat) -> relation l24 l20 B)
inv-ltransitive = λ (l24 l20 : Level) -> λ (B : Set l24) -> λ (R : (X-- : nat) -> relation l24 l20 B) -> (l1 : nat) -> (l2 : nat) -> (b1 : B) -> (b2 : B) -> (X-- : R (plus l1 l2) b1 b2) -> ex2 l24 l20 l20 B (λ (b : B) -> R l1 b1 b) (λ (b : B) -> R l2 b b2)

data lstar (l0-v : Level) (B-v : Set l0-v) (R-v : relation l0-v l0-v B-v) : (X---v : nat) -> relation l0-v l0-v B-v where
  lstar-O' : (b-v : B-v) -> lstar l0-v B-v R-v O b-v b-v
  lstar-S' : (b1-v : B-v) -> (b-v : B-v) -> (X---v : R-v b1-v b-v) -> (l-v : nat) -> (b2-v : B-v) -> (X--1-v : lstar l0-v B-v R-v l-v b-v b2-v) -> lstar l0-v B-v R-v (plus l-v (S O)) b1-v b2-v

lstar-O : (l1-v : Level) -> (B-v : Set l1-v) -> (R-v : relation l1-v l1-v B-v) -> (b-v : B-v) -> lstar l1-v B-v R-v O b-v b-v
lstar-O _ _ _ = lstar-O'

lstar-S : (l6-v : Level) -> (B-v : Set l6-v) -> (R-v : relation l6-v l6-v B-v) -> (b1-v : B-v) -> (b-v : B-v) -> (X---v : R-v b1-v b-v) -> (l-v : nat) -> (b2-v : B-v) -> (X--1-v : lstar l6-v B-v R-v l-v b-v b2-v) -> lstar l6-v B-v R-v (plus l-v (S O)) b1-v b2-v
lstar-S _ _ _ = lstar-S'

match-lstar : (l16-v : Level) -> (B-v : Set l16-v) -> (X-R-v : relation l16-v l16-v B-v) -> (return-sort-v : Level) -> (return-type-v : (X---v : nat) -> (X--1-v : B-v) -> (X--2-v : B-v) -> (z-v : lstar l16-v B-v X-R-v X---v X--1-v X--2-v) -> Set return-sort-v) -> (case-lstar-O-v : (b-v : B-v) -> return-type-v O b-v b-v (lstar-O l16-v B-v X-R-v b-v)) -> (case-lstar-S-v : (b1-v : B-v) -> (b-v : B-v) -> (X---v : X-R-v b1-v b-v) -> (l-v : nat) -> (b2-v : B-v) -> (X--1-v : lstar l16-v B-v X-R-v l-v b-v b2-v) -> return-type-v (plus l-v (S O)) b1-v b2-v (lstar-S l16-v B-v X-R-v b1-v b-v X---v l-v b2-v X--1-v)) -> (X---v : nat) -> (X--1-v : B-v) -> (X--2-v : B-v) -> (z-v : lstar l16-v B-v X-R-v X---v X--1-v X--2-v) -> return-type-v X---v X--1-v X--2-v z-v
match-lstar _ _ _ _ _ case0 caseS _ _ _ (lstar-O' x) = case0 x
match-lstar _ _ _ _ _ case0 caseS _ _ _ (lstar-S' x1 x2 x3 x4 x5 x6) = caseS x1 x2 x3 x4 x5 x6

lstar-ind : (l21-v l17-v : Level) -> (B-v : Set l21-v) -> (X-R-v : relation l21-v l21-v B-v) -> (Q--v : (x-1233-v : nat) -> (x-1232-v : B-v) -> (x-1231-v : B-v) -> (X-x-1234-v : lstar l21-v B-v X-R-v x-1233-v x-1232-v x-1231-v) -> Set l17-v) -> (X-H-lstar-O-v : (b-v : B-v) -> Q--v O b-v b-v (lstar-O l21-v B-v X-R-v b-v)) -> (X-H-lstar-S-v : (b1-v : B-v) -> (b-v : B-v) -> (x-1236-v : X-R-v b1-v b-v) -> (l-v : nat) -> (b2-v : B-v) -> (x-1235-v : lstar l21-v B-v X-R-v l-v b-v b2-v) -> (X-x-1238-v : Q--v l-v b-v b2-v x-1235-v) -> Q--v (plus l-v (S O)) b1-v b2-v (lstar-S l21-v B-v X-R-v b1-v b-v x-1236-v l-v b2-v x-1235-v)) -> (x-1233-v : nat) -> (x-1232-v : B-v) -> (x-1231-v : B-v) -> (x-1234-v : lstar l21-v B-v X-R-v x-1233-v x-1232-v x-1231-v) -> Q--v x-1233-v x-1232-v x-1231-v x-1234-v
lstar-ind _ _ _ _ _ case0 caseS _ _ _ (lstar-O' x) = case0 x
lstar-ind A1 A2 A3 A4 A5 case0 caseS A6 A7 A8 (lstar-S' x1 x2 x3 x4 x5 x6) = caseS x1 x2 x3 x4 x5 x6 (lstar-ind A1 A2 A3 A4 A5 case0 caseS x4 x2 x5 x6)



lstar-inv-ind : (l66 l54 : Level) -> (x1 : Set l66) -> (x2 : relation l66 l66 x1) -> (x3 : nat) -> (x4 : x1) -> (x5 : x1) -> (X-Hterm : lstar l66 x1 x2 x3 x4 x5) -> (P : (X-z2089 : nat) -> (X-z2088 : x1) -> (X-z2087 : x1) -> Set l54) -> (X-H1 : (b : x1) -> (X-z2092 : eq lzero nat x3 O) -> (X-z2091 : eq l66 x1 x4 b) -> (X-z2090 : eq l66 x1 x5 b) -> P O b b) -> (X-H2 : (b1 : x1) -> (b : x1) -> (X-x-1236 : x2 b1 b) -> (l : nat) -> (b2 : x1) -> (X-x-1235 : lstar l66 x1 x2 l b b2) -> (X-x-1238 : (X-z2092 : eq lzero nat x3 l) -> (X-z2091 : eq l66 x1 x4 b) -> (X-z2090 : eq l66 x1 x5 b2) -> P l b b2) -> (X-z2092 : eq lzero nat x3 (plus l (S O))) -> (X-z2091 : eq l66 x1 x4 b1) -> (X-z2090 : eq l66 x1 x5 b2) -> P (plus l (S O)) b1 b2) -> P x3 x4 x5
lstar-inv-ind = λ (l66 l54 : Level) -> λ (x1 : Set l66) -> λ (x2 : relation l66 l66 x1) -> λ (x3 : nat) -> λ (x4 : x1) -> λ (x5 : x1) -> λ (Hterm : lstar l66 x1 x2 x3 x4 x5) -> λ (P : (X-z2089 : nat) -> (X-z2088 : x1) -> (X-z2087 : x1) -> Set l54) -> λ (H1 : (b : x1) -> (X-z2092 : eq lzero nat x3 O) -> (X-z2091 : eq l66 x1 x4 b) -> (X-z2090 : eq l66 x1 x5 b) -> P O b b) -> λ (H2 : (b1 : x1) -> (b : x1) -> (X-x-1236 : x2 b1 b) -> (l : nat) -> (b2 : x1) -> (X-x-1235 : lstar l66 x1 x2 l b b2) -> (X-x-1238 : (X-z2092 : eq lzero nat x3 l) -> (X-z2091 : eq l66 x1 x4 b) -> (X-z2090 : eq l66 x1 x5 b2) -> P l b b2) -> (X-z2092 : eq lzero nat x3 (plus l (S O))) -> (X-z2091 : eq l66 x1 x4 b1) -> (X-z2090 : eq l66 x1 x5 b2) -> P (plus l (S O)) b1 b2) -> lstar-ind l66 (l66 ⊔ l54) x1 x2 (λ (x-1233 : nat) -> λ (x-1232 : x1) -> λ (x-1231 : x1) -> λ (X-x-1234 : lstar l66 x1 x2 x-1233 x-1232 x-1231) -> (X-z2092 : eq lzero nat x3 x-1233) -> (X-z2091 : eq l66 x1 x4 x-1232) -> (X-z2090 : eq l66 x1 x5 x-1231) -> P x-1233 x-1232 x-1231) H1 H2 x3 x4 x5 Hterm (refl lzero nat x3) (refl l66 x1 x4) (refl l66 x1 x5)

lstar-ind-l-aux : (l80 l73 : Level) -> (B : Set l80) -> (R : (X-- : B) -> (X--1 : B) -> Set l80) -> (b2 : B) -> (P : relation2 lzero l80 l73 nat B) -> (X-- : P O b2) -> (X--1 : (l : nat) -> (b1 : B) -> (b : B) -> (X--1 : R b1 b) -> (X--2 : lstar l80 B R l b b2) -> (X--3 : P l b) -> P (plus l (S O)) b1) -> (l : nat) -> (b1 : B) -> (b : B) -> (X--2 : lstar l80 B R l b1 b) -> (X--3 : eq l80 B b b2) -> P l b1
lstar-ind-l-aux = λ (l80 l73 : Level) -> λ (B : Set l80) -> λ (R : (X-- : B) -> (X--1 : B) -> Set l80) -> λ (b2 : B) -> λ (P : relation2 lzero l80 l73 nat B) -> λ (H1 : P O b2) -> λ (H2 : (l : nat) -> (b1 : B) -> (b : B) -> (X-- : R b1 b) -> (X--1 : lstar l80 B R l b b2) -> (X--2 : P l b) -> P (plus l (S O)) b1) -> λ (l : nat) -> λ (b1 : B) -> λ (b : B) -> λ (H : lstar l80 B R l b1 b) -> lstar-ind l80 (l80 ⊔ l73) B R (λ (x-1233 : nat) -> λ (x-1232 : B) -> λ (x-1231 : B) -> λ (X-x-1234 : lstar l80 B R x-1233 x-1232 x-1231) -> (X-- : eq l80 B x-1231 b2) -> P x-1233 x-1232) (λ (b0 : B) -> λ (H0 : eq l80 B b0 b2) -> eq-ind-r l80 l73 B b2 (λ (x : B) -> λ (X-- : eq l80 B x b2) -> P O x) H1 b0 H0) (λ (b0 : B) -> λ (b00 : B) -> λ (Hb0 : R b0 b00) -> λ (l0 : nat) -> λ (b10 : B) -> λ (Hb01 : lstar l80 B R l0 b00 b10) -> λ (IH : (X-- : eq l80 B b10 b2) -> P l0 b00) -> λ (H0 : eq l80 B b10 b2) -> eq-ind-r l80 (l80 ⊔ l73) B b2 (λ (x : B) -> λ (X-- : eq l80 B x b2) -> (X--1 : lstar l80 B R l0 b00 x) -> (X--2 : (X--2 : eq l80 B x b2) -> P l0 b00) -> P (plus l0 (S O)) b0) (λ (Hb010 : lstar l80 B R l0 b00 b2) -> λ (IH0 : (X-- : eq l80 B b2 b2) -> P l0 b00) -> H2 l0 b0 b00 Hb0 Hb010 (IH0 (refl l80 B b2))) b10 H0 Hb01 IH) l b1 b H

lstar-ind-l : (l24 l17 : Level) -> (B : Set l24) -> (R : (X-- : B) -> (X--1 : B) -> Set l24) -> (b2 : B) -> (P : relation2 lzero l24 l17 nat B) -> (X-- : P O b2) -> (X--1 : (l : nat) -> (b1 : B) -> (b : B) -> (X--1 : R b1 b) -> (X--2 : lstar l24 B R l b b2) -> (X--3 : P l b) -> P (plus l (S O)) b1) -> (l : nat) -> (b1 : B) -> (X--2 : lstar l24 B R l b1 b2) -> P l b1
lstar-ind-l = λ (l24 l17 : Level) -> λ (B : Set l24) -> λ (R : (X-- : B) -> (X--1 : B) -> Set l24) -> λ (b2 : B) -> λ (P : relation2 lzero l24 l17 nat B) -> λ (H1 : P O b2) -> λ (H2 : (l : nat) -> (b1 : B) -> (b : B) -> (X-- : R b1 b) -> (X--1 : lstar l24 B R l b b2) -> (X--2 : P l b) -> P (plus l (S O)) b1) -> λ (l : nat) -> λ (b1 : B) -> λ (Hb12 : lstar l24 B R l b1 b2) -> lstar-ind-l-aux l24 l17 B R b2 P H1 H2 l b1 b2 Hb12 (refl l24 B b2)

lstar-step : (l21 : Level) -> (B : Set l21) -> (R : (X-- : B) -> (X--1 : B) -> Set l21) -> (b1 : B) -> (b2 : B) -> (X-- : R b1 b2) -> lstar l21 B R (S O) b1 b2
lstar-step = λ (l21 : Level) -> λ (B : Set l21) -> λ (R : (X-- : B) -> (X--1 : B) -> Set l21) -> λ (b1 : B) -> λ (b2 : B) -> λ (auto : R b1 b2) -> eq-coerc l21 (lstar l21 B R (plus O (S O)) b1 b2) (lstar l21 B R (S O) b1 b2) (lstar-S l21 B R b1 b2 auto O b2 (lstar-O l21 B R b2)) (rewrite-l lzero ((lsuc lzero) ⊔ (lsuc l21)) nat (S O) (λ (X-- : nat) -> eq ((lsuc lzero) ⊔ (lsuc l21)) (Set l21) (lstar l21 B R X-- b1 b2) (lstar l21 B R (S O) b1 b2)) (refl ((lsuc lzero) ⊔ (lsuc l21)) (Set l21) (lstar l21 B R (S O) b1 b2)) (plus O (S O)) (plus-O-n (S O)))

lstar-dx : (l35 : Level) -> (B : Set l35) -> (R : relation l35 l35 B) -> (l : nat) -> (b1 : B) -> (b : B) -> (X-- : lstar l35 B R l b1 b) -> (b2 : B) -> (X--1 : R b b2) -> lstar l35 B R (plus l (S O)) b1 b2
lstar-dx = λ (l35 : Level) -> λ (B : Set l35) -> λ (R : relation l35 l35 B) -> λ (l : nat) -> λ (b1 : B) -> λ (b : B) -> λ (H : lstar l35 B R l b1 b) -> lstar-ind-l l35 l35 B R b (λ (X-- : nat) -> λ (X-0 : B) -> (b2 : B) -> (X--1 : R b b2) -> lstar l35 B R (plus X-- (S O)) X-0 b2) (λ (b2 : B) -> λ (auto : R b b2) -> lstar-step l35 B R b b2 auto) (λ (l0 : nat) -> λ (b10 : B) -> λ (b0 : B) -> λ (auto : R b10 b0) -> λ (auto' : lstar l35 B R l0 b0 b) -> λ (auto'' : (b2 : B) -> (X-- : R b b2) -> lstar l35 B R (plus l0 (S O)) b0 b2) -> λ (b2 : B) -> λ (auto''' : R b b2) -> lstar-S l35 B R b10 b0 auto (plus l0 (S O)) b2 (auto'' b2 auto''')) l b1 H

lstar-inv-O : (l47 : Level) -> (B : Set l47) -> (R : relation l47 l47 B) -> (l : nat) -> (b1 : B) -> (b2 : B) -> (X-- : lstar l47 B R l b1 b2) -> (X--1 : eq lzero nat O l) -> eq l47 B b1 b2
lstar-inv-O = λ (l47 : Level) -> λ (B : Set l47) -> λ (R : relation l47 l47 B) -> λ (l : nat) -> λ (b1 : B) -> λ (b2 : B) -> λ (X-clearme : lstar l47 B R l b1 b2) -> match-lstar l47 B R l47 (λ (X-- : nat) -> λ (X-0 : B) -> λ (X-1 : B) -> λ (X-2 : lstar l47 B R X-- X-0 X-1) -> (X--1 : eq lzero nat O X--) -> eq l47 B X-0 X-1) (λ (b : B) -> λ (auto : eq lzero nat O O) -> refl l47 B b) (λ (b10 : B) -> λ (b : B) -> λ (X-- : R b10 b) -> λ (l0 : nat) -> λ (b20 : B) -> λ (X-0 : lstar l47 B R l0 b b20) -> eq-ind lzero l47 nat (S (plus l0 O)) (λ (x-1 : nat) -> λ (X-x-2 : eq lzero nat (S (plus l0 O)) x-1) -> (X--1 : eq lzero nat O x-1) -> eq l47 B b10 b20) (λ (H : eq lzero nat O (S (plus l0 O))) -> nat-discr l47 O (S (plus l0 O)) H (eq l47 B b10 b20)) (plus l0 (S O)) (plus-n-Sm l0 O)) l b1 b2 X-clearme

lstar-inv-S : (l86 : Level) -> (B : Set l86) -> (R : relation l86 l86 B) -> (l : nat) -> (b1 : B) -> (b2 : B) -> (X-- : lstar l86 B R l b1 b2) -> (l0 : nat) -> (X--1 : eq lzero nat (plus l0 (S O)) l) -> ex2 l86 l86 l86 B (λ (b : B) -> R b1 b) (λ (b : B) -> lstar l86 B R l0 b b2)
lstar-inv-S = λ (l86 : Level) -> λ (B : Set l86) -> λ (R : relation l86 l86 B) -> λ (l : nat) -> λ (b1 : B) -> λ (b2 : B) -> λ (X-clearme : lstar l86 B R l b1 b2) -> match-lstar l86 B R l86 (λ (X-- : nat) -> λ (X-0 : B) -> λ (X-1 : B) -> λ (X-2 : lstar l86 B R X-- X-0 X-1) -> (l0 : nat) -> (X--1 : eq lzero nat (plus l0 (S O)) X--) -> ex2 l86 l86 l86 B (λ (b : B) -> R X-0 b) (λ (b : B) -> lstar l86 B R l0 b X-1)) (λ (b : B) -> λ (l0 : nat) -> eq-ind lzero l86 nat (S (plus l0 O)) (λ (x-1 : nat) -> λ (X-x-2 : eq lzero nat (S (plus l0 O)) x-1) -> (X-- : eq lzero nat x-1 O) -> ex2 l86 l86 l86 B (λ (b0 : B) -> R b b0) (λ (b0 : B) -> lstar l86 B R l0 b0 b)) (λ (H : eq lzero nat (S (plus l0 O)) O) -> nat-discr l86 (S (plus l0 O)) O H (ex2 l86 l86 l86 B (λ (b0 : B) -> R b b0) (λ (b0 : B) -> lstar l86 B R l0 b0 b))) (plus l0 (S O)) (plus-n-Sm l0 O)) (λ (b10 : B) -> λ (b : B) -> λ (Hb1 : R b10 b) -> λ (l0 : nat) -> λ (b20 : B) -> λ (Hb2 : lstar l86 B R l0 b b20) -> λ (l00 : nat) -> λ (H : eq lzero nat (plus l00 (S O)) (plus l0 (S O))) -> eq-ind-r lzero l86 nat l0 (λ (x : nat) -> λ (X-- : eq lzero nat x l0) -> ex2 l86 l86 l86 B (λ (b0 : B) -> R b10 b0) (λ (b0 : B) -> lstar l86 B R x b0 b20)) (ex2-intro l86 l86 l86 B (λ (b0 : B) -> R b10 b0) (λ (b0 : B) -> lstar l86 B R l0 b0 b20) b Hb1 Hb2) l00 (injective-plus-l (S O) l00 l0 H)) l b1 b2 X-clearme

lstar-inv-step : (l38 : Level) -> (B : Set l38) -> (R : relation l38 l38 B) -> (b1 : B) -> (b2 : B) -> (X-- : lstar l38 B R (S O) b1 b2) -> R b1 b2
lstar-inv-step = λ (l38 : Level) -> λ (B : Set l38) -> λ (R : relation l38 l38 B) -> λ (b1 : B) -> λ (b2 : B) -> λ (H : lstar l38 B R (S O) b1 b2) -> ex2-ind l38 l38 l38 l38 B (λ (b : B) -> R b1 b) (λ (b : B) -> lstar l38 B R O b b2) (λ (X-x-274 : ex2 l38 l38 l38 B (λ (b : B) -> R b1 b) (λ (b : B) -> lstar l38 B R O b b2)) -> R b1 b2) (λ (b : B) -> λ (Hb1 : R b1 b) -> λ (H0 : lstar l38 B R O b b2) -> eq-ind l38 l38 B b (λ (x-1 : B) -> λ (X-x-2 : eq l38 B b x-1) -> R b1 x-1) Hb1 b2 (lstar-inv-O l38 B R O b b2 H0 (refl lzero nat O))) (lstar-inv-S l38 B R (S O) b1 b2 H O (rewrite-l lzero lzero nat (S O) (λ (X-- : nat) -> eq lzero nat X-- (S O)) (refl lzero nat (S O)) (plus O (S O)) (plus-O-n (S O))))

lstar-singlevalued : (l103 : Level) -> (B : Set l103) -> (R : relation2 l103 l103 l103 B B) -> (X-- : singlevalued l103 l103 l103 B B R) -> (l : nat) -> singlevalued l103 l103 l103 B B (lstar l103 B R l)
lstar-singlevalued = λ (l103 : Level) -> λ (B : Set l103) -> λ (R : relation2 l103 l103 l103 B B) -> λ (HR : singlevalued l103 l103 l103 B B R) -> λ (l : nat) -> λ (c : B) -> λ (c1 : B) -> λ (H : lstar l103 B R l c c1) -> lstar-ind-l l103 l103 B R c1 (λ (X-- : nat) -> λ (X-0 : B) -> (b2 : B) -> (X--1 : lstar l103 B R X-- X-0 b2) -> eq l103 B c1 b2) (λ (b2 : B) -> λ (auto : lstar l103 B R O c1 b2) -> lstar-inv-O l103 B R O c1 b2 auto (refl lzero nat O)) (λ (l0 : nat) -> λ (b : B) -> λ (b1 : B) -> λ (Hb1 : R b b1) -> λ (X-- : lstar l103 B R l0 b1 c1) -> λ (IHbc1 : (b2 : B) -> (X--1 : lstar l103 B R l0 b1 b2) -> eq l103 B c1 b2) -> λ (c2 : B) -> λ (H0 : lstar l103 B R (plus l0 (S O)) b c2) -> ex2-ind l103 l103 l103 l103 B (λ (b0 : B) -> R b b0) (λ (b0 : B) -> lstar l103 B R l0 b0 c2) (λ (X-x-274 : ex2 l103 l103 l103 B (λ (b0 : B) -> R b b0) (λ (b0 : B) -> lstar l103 B R l0 b0 c2)) -> eq l103 B c1 c2) (λ (b2 : B) -> λ (Hb2 : R b b2) -> λ (Hbc2 : lstar l103 B R l0 b2 c2) -> eq-ind-r l103 l103 B b2 (λ (x : B) -> λ (X-0 : eq l103 B x b2) -> (X--1 : (b20 : B) -> (X--1 : lstar l103 B R l0 x b20) -> eq l103 B c1 b20) -> eq l103 B c1 c2) (λ (IHbc10 : (b20 : B) -> (X--1 : lstar l103 B R l0 b2 b20) -> eq l103 B c1 b20) -> IHbc10 c2 Hbc2) b1 (HR b b1 Hb1 b2 Hb2) IHbc1) (lstar-inv-S l103 B R (plus l0 (S O)) b c2 H0 l0 (refl lzero nat (plus l0 (S O))))) l c H

lstar-ltransitive : (l80 : Level) -> (B : Set l80) -> (R : relation l80 l80 B) -> ltransitive l80 l80 B (lstar l80 B R)
lstar-ltransitive = λ (l80 : Level) -> λ (B : Set l80) -> λ (R : relation l80 l80 B) -> λ (l1 : nat) -> λ (b1 : B) -> λ (b : B) -> λ (H : lstar l80 B R l1 b1 b) -> lstar-ind-l l80 l80 B R b (λ (X-- : nat) -> λ (X-0 : B) -> (l2 : nat) -> (b2 : B) -> (X--1 : lstar l80 B R l2 b b2) -> lstar l80 B R (plus X-- l2) X-0 b2) (λ (l2 : nat) -> λ (b2 : B) -> λ (auto : lstar l80 B R l2 b b2) -> auto) (λ (l : nat) -> λ (b10 : B) -> λ (b0 : B) -> λ (auto : R b10 b0) -> λ (auto' : lstar l80 B R l b0 b) -> λ (auto'' : (l2 : nat) -> (b2 : B) -> (X-- : lstar l80 B R l2 b b2) -> lstar l80 B R (plus l l2) b0 b2) -> λ (l2 : nat) -> λ (b2 : B) -> λ (auto''' : lstar l80 B R l2 b b2) -> eq-coerc l80 (lstar l80 B R (plus (plus l l2) (S O)) b10 b2) (lstar l80 B R (plus (plus l (S O)) l2) b10 b2) (lstar-S l80 B R b10 b0 auto (plus l l2) b2 (auto'' l2 b2 auto''')) (rewrite-r lzero ((lsuc lzero) ⊔ (lsuc l80)) nat (plus l2 (plus l (S O))) (λ (X-- : nat) -> eq ((lsuc lzero) ⊔ (lsuc l80)) (Set l80) (lstar l80 B R (plus (plus l l2) (S O)) b10 b2) (lstar l80 B R X-- b10 b2)) (rewrite-r lzero ((lsuc lzero) ⊔ (lsuc l80)) nat (plus l (plus l2 (S O))) (λ (X-- : nat) -> eq ((lsuc lzero) ⊔ (lsuc l80)) (Set l80) (lstar l80 B R (plus (plus l l2) (S O)) b10 b2) (lstar l80 B R X-- b10 b2)) (rewrite-r lzero ((lsuc lzero) ⊔ (lsuc l80)) nat (plus l (plus l2 (S O))) (λ (X-- : nat) -> eq ((lsuc lzero) ⊔ (lsuc l80)) (Set l80) (lstar l80 B R X-- b10 b2) (lstar l80 B R (plus l (plus l2 (S O))) b10 b2)) (refl ((lsuc lzero) ⊔ (lsuc l80)) (Set l80) (lstar l80 B R (plus l (plus l2 (S O))) b10 b2)) (plus (plus l l2) (S O)) (associative-plus l l2 (S O))) (plus l2 (plus l (S O))) (rewrite-l lzero lzero nat (plus (plus l l2) (S O)) (λ (X-- : nat) -> eq lzero nat (plus l2 (plus l (S O))) X--) (assoc-plus1 (S O) l l2) (plus l (plus l2 (S O))) (associative-plus l l2 (S O)))) (plus (plus l (S O)) l2) (commutative-plus (plus l (S O)) l2))) l1 b1 H

lstar-inv-ltransitive : (l151 : Level) -> (B : Set l151) -> (R : relation l151 l151 B) -> inv-ltransitive l151 l151 B (lstar l151 B R)
lstar-inv-ltransitive = λ (l151 : Level) -> λ (B : Set l151) -> λ (R : relation l151 l151 B) -> λ (l1 : nat) -> nat-ind-plus l151 (λ (X-- : nat) -> (l2 : nat) -> (b1 : B) -> (b2 : B) -> (X--1 : lstar l151 B R (plus X-- l2) b1 b2) -> ex2 l151 l151 l151 B (λ (b : B) -> lstar l151 B R X-- b1 b) (λ (b : B) -> lstar l151 B R l2 b b2)) (λ (l2 : nat) -> λ (b1 : B) -> λ (b2 : B) -> λ (auto : lstar l151 B R (plus O l2) b1 b2) -> ex2-intro l151 l151 l151 B (λ (b : B) -> lstar l151 B R O b1 b) (λ (b : B) -> lstar l151 B R l2 b b2) b1 (lstar-O l151 B R b1) auto) (λ (l10 : nat) -> λ (IHl1 : (l2 : nat) -> (b1 : B) -> (b2 : B) -> (X-- : lstar l151 B R (plus l10 l2) b1 b2) -> ex2 l151 l151 l151 B (λ (b : B) -> lstar l151 B R l10 b1 b) (λ (b : B) -> lstar l151 B R l2 b b2)) -> λ (l2 : nat) -> λ (b1 : B) -> λ (b2 : B) -> eq-ind lzero l151 nat (plus (plus l10 l2) (S O)) (λ (x-1 : nat) -> λ (X-x-2 : eq lzero nat (plus (plus l10 l2) (S O)) x-1) -> (X-- : lstar l151 B R x-1 b1 b2) -> ex2 l151 l151 l151 B (λ (b : B) -> lstar l151 B R (plus l10 (S O)) b1 b) (λ (b : B) -> lstar l151 B R l2 b b2)) (λ (H : lstar l151 B R (plus (plus l10 l2) (S O)) b1 b2) -> ex2-ind l151 l151 l151 l151 B (λ (b : B) -> R b1 b) (λ (b : B) -> lstar l151 B R (plus l10 l2) b b2) (λ (X-x-274 : ex2 l151 l151 l151 B (λ (b : B) -> R b1 b) (λ (b : B) -> lstar l151 B R (plus l10 l2) b b2)) -> ex2 l151 l151 l151 B (λ (b : B) -> lstar l151 B R (plus l10 (S O)) b1 b) (λ (b : B) -> lstar l151 B R l2 b b2)) (λ (b : B) -> λ (Hb1 : R b1 b) -> λ (Hb2 : lstar l151 B R (plus l10 l2) b b2) -> ex2-ind l151 l151 l151 l151 B (λ (b0 : B) -> lstar l151 B R l10 b b0) (λ (b0 : B) -> lstar l151 B R l2 b0 b2) (λ (X-x-274 : ex2 l151 l151 l151 B (λ (b0 : B) -> lstar l151 B R l10 b b0) (λ (b0 : B) -> lstar l151 B R l2 b0 b2)) -> ex2 l151 l151 l151 B (λ (b0 : B) -> lstar l151 B R (plus l10 (S O)) b1 b0) (λ (b0 : B) -> lstar l151 B R l2 b0 b2)) (λ (x : B) -> λ (X-x-276 : lstar l151 B R l10 b x) -> λ (X-x-275 : lstar l151 B R l2 x b2) -> ex2-intro l151 l151 l151 B (λ (b0 : B) -> lstar l151 B R (plus l10 (S O)) b1 b0) (λ (b0 : B) -> lstar l151 B R l2 b0 b2) x (lstar-S l151 B R b1 b Hb1 l10 x X-x-276) X-x-275) (IHl1 l2 b b2 Hb2)) (lstar-inv-S l151 B R (plus (plus l10 l2) (S O)) b1 b2 H (plus l10 l2) (rewrite-r lzero lzero nat (plus l10 (plus l2 (S O))) (λ (X-- : nat) -> eq lzero nat X-- (plus (plus l10 l2) (S O))) (rewrite-r lzero lzero nat (plus l10 (plus l2 (S O))) (λ (X-- : nat) -> eq lzero nat (plus l10 (plus l2 (S O))) X--) (refl lzero nat (plus l10 (plus l2 (S O)))) (plus (plus l10 l2) (S O)) (associative-plus l10 l2 (S O))) (plus (plus l10 l2) (S O)) (associative-plus l10 l2 (S O))))) (plus (plus l10 (S O)) l2) (plus-plus-comm-23 l10 l2 (S O))) l1

lstar-inv-S-dx : (l47 : Level) -> (B : Set l47) -> (R : relation l47 l47 B) -> (l : nat) -> (b1 : B) -> (b2 : B) -> (X-- : lstar l47 B R (plus l (S O)) b1 b2) -> ex2 l47 l47 l47 B (λ (b : B) -> lstar l47 B R l b1 b) (λ (b : B) -> R b b2)
lstar-inv-S-dx = λ (l47 : Level) -> λ (B : Set l47) -> λ (R : relation l47 l47 B) -> λ (l : nat) -> λ (b1 : B) -> λ (b2 : B) -> λ (H : lstar l47 B R (plus l (S O)) b1 b2) -> ex2-ind l47 l47 l47 l47 B (λ (b : B) -> lstar l47 B R l b1 b) (λ (b : B) -> lstar l47 B R (S O) b b2) (λ (X-x-274 : ex2 l47 l47 l47 B (λ (b : B) -> lstar l47 B R l b1 b) (λ (b : B) -> lstar l47 B R (S O) b b2)) -> ex2 l47 l47 l47 B (λ (b : B) -> lstar l47 B R l b1 b) (λ (b : B) -> R b b2)) (λ (b : B) -> λ (Hb1 : lstar l47 B R l b1 b) -> λ (H0 : lstar l47 B R (S O) b b2) -> ex2-intro l47 l47 l47 B (λ (b0 : B) -> lstar l47 B R l b1 b0) (λ (b0 : B) -> R b0 b2) b Hb1 (lstar-inv-step l47 B R b b2 H0)) (lstar-inv-ltransitive l47 B R l (S O) b1 b2 H)


data lstar-r (l0-v : Level)  (B-v : Set l0-v)  (R-v : relation l0-v l0-v B-v) : (X---v : nat) -> relation l0-v l0-v B-v where
  lstar-r-O' : (b-v : B-v) -> lstar-r l0-v B-v R-v O b-v b-v
  lstar-r-S' : (l-v : nat) -> (b1-v : B-v) -> (b-v : B-v) -> (X---v : lstar-r l0-v B-v R-v l-v b1-v b-v) -> (b2-v : B-v) -> (X--1-v : R-v b-v b2-v) -> lstar-r l0-v B-v R-v (plus l-v (S O)) b1-v b2-v

lstar-r-O : (l1-v : Level) -> (B-v : Set l1-v) -> (R-v : relation l1-v l1-v B-v) -> (b-v : B-v) -> lstar-r l1-v B-v R-v O b-v b-v
lstar-r-O _ _ _ = lstar-r-O'

lstar-r-S : (l5-v : Level) -> (B-v : Set l5-v) -> (R-v : relation l5-v l5-v B-v) -> (l-v : nat) -> (b1-v : B-v) -> (b-v : B-v) -> (X---v : lstar-r l5-v B-v R-v l-v b1-v b-v) -> (b2-v : B-v) -> (X--1-v : R-v b-v b2-v) -> lstar-r l5-v B-v R-v (plus l-v (S O)) b1-v b2-v
lstar-r-S _ _ _ = lstar-r-S'

match-lstar-r : (l16-v : Level) -> (B-v : Set l16-v) -> (X-R-v : relation l16-v l16-v B-v) -> (return-sort-v : Level) -> (return-type-v : (X---v : nat) -> (X--1-v : B-v) -> (X--2-v : B-v) -> (z-v : lstar-r l16-v B-v X-R-v X---v X--1-v X--2-v) -> Set return-sort-v) -> (case-lstar-r-O-v : (b-v : B-v) -> return-type-v O b-v b-v (lstar-r-O l16-v B-v X-R-v b-v)) -> (case-lstar-r-S-v : (l-v : nat) -> (b1-v : B-v) -> (b-v : B-v) -> (X---v : lstar-r l16-v B-v X-R-v l-v b1-v b-v) -> (b2-v : B-v) -> (X--1-v : X-R-v b-v b2-v) -> return-type-v (plus l-v (S O)) b1-v b2-v (lstar-r-S l16-v B-v X-R-v l-v b1-v b-v X---v b2-v X--1-v)) -> (X---v : nat) -> (X--1-v : B-v) -> (X--2-v : B-v) -> (z-v : lstar-r l16-v B-v X-R-v X---v X--1-v X--2-v) -> return-type-v X---v X--1-v X--2-v z-v
match-lstar-r _ _ _ _ _ case0 caseS _ _ _ (lstar-r-O' x) = case0 x
match-lstar-r _ _ _ _ _ case0 caseS _ _ _ (lstar-r-S' x1 x2 x3 x4 x5 x6) = caseS x1 x2 x3 x4 x5 x6

lstar-r-ind : (l21-v l17-v : Level) -> (B-v : Set l21-v) -> (X-R-v : relation l21-v l21-v B-v) -> (Q--v : (x-1337-v : nat) -> (x-1336-v : B-v) -> (x-1335-v : B-v) -> (X-x-1338-v : lstar-r l21-v B-v X-R-v x-1337-v x-1336-v x-1335-v) -> Set l17-v) -> (X-H-lstar-r-O-v : (b-v : B-v) -> Q--v O b-v b-v (lstar-r-O l21-v B-v X-R-v b-v)) -> (X-H-lstar-r-S-v : (l-v : nat) -> (b1-v : B-v) -> (b-v : B-v) -> (x-1340-v : lstar-r l21-v B-v X-R-v l-v b1-v b-v) -> (b2-v : B-v) -> (x-1339-v : X-R-v b-v b2-v) -> (X-x-1342-v : Q--v l-v b1-v b-v x-1340-v) -> Q--v (plus l-v (S O)) b1-v b2-v (lstar-r-S l21-v B-v X-R-v l-v b1-v b-v x-1340-v b2-v x-1339-v)) -> (x-1337-v : nat) -> (x-1336-v : B-v) -> (x-1335-v : B-v) -> (x-1338-v : lstar-r l21-v B-v X-R-v x-1337-v x-1336-v x-1335-v) -> Q--v x-1337-v x-1336-v x-1335-v x-1338-v
lstar-r-ind _ _ _ _ _ case0 caseS _ _ _ (lstar-r-O' x) = case0 x
lstar-r-ind A1 A2 A3 A4 A5 case0 caseS A6 A7 A8 (lstar-r-S' x1 x2 x3 x4 x5 x6) = caseS x1 x2 x3 x4 x5 x6 (lstar-r-ind A1 A2 A3 A4 A5 case0 caseS x1 x2 x3 x4)



lstar-r-inv-ind : (l66 l54 : Level) -> (x1 : Set l66) -> (x2 : relation l66 l66 x1) -> (x3 : nat) -> (x4 : x1) -> (x5 : x1) -> (X-Hterm : lstar-r l66 x1 x2 x3 x4 x5) -> (P : (X-z2386 : nat) -> (X-z2385 : x1) -> (X-z2384 : x1) -> Set l54) -> (X-H1 : (b : x1) -> (X-z2389 : eq lzero nat x3 O) -> (X-z2388 : eq l66 x1 x4 b) -> (X-z2387 : eq l66 x1 x5 b) -> P O b b) -> (X-H2 : (l : nat) -> (b1 : x1) -> (b : x1) -> (X-x-1340 : lstar-r l66 x1 x2 l b1 b) -> (b2 : x1) -> (X-x-1339 : x2 b b2) -> (X-x-1342 : (X-z2389 : eq lzero nat x3 l) -> (X-z2388 : eq l66 x1 x4 b1) -> (X-z2387 : eq l66 x1 x5 b) -> P l b1 b) -> (X-z2389 : eq lzero nat x3 (plus l (S O))) -> (X-z2388 : eq l66 x1 x4 b1) -> (X-z2387 : eq l66 x1 x5 b2) -> P (plus l (S O)) b1 b2) -> P x3 x4 x5
lstar-r-inv-ind = λ (l66 l54 : Level) -> λ (x1 : Set l66) -> λ (x2 : relation l66 l66 x1) -> λ (x3 : nat) -> λ (x4 : x1) -> λ (x5 : x1) -> λ (Hterm : lstar-r l66 x1 x2 x3 x4 x5) -> λ (P : (X-z2386 : nat) -> (X-z2385 : x1) -> (X-z2384 : x1) -> Set l54) -> λ (H1 : (b : x1) -> (X-z2389 : eq lzero nat x3 O) -> (X-z2388 : eq l66 x1 x4 b) -> (X-z2387 : eq l66 x1 x5 b) -> P O b b) -> λ (H2 : (l : nat) -> (b1 : x1) -> (b : x1) -> (X-x-1340 : lstar-r l66 x1 x2 l b1 b) -> (b2 : x1) -> (X-x-1339 : x2 b b2) -> (X-x-1342 : (X-z2389 : eq lzero nat x3 l) -> (X-z2388 : eq l66 x1 x4 b1) -> (X-z2387 : eq l66 x1 x5 b) -> P l b1 b) -> (X-z2389 : eq lzero nat x3 (plus l (S O))) -> (X-z2388 : eq l66 x1 x4 b1) -> (X-z2387 : eq l66 x1 x5 b2) -> P (plus l (S O)) b1 b2) -> lstar-r-ind l66 (l66 ⊔ l54) x1 x2 (λ (x-1337 : nat) -> λ (x-1336 : x1) -> λ (x-1335 : x1) -> λ (X-x-1338 : lstar-r l66 x1 x2 x-1337 x-1336 x-1335) -> (X-z2389 : eq lzero nat x3 x-1337) -> (X-z2388 : eq l66 x1 x4 x-1336) -> (X-z2387 : eq l66 x1 x5 x-1335) -> P x-1337 x-1336 x-1335) H1 H2 x3 x4 x5 Hterm (refl lzero nat x3) (refl l66 x1 x4) (refl l66 x1 x5)

lstar-r-sn : (l41 : Level) -> (B : Set l41) -> (R : relation l41 l41 B) -> (l : nat) -> (b : B) -> (b2 : B) -> (X-- : lstar-r l41 B R l b b2) -> (b1 : B) -> (X--1 : R b1 b) -> lstar-r l41 B R (plus l (S O)) b1 b2
lstar-r-sn = λ (l41 : Level) -> λ (B : Set l41) -> λ (R : relation l41 l41 B) -> λ (l : nat) -> λ (b : B) -> λ (b2 : B) -> λ (H : lstar-r l41 B R l b b2) -> lstar-r-ind l41 l41 B R (λ (x-1337 : nat) -> λ (x-1336 : B) -> λ (x-1335 : B) -> λ (X-x-1338 : lstar-r l41 B R x-1337 x-1336 x-1335) -> (b1 : B) -> (X-- : R b1 x-1336) -> lstar-r l41 B R (plus x-1337 (S O)) b1 x-1335) (λ (b0 : B) -> λ (b1 : B) -> λ (auto : R b1 b0) -> lstar-r-S l41 B R O b1 b1 (lstar-r-O l41 B R b1) b0 auto) (λ (l0 : nat) -> λ (b1 : B) -> λ (b0 : B) -> λ (X-- : lstar-r l41 B R l0 b1 b0) -> λ (b20 : B) -> λ (Hb2 : R b0 b20) -> λ (IHb1 : (b10 : B) -> (X--1 : R b10 b1) -> lstar-r l41 B R (plus l0 (S O)) b10 b0) -> λ (b00 : B) -> λ (Hb01 : R b00 b1) -> lstar-r-S l41 B R (plus l0 (S O)) b00 b0 (IHb1 b00 Hb01) b20 Hb2) l b b2 H

lstar-lstar-r : (l23 : Level) -> (B : Set l23) -> (R : relation l23 l23 B) -> (l : nat) -> (b1 : B) -> (b2 : B) -> (X-- : lstar l23 B R l b1 b2) -> lstar-r l23 B R l b1 b2
lstar-lstar-r = λ (l23 : Level) -> λ (B : Set l23) -> λ (R : relation l23 l23 B) -> λ (l : nat) -> λ (b1 : B) -> λ (b2 : B) -> λ (H : lstar l23 B R l b1 b2) -> lstar-ind-l l23 l23 B R b2 (λ (X-- : nat) -> λ (X-0 : B) -> lstar-r l23 B R X-- X-0 b2) (lstar-r-O l23 B R b2) (λ (l0 : nat) -> λ (b10 : B) -> λ (b : B) -> λ (auto : R b10 b) -> λ (auto' : lstar l23 B R l0 b b2) -> λ (auto'' : lstar-r l23 B R l0 b b2) -> lstar-r-sn l23 B R l0 b b2 auto'' b10 auto) l b1 H

lstar-r-inv-lstar : (l28 : Level) -> (B : Set l28) -> (R : relation l28 l28 B) -> (l : nat) -> (b1 : B) -> (b2 : B) -> (X-- : lstar-r l28 B R l b1 b2) -> lstar l28 B R l b1 b2
lstar-r-inv-lstar = λ (l28 : Level) -> λ (B : Set l28) -> λ (R : relation l28 l28 B) -> λ (l : nat) -> λ (b1 : B) -> λ (b2 : B) -> λ (H : lstar-r l28 B R l b1 b2) -> lstar-r-ind l28 l28 B R (λ (x-1337 : nat) -> λ (x-1336 : B) -> λ (x-1335 : B) -> λ (X-x-1338 : lstar-r l28 B R x-1337 x-1336 x-1335) -> lstar l28 B R x-1337 x-1336 x-1335) (λ (b : B) -> lstar-O l28 B R b) (λ (l0 : nat) -> λ (b10 : B) -> λ (b : B) -> λ (X-x-1340 : lstar-r l28 B R l0 b10 b) -> λ (b20 : B) -> λ (X-x-1339 : R b b20) -> λ (X-x-1342 : lstar l28 B R l0 b10 b) -> lstar-dx l28 B R l0 b10 b X-x-1342 b20 X-x-1339) l b1 b2 H

lstar-ind-r-aux : (l82 l75 : Level) -> (B : Set l82) -> (R : relation l82 l82 B) -> (b1 : B) -> (P : relation2 lzero l82 l75 nat B) -> (X-- : P O b1) -> (X--1 : (l : nat) -> (b : B) -> (b2 : B) -> (X--1 : lstar l82 B R l b1 b) -> (X--2 : R b b2) -> (X--3 : P l b) -> P (plus l (S O)) b2) -> (l : nat) -> (b : B) -> (b2 : B) -> (X--2 : lstar l82 B R l b b2) -> (X--3 : eq l82 B b b1) -> P l b2
lstar-ind-r-aux = λ (l82 l75 : Level) -> λ (B : Set l82) -> λ (R : relation l82 l82 B) -> λ (b1 : B) -> λ (P : relation2 lzero l82 l75 nat B) -> λ (H1 : P O b1) -> λ (H2 : (l : nat) -> (b : B) -> (b2 : B) -> (X-- : lstar l82 B R l b1 b) -> (X--1 : R b b2) -> (X--2 : P l b) -> P (plus l (S O)) b2) -> λ (l : nat) -> λ (b : B) -> λ (b2 : B) -> λ (H : lstar l82 B R l b b2) -> lstar-r-ind l82 (l82 ⊔ l75) B R (λ (x-1337 : nat) -> λ (x-1336 : B) -> λ (x-1335 : B) -> λ (X-x-1338 : lstar-r l82 B R x-1337 x-1336 x-1335) -> (X-- : eq l82 B x-1336 b1) -> P x-1337 x-1335) (λ (b0 : B) -> λ (H0 : eq l82 B b0 b1) -> eq-ind-r l82 l75 B b1 (λ (x : B) -> λ (X-- : eq l82 B x b1) -> P O x) H1 b0 H0) (λ (l0 : nat) -> λ (b0 : B) -> λ (b00 : B) -> λ (Hb0 : lstar-r l82 B R l0 b0 b00) -> λ (b20 : B) -> λ (Hb02 : R b00 b20) -> λ (IHb02 : (X-- : eq l82 B b0 b1) -> P l0 b00) -> λ (H0 : eq l82 B b0 b1) -> eq-ind-r l82 (l82 ⊔ l75) B b1 (λ (x : B) -> λ (X-- : eq l82 B x b1) -> (X--1 : lstar-r l82 B R l0 x b00) -> (X--2 : (X--2 : eq l82 B x b1) -> P l0 b00) -> P (plus l0 (S O)) b20) (λ (Hb00 : lstar-r l82 B R l0 b1 b00) -> λ (IHb020 : (X-- : eq l82 B b1 b1) -> P l0 b00) -> H2 l0 b00 b20 (lstar-r-inv-lstar l82 B R l0 b1 b00 Hb00) Hb02 (IHb020 (refl l82 B b1))) b0 H0 Hb0 IHb02) l b b2 (lstar-lstar-r l82 B R l b b2 H)

lstar-ind-r : (l24 l17 : Level) -> (B : Set l24) -> (R : relation l24 l24 B) -> (b1 : B) -> (P : relation2 lzero l24 l17 nat B) -> (X-- : P O b1) -> (X--1 : (l : nat) -> (b : B) -> (b2 : B) -> (X--1 : lstar l24 B R l b1 b) -> (X--2 : R b b2) -> (X--3 : P l b) -> P (plus l (S O)) b2) -> (l : nat) -> (b2 : B) -> (X--2 : lstar l24 B R l b1 b2) -> P l b2
lstar-ind-r = λ (l24 l17 : Level) -> λ (B : Set l24) -> λ (R : relation l24 l24 B) -> λ (b1 : B) -> λ (P : relation2 lzero l24 l17 nat B) -> λ (H1 : P O b1) -> λ (H2 : (l : nat) -> (b : B) -> (b2 : B) -> (X-- : lstar l24 B R l b1 b) -> (X--1 : R b b2) -> (X--2 : P l b) -> P (plus l (S O)) b2) -> λ (l : nat) -> λ (b2 : B) -> λ (Hb12 : lstar l24 B R l b1 b2) -> lstar-ind-r-aux l24 l17 B R b1 P H1 H2 l b1 b2 Hb12 (refl l24 B b1)

lstar-Conf3 : (l31 l30 l27 : Level) -> (A : Set l31) -> (B : Set l30) -> (S-v : relation2 l31 l30 l27 A B) -> (R : relation l31 l31 A) -> (X-- : Conf3 l31 l30 l27 l31 A B S-v R) -> (l : nat) -> Conf3 l31 l30 l27 l31 A B S-v (lstar l31 A R l)
lstar-Conf3 = λ (l31 l30 l27 : Level) -> λ (A : Set l31) -> λ (B : Set l30) -> λ (S-v : relation2 l31 l30 l27 A B) -> λ (R : relation l31 l31 A) -> λ (HSR : Conf3 l31 l30 l27 l31 A B S-v R) -> λ (l : nat) -> λ (b : B) -> λ (a1 : A) -> λ (Ha1 : S-v a1 b) -> λ (a2 : A) -> λ (H : lstar l31 A R l a1 a2) -> lstar-ind-r l31 l27 A R a1 (λ (X-- : nat) -> λ (X-0 : A) -> S-v X-0 b) Ha1 (λ (l0 : nat) -> λ (b0 : A) -> λ (b2 : A) -> λ (auto : lstar l31 A R l0 a1 b0) -> λ (auto' : R b0 b2) -> λ (auto'' : S-v b0 b) -> HSR b b0 auto'' b2 auto') l a2 H

