open import Agda.Primitive
import matita-basics-logic
import matita-basics-bool
import matita-arithmetics-nat

max' : (X---v : matita-arithmetics-nat.nat) -> (X--1-v : (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (X--2-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat
max' matita-arithmetics-nat.O f d = d
max' (matita-arithmetics-nat.S j) f d = matita-basics-bool.match-bool lzero (λ (X--1-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) j (max' j f d) (f j)


max : (X-n-v : matita-arithmetics-nat.nat) -> (X-f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> matita-arithmetics-nat.nat
max = λ (n-v : matita-arithmetics-nat.nat) -> λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> max' n-v f-v matita-arithmetics-nat.O

max-O : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max matita-arithmetics-nat.O f-v) matita-arithmetics-nat.O
max-O = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> matita-basics-logic.refl lzero matita-arithmetics-nat.nat (max matita-arithmetics-nat.O f-v)

max-cases : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S n-v) f-v) n-v)) (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S n-v) f-v) (max n-v f-v)))
max-cases = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-basics-bool.match-bool lzero (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) n-v (max' n-v f-v matita-arithmetics-nat.O) X---v) n-v)) (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) n-v (max' n-v f-v matita-arithmetics-nat.O) X---v) (max' n-v f-v matita-arithmetics-nat.O)))) (matita-basics-logic.or-introl lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.true) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v n-v)) (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (max' n-v f-v matita-arithmetics-nat.O))) (matita-basics-logic.conj lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.true) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v n-v) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat n-v))) (matita-basics-logic.or-intror lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.false matita-basics-bool.true) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max' n-v f-v matita-arithmetics-nat.O) n-v)) (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.false matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max' n-v f-v matita-arithmetics-nat.O) (max' n-v f-v matita-arithmetics-nat.O))) (matita-basics-logic.conj lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.false matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max' n-v f-v matita-arithmetics-nat.O) (max' n-v f-v matita-arithmetics-nat.O)) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.false) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (max' n-v f-v matita-arithmetics-nat.O)))) (f-v n-v)

le-max-n : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (max n-v f-v) n-v
le-max-n = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (max X-x-365-v f-v) X-x-365-v) (matita-arithmetics-nat.le-n (max matita-arithmetics-nat.O f-v)) (λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : matita-arithmetics-nat.le (max m-v f-v) m-v) -> matita-basics-bool.match-bool lzero (λ (X---v : matita-basics-bool.bool) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v f-v matita-arithmetics-nat.O) X---v) (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.le-S m-v m-v (matita-arithmetics-nat.le-n m-v)) (matita-arithmetics-nat.le-S (max' m-v f-v matita-arithmetics-nat.O) m-v Hind-v) (f-v m-v)) n-v

lt-max-n : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-arithmetics-nat.lt (max n-v f-v) n-v
lt-max-n = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-arithmetics-nat.lt-O-n-elim lzero n-v posn-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.lt (max X---v f-v) X---v) (λ (m-v : matita-arithmetics-nat.nat) -> matita-basics-bool.match-bool lzero (λ (X---v : matita-basics-bool.bool) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v f-v matita-arithmetics-nat.O) X---v)) (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.le-S-S m-v m-v (matita-arithmetics-nat.le-n m-v)) (matita-arithmetics-nat.le-S-S (max' m-v f-v matita-arithmetics-nat.O) m-v (le-max-n f-v m-v)) (f-v m-v))

le-to-le-max : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le n-v m-v) -> matita-arithmetics-nat.le (max n-v f-v) (max m-v f-v)
le-to-le-max = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.le n-v m-v) -> matita-arithmetics-nat.le-ind lzero n-v (λ (x-417-v : matita-arithmetics-nat.nat) -> λ (X-x-418-v : matita-arithmetics-nat.le n-v x-417-v) -> matita-arithmetics-nat.le (max n-v f-v) (max x-417-v f-v)) (matita-arithmetics-nat.le-n (max n-v f-v)) (λ (i-v : matita-arithmetics-nat.nat) -> λ (leni-v : matita-arithmetics-nat.le n-v i-v) -> λ (Hind-v : matita-arithmetics-nat.le (max n-v f-v) (max i-v f-v)) -> matita-arithmetics-nat.transitive-le (max n-v f-v) (max i-v f-v) (max (matita-arithmetics-nat.S i-v) f-v) Hind-v (matita-basics-logic.match-Or lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S i-v) f-v) i-v)) (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S i-v) f-v) (max i-v f-v))) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S i-v) f-v) i-v)) (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S i-v) f-v) (max i-v f-v)))) -> matita-arithmetics-nat.le (max i-v f-v) (max (matita-arithmetics-nat.S i-v) f-v)) (λ (X-clearme-v : matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S i-v) f-v) i-v)) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S i-v) f-v) i-v) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S i-v) f-v) i-v)) -> matita-arithmetics-nat.le (max i-v f-v) (max (matita-arithmetics-nat.S i-v) f-v)) (λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> λ (auto-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S i-v) f-v) i-v) -> matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (max i-v f-v) i-v) (matita-arithmetics-nat.le (max i-v f-v) (max (matita-arithmetics-nat.S i-v) f-v)) (le-max-n f-v i-v) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat i-v (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (max i-v f-v) i-v) (matita-arithmetics-nat.le (max i-v f-v) X--1-v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (max i-v f-v) i-v)) (max (matita-arithmetics-nat.S i-v) f-v) auto-v)) X-clearme-v) (λ (X-clearme-v : matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S i-v) f-v) (max i-v f-v))) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S i-v) f-v) (max i-v f-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S i-v) f-v) (max i-v f-v))) -> matita-arithmetics-nat.le (max i-v f-v) (max (matita-arithmetics-nat.S i-v) f-v)) (λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> λ (auto-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S i-v) f-v) (max i-v f-v)) -> matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (max i-v f-v) (max i-v f-v)) (matita-arithmetics-nat.le (max i-v f-v) (max (matita-arithmetics-nat.S i-v) f-v)) (matita-arithmetics-nat.le-n (max i-v f-v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (max i-v f-v) (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (max i-v f-v) (max i-v f-v)) (matita-arithmetics-nat.le (max i-v f-v) X--1-v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (max i-v f-v) (max i-v f-v))) (max (matita-arithmetics-nat.S i-v) f-v) auto-v)) X-clearme-v) (max-cases f-v i-v))) m-v H-v

true-to-le-max : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v n-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-arithmetics-nat.le m-v (max n-v f-v)
true-to-le-max = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v X-x-365-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-arithmetics-nat.le m-v (max X-x-365-v f-v)) (λ (m-v : matita-arithmetics-nat.nat) -> λ (ltmO-v : matita-arithmetics-nat.lt m-v matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-arithmetics-nat.le m-v (max matita-arithmetics-nat.O f-v)) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S m-v) matita-arithmetics-nat.O) ltmO-v (matita-arithmetics-nat.not-le-Sn-O m-v))) (λ (i-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v i-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-arithmetics-nat.le m-v (max i-v f-v)) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (ltm-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S i-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt m-v i-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v i-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt m-v i-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v i-v)) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-arithmetics-nat.le m-v (max (matita-arithmetics-nat.S i-v) f-v)) (λ (ltm0-v : matita-arithmetics-nat.lt m-v i-v) -> λ (fm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-arithmetics-nat.transitive-le m-v (max i-v f-v) (max (matita-arithmetics-nat.S i-v) f-v) (Hind-v m-v ltm0-v (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v m-v) fm-v)) (le-to-le-max f-v i-v (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.le-n-Sn i-v))) (λ (eqm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v i-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat i-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v i-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.true) -> matita-arithmetics-nat.le x-v (max (matita-arithmetics-nat.S i-v) f-v)) (λ (eqf-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> matita-arithmetics-nat.le i-v (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) i-v (max' i-v f-v matita-arithmetics-nat.O) x-v)) (matita-arithmetics-nat.le-n i-v) (f-v i-v) eqf-v) m-v eqm-v) (matita-arithmetics-nat.le-to-or-lt-eq m-v i-v (matita-arithmetics-nat.le-S-S-to-le m-v i-v ltm-v))) n-v

lt-max-to-false : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v n-v) -> (X--1-v : matita-arithmetics-nat.lt (max n-v f-v) m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false
lt-max-to-false = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (ltnm-v : matita-arithmetics-nat.lt m-v n-v) -> λ (eqf-v : matita-arithmetics-nat.lt (max n-v f-v) m-v) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) (λ (fm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt (max n-v f-v) m-v) eqf-v (matita-arithmetics-nat.le-to-not-lt m-v (max n-v f-v) (true-to-le-max f-v n-v m-v ltnm-v (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v m-v) fm-v))))) (λ (auto-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.false) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.false) (f-v m-v) auto-v) (matita-basics-bool.true-or-false (f-v m-v))

max-exists : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v n-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> (X--2-v : (i-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-arithmetics-nat.lt m-v i-v) -> (X--3-v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max n-v f-v) m-v
max-exists = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v X-x-365-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> (X--2-v : (i-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-arithmetics-nat.lt m-v i-v) -> (X--3-v : matita-arithmetics-nat.lt i-v X-x-365-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max X-x-365-v f-v) m-v) (λ (m-v : matita-arithmetics-nat.nat) -> λ (ltO-v : matita-arithmetics-nat.lt m-v matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> (X--1-v : (i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt m-v i-v) -> (X--2-v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max matita-arithmetics-nat.O f-v) m-v) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S m-v) matita-arithmetics-nat.O) ltO-v (matita-arithmetics-nat.not-le-Sn-O m-v))) (λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (m0-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m0-v m-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m0-v) matita-basics-bool.true) -> (X--2-v : (i-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-arithmetics-nat.lt m0-v i-v) -> (X--3-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) m0-v) -> λ (max-v : matita-arithmetics-nat.nat) -> λ (ltmax-v : matita-arithmetics-nat.lt max-v (matita-arithmetics-nat.S m-v)) -> λ (fmax-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v max-v) matita-basics-bool.true) -> λ (ismax-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt max-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt max-v m-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat max-v m-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt max-v m-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat max-v m-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S m-v) f-v) max-v) (λ (ltm-v : matita-arithmetics-nat.lt max-v m-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v f-v matita-arithmetics-nat.O) x-v) max-v) (Hind-v max-v ltm-v fmax-v (λ (i-v : matita-arithmetics-nat.nat) -> λ (Hl-v : matita-arithmetics-nat.lt max-v i-v) -> λ (Hr-v : matita-arithmetics-nat.lt i-v m-v) -> ismax-v i-v Hl-v (matita-arithmetics-nat.le-S (matita-arithmetics-nat.S i-v) m-v Hr-v))) (f-v m-v) (ismax-v m-v ltm-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.lt-plus-Sn-r m-v matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v X---v) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X---v) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus-n-Sm m-v matita-arithmetics-nat.O) m-v (matita-arithmetics-nat.plus-n-O m-v))) (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O m-v))))) (λ (ltm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat max-v m-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat max-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat max-v x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X---v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) x-1-v (max' x-1-v f-v matita-arithmetics-nat.O) (f-v x-1-v)) max-v) (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) max-v (max' max-v f-v matita-arithmetics-nat.O) x-v) max-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X---v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) max-v (max' max-v f-v matita-arithmetics-nat.O) matita-basics-bool.true)) (f-v max-v) fmax-v) m-v ltm-v) (matita-arithmetics-nat.le-to-or-lt-eq max-v m-v (matita-arithmetics-nat.le-S-S-to-le max-v m-v ltmax-v))) n-v

max-not-exists : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max n-v f-v) matita-arithmetics-nat.O
max-not-exists = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (ffalse-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-arithmetics-nat.le-gen lzero (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max X---v f-v) matita-arithmetics-nat.O) n-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le X-x-365-v n-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max X-x-365-v f-v) matita-arithmetics-nat.O) (λ (auto-v : matita-arithmetics-nat.le matita-arithmetics-nat.O n-v) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v matita-arithmetics-nat.O) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) (max matita-arithmetics-nat.O f-v) (max-O f-v)) (λ (j-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (X---v : matita-arithmetics-nat.le j-v n-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max j-v f-v) matita-arithmetics-nat.O) -> λ (ltj-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S j-v) n-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) j-v (max' j-v f-v matita-arithmetics-nat.O) x-v) matita-arithmetics-nat.O) (Hind-v (matita-arithmetics-nat.lt-to-le j-v n-v ltj-v)) (f-v j-v) (ffalse-v j-v ltj-v)) i-v)

let-clause-1013 : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (i-v : matita-arithmetics-nat.nat) -> (Hind-v : (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max i-v f-v) m-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v matita-arithmetics-nat.O) -> (fi-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> (eqm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v m-v) -> (fm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.false matita-basics-bool.true
let-clause-1013 = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max i-v f-v) m-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v matita-arithmetics-nat.O) -> λ (fi-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> λ (eqm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v m-v) -> λ (fm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.rewrite-l lzero lzero matita-basics-bool.bool (f-v m-v) (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat i-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v X---v) matita-basics-bool.true) fi-v m-v eqm-v) matita-basics-bool.false fm-v

fmax-false : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max n-v f-v) m-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v matita-arithmetics-nat.O
fmax-false = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max X-x-365-v f-v) m-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v matita-arithmetics-nat.O) (λ (auto-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max matita-arithmetics-nat.O f-v) m-v) -> λ (auto'-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat m-v) matita-arithmetics-nat.O (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (max matita-arithmetics-nat.O f-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v m-v) auto-v matita-arithmetics-nat.O (max-O f-v))) (λ (i-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max i-v f-v) m-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v matita-arithmetics-nat.O) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false)) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) i-v (max' i-v f-v matita-arithmetics-nat.O) (f-v i-v)) m-v) -> (X--2-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v matita-arithmetics-nat.O) (λ (fi-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) i-v (max' i-v f-v matita-arithmetics-nat.O) x-v) m-v) -> (X--2-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v matita-arithmetics-nat.O) (λ (eqm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v m-v) -> λ (fm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v matita-arithmetics-nat.O) (matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) fi-v (matita-basics-logic.eq-coerc lzero (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.false)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true)) matita-basics-bool.not-eq-true-false (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true X---v)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.true)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v X---v) matita-basics-bool.true))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.true)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.true))) (f-v m-v) (matita-basics-logic.rewrite-l lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) X---v) fm-v matita-basics-bool.true (let-clause-1013 f-v n-v m-v i-v Hind-v fi-v eqm-v fm-v))) i-v eqm-v) matita-basics-bool.false (let-clause-1013 f-v n-v m-v i-v Hind-v fi-v eqm-v fm-v))))) (f-v i-v) fi-v) (λ (fi-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.false) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) i-v (max' i-v f-v matita-arithmetics-nat.O) x-v) m-v) -> (X--2-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v matita-arithmetics-nat.O) Hind-v (f-v i-v) fi-v) (matita-basics-bool.true-or-false (f-v i-v))) n-v

data max-spec (n-v : matita-arithmetics-nat.nat) (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) : (X---v : matita-arithmetics-nat.nat) -> Set (lzero) where
  found-max-spec' : (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v n-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> (X--2-v : (i-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-arithmetics-nat.lt m-v i-v) -> (X--3-v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> max-spec n-v f-v m-v
  not-found-max-spec' : (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> max-spec n-v f-v matita-arithmetics-nat.O


found-max-spec : (n-v : matita-arithmetics-nat.nat) -> (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v n-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> (X--2-v : (i-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-arithmetics-nat.lt m-v i-v) -> (X--3-v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> max-spec n-v f-v m-v
found-max-spec _ _ = found-max-spec'

not-found-max-spec : (n-v : matita-arithmetics-nat.nat) -> (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> max-spec n-v f-v matita-arithmetics-nat.O

not-found-max-spec _ _ = not-found-max-spec'

match-max-spec : (X-n-v : matita-arithmetics-nat.nat) -> (X-f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (return-sort-v : Level) -> (return-type-v : (X---v : matita-arithmetics-nat.nat) -> (z-v : max-spec X-n-v X-f-v X---v) -> Set return-sort-v) -> (case-found-max-spec-v : (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v X-n-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (X-f-v m-v) matita-basics-bool.true) -> (X--2-v : (i-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-arithmetics-nat.lt m-v i-v) -> (X--3-v : matita-arithmetics-nat.lt i-v X-n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (X-f-v i-v) matita-basics-bool.false) -> return-type-v m-v (found-max-spec X-n-v X-f-v m-v X---v X--1-v X--2-v)) -> (case-not-found-max-spec-v : (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v X-n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (X-f-v i-v) matita-basics-bool.false) -> return-type-v matita-arithmetics-nat.O (not-found-max-spec X-n-v X-f-v X---v)) -> (X---v : matita-arithmetics-nat.nat) -> (z-v : max-spec X-n-v X-f-v X---v) -> return-type-v X---v z-v
match-max-spec _ _ _ _ casefound casenotfound x (found-max-spec' n p x1 x2) = casefound n p x1 x2
match-max-spec _ _ _ _ casefound casenotfound x (not-found-max-spec' n) = casenotfound n

max-spec-ind : (l8-v : Level) -> (X-n-v : matita-arithmetics-nat.nat) -> (X-f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (Q--v : (x-971-v : matita-arithmetics-nat.nat) -> (X-x-972-v : max-spec X-n-v X-f-v x-971-v) -> Set l8-v) -> (X-H-found-max-spec-v : (m-v : matita-arithmetics-nat.nat) -> (x-975-v : matita-arithmetics-nat.lt m-v X-n-v) -> (x-974-v : matita-basics-logic.eq lzero matita-basics-bool.bool (X-f-v m-v) matita-basics-bool.true) -> (x-973-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v X-n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (X-f-v i-v) matita-basics-bool.false) -> Q--v m-v (found-max-spec X-n-v X-f-v m-v x-975-v x-974-v x-973-v)) -> (X-H-not-found-max-spec-v : (x-976-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v X-n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (X-f-v i-v) matita-basics-bool.false) -> Q--v matita-arithmetics-nat.O (not-found-max-spec X-n-v X-f-v x-976-v)) -> (x-971-v : matita-arithmetics-nat.nat) -> (x-972-v : max-spec X-n-v X-f-v x-971-v) -> Q--v x-971-v x-972-v
max-spec-ind _ _ _ _ casefound casenotfound x (found-max-spec' n p x1 x2) = casefound n p x1 x2
max-spec-ind _ _ _ _ casefound casenotfound x (not-found-max-spec' n) = casenotfound n


max-spec-inv-ind : (l28-v : Level) -> (x1-v : matita-arithmetics-nat.nat) -> (x2-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (x3-v : matita-arithmetics-nat.nat) -> (X-Hterm-v : max-spec x1-v x2-v x3-v) -> (P-v : (X-z1769-v : matita-arithmetics-nat.nat) -> Set l28-v) -> (X-H1-v : (m-v : matita-arithmetics-nat.nat) -> (X-x-975-v : matita-arithmetics-nat.lt m-v x1-v) -> (X-x-974-v : matita-basics-logic.eq lzero matita-basics-bool.bool (x2-v m-v) matita-basics-bool.true) -> (X-x-973-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v x1-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (x2-v i-v) matita-basics-bool.false) -> (X-z1770-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x3-v m-v) -> P-v m-v) -> (X-H2-v : (X-x-976-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v x1-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (x2-v i-v) matita-basics-bool.false) -> (X-z1770-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x3-v matita-arithmetics-nat.O) -> P-v matita-arithmetics-nat.O) -> P-v x3-v
max-spec-inv-ind = λ (l28-v : Level) -> λ (x1-v : matita-arithmetics-nat.nat) -> λ (x2-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (x3-v : matita-arithmetics-nat.nat) -> λ (Hterm-v : max-spec x1-v x2-v x3-v) -> λ (P-v : (X-z1769-v : matita-arithmetics-nat.nat) -> Set l28-v) -> λ (H1-v : (m-v : matita-arithmetics-nat.nat) -> (X-x-975-v : matita-arithmetics-nat.lt m-v x1-v) -> (X-x-974-v : matita-basics-logic.eq lzero matita-basics-bool.bool (x2-v m-v) matita-basics-bool.true) -> (X-x-973-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v x1-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (x2-v i-v) matita-basics-bool.false) -> (X-z1770-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x3-v m-v) -> P-v m-v) -> λ (H2-v : (X-x-976-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v x1-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (x2-v i-v) matita-basics-bool.false) -> (X-z1770-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x3-v matita-arithmetics-nat.O) -> P-v matita-arithmetics-nat.O) -> max-spec-ind l28-v x1-v x2-v (λ (x-971-v : matita-arithmetics-nat.nat) -> λ (X-x-972-v : max-spec x1-v x2-v x-971-v) -> (X-z1770-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x3-v x-971-v) -> P-v x-971-v) H1-v H2-v x3-v Hterm-v (matita-basics-logic.refl lzero matita-arithmetics-nat.nat x3-v)

max-spec-to-max : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : max-spec n-v f-v m-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max n-v f-v) m-v
max-spec-to-max = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (spec-v : max-spec n-v f-v m-v) -> match-max-spec n-v f-v lzero (λ (X---v : matita-arithmetics-nat.nat) -> λ (X-0-v : max-spec n-v f-v X---v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max n-v f-v) X---v) (λ (max-v : matita-arithmetics-nat.nat) -> λ (ltmax-v : matita-arithmetics-nat.lt max-v n-v) -> λ (fmax-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v max-v) matita-basics-bool.true) -> λ (ismax-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt max-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> max-exists f-v n-v max-v ltmax-v (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v max-v) fmax-v) ismax-v) (λ (ffalse-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> max-not-exists f-v n-v ffalse-v) m-v spec-v

let-clause-10131 : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (n0-v : matita-arithmetics-nat.nat) -> (eqm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S n0-v) f-v) m-v) -> (fm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> (i-v : matita-arithmetics-nat.nat) -> (j-v : matita-arithmetics-nat.nat) -> (ltj-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S j-v) (matita-arithmetics-nat.S n0-v)) -> (x7-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x7-v (matita-arithmetics-nat.plus m-v x7-v)
let-clause-10131 = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (n0-v : matita-arithmetics-nat.nat) -> λ (eqm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S n0-v) f-v) m-v) -> λ (fm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (j-v : matita-arithmetics-nat.nat) -> λ (ltj-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S j-v) (matita-arithmetics-nat.S n0-v)) -> λ (x7-v : matita-arithmetics-nat.nat) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x7-v (matita-arithmetics-nat.plus X---v x7-v)) (matita-arithmetics-nat.plus-O-n x7-v) m-v (fmax-false f-v (matita-arithmetics-nat.S n0-v) m-v eqm-v fm-v)

max-to-max-spec : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max n-v f-v) m-v) -> max-spec n-v f-v m-v
max-to-max-spec = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max X---v f-v) m-v) -> max-spec X---v f-v m-v) (λ (eqm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max matita-arithmetics-nat.O f-v) m-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (max matita-arithmetics-nat.O f-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max matita-arithmetics-nat.O f-v) x-1-v) -> max-spec matita-arithmetics-nat.O f-v x-1-v) (not-found-max-spec matita-arithmetics-nat.O f-v (λ (i-v : matita-arithmetics-nat.nat) -> λ (ltiO-v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S i-v) matita-arithmetics-nat.O) ltiO-v (matita-arithmetics-nat.not-le-Sn-O i-v)))) m-v eqm-v) (λ (n0-v : matita-arithmetics-nat.nat) -> λ (eqm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S n0-v) f-v) m-v) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false)) -> max-spec (matita-arithmetics-nat.S n0-v) f-v m-v) (λ (fm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> found-max-spec (matita-arithmetics-nat.S n0-v) f-v m-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt (max (matita-arithmetics-nat.S n0-v) f-v) (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S n0-v)) (lt-max-n f-v (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.lt-O-S n0-v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt X---v (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S n0-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S n0-v))) (max (matita-arithmetics-nat.S n0-v) f-v) eqm-v)) (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v m-v) fm-v) (λ (i-v : matita-arithmetics-nat.nat) -> λ (auto-v : matita-arithmetics-nat.lt m-v i-v) -> λ (auto'-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n0-v)) -> lt-max-to-false f-v (matita-arithmetics-nat.S n0-v) i-v auto'-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt m-v i-v) (matita-arithmetics-nat.lt (max (matita-arithmetics-nat.S n0-v) f-v) i-v) auto-v (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (max (matita-arithmetics-nat.S n0-v) f-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt X---v i-v) (matita-arithmetics-nat.lt (max (matita-arithmetics-nat.S n0-v) f-v) i-v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (max (matita-arithmetics-nat.S n0-v) f-v) i-v)) m-v eqm-v)))) (λ (fm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O) -> max-spec (matita-arithmetics-nat.S n0-v) f-v x-v) (not-found-max-spec (matita-arithmetics-nat.S n0-v) f-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt X---v (matita-arithmetics-nat.S n0-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v X---v) matita-basics-bool.false) (λ (auto-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S n0-v)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v X---v) matita-basics-bool.false) (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.false) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.false) (f-v m-v) fm-v) matita-arithmetics-nat.O (fmax-false f-v (matita-arithmetics-nat.S n0-v) m-v eqm-v fm-v)) (λ (j-v : matita-arithmetics-nat.nat) -> λ (ltj-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S j-v) (matita-arithmetics-nat.S n0-v)) -> lt-max-to-false f-v (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S j-v) ltj-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt (max (matita-arithmetics-nat.S n0-v) f-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus (max (matita-arithmetics-nat.S n0-v) f-v) (max (matita-arithmetics-nat.S n0-v) f-v)) (matita-arithmetics-nat.S j-v))) (matita-arithmetics-nat.lt (max (matita-arithmetics-nat.S n0-v) f-v) (matita-arithmetics-nat.S j-v)) (matita-arithmetics-nat.lt-plus-Sn-r (max (matita-arithmetics-nat.S n0-v) f-v) (max (matita-arithmetics-nat.S n0-v) f-v) j-v) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (max (matita-arithmetics-nat.S n0-v) f-v) (matita-arithmetics-nat.plus (max (matita-arithmetics-nat.S n0-v) f-v) (matita-arithmetics-nat.S j-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (max (matita-arithmetics-nat.S n0-v) f-v) X---v) (matita-arithmetics-nat.lt (max (matita-arithmetics-nat.S n0-v) f-v) (matita-arithmetics-nat.S j-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt X---v (matita-arithmetics-nat.plus X---v (matita-arithmetics-nat.plus X---v (matita-arithmetics-nat.S j-v)))) (matita-arithmetics-nat.lt X---v (matita-arithmetics-nat.S j-v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S j-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus m-v X---v)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S j-v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S j-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v X---v) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S j-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S j-v))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S j-v)) (let-clause-10131 f-v n-v m-v n0-v eqm-v fm-v i-v j-v ltj-v (matita-arithmetics-nat.S j-v))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S j-v)) (let-clause-10131 f-v n-v m-v n0-v eqm-v fm-v i-v j-v ltj-v (matita-arithmetics-nat.S j-v))) (max (matita-arithmetics-nat.S n0-v) f-v) eqm-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus (max (matita-arithmetics-nat.S n0-v) f-v) (max (matita-arithmetics-nat.S n0-v) f-v)) (matita-arithmetics-nat.S j-v)) (matita-arithmetics-nat.associative-plus (max (matita-arithmetics-nat.S n0-v) f-v) (max (matita-arithmetics-nat.S n0-v) f-v) (matita-arithmetics-nat.S j-v))))) i-v)) m-v (fmax-false f-v (matita-arithmetics-nat.S n0-v) m-v eqm-v fm-v)) (matita-basics-bool.true-or-false (f-v m-v))) n-v

max-f-g : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (g-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) (g-v i-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max n-v f-v) (max n-v g-v)
max-f-g = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (g-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v X-x-365-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) (g-v i-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max X-x-365-v f-v) (max X-x-365-v g-v)) (λ (auto-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) (g-v i-v)) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (max matita-arithmetics-nat.O g-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) (max matita-arithmetics-nat.O g-v) (max-O g-v)) (max matita-arithmetics-nat.O f-v) (max-O f-v)) (λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) (g-v i-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) (max m-v g-v)) -> λ (ext-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) (g-v i-v)) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool (g-v m-v) (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v (g-v m-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v f-v matita-arithmetics-nat.O) x-v) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v g-v matita-arithmetics-nat.O) (g-v m-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (max' m-v g-v matita-arithmetics-nat.O) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (max' m-v g-v matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v x-v (g-v m-v)) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v g-v matita-arithmetics-nat.O) (g-v m-v))) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X---v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v g-v matita-arithmetics-nat.O) (g-v m-v))) (max' m-v f-v matita-arithmetics-nat.O) (Hind-v (λ (i-v : matita-arithmetics-nat.nat) -> λ (ltim-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S i-v) m-v) -> ext-v i-v (matita-arithmetics-nat.le-S (matita-arithmetics-nat.S i-v) m-v ltim-v)))) (f-v m-v) (ext-v m-v (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (max' m-v g-v matita-arithmetics-nat.O) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (max' m-v g-v matita-arithmetics-nat.O)) -> matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v)) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.lt-plus-Sn-r m-v matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v X---v) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X---v) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus-n-Sm m-v matita-arithmetics-nat.O) m-v (matita-arithmetics-nat.plus-n-O m-v))) (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O m-v))) (max' m-v f-v matita-arithmetics-nat.O) (Hind-v (λ (i-v : matita-arithmetics-nat.nat) -> λ (ltim-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S i-v) m-v) -> ext-v i-v (matita-arithmetics-nat.le-S (matita-arithmetics-nat.S i-v) m-v ltim-v)))))) n-v

le-max-f-max-g : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (g-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (g-v i-v) matita-basics-bool.true) -> matita-arithmetics-nat.le (max n-v f-v) (max n-v g-v)
le-max-f-max-g = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (g-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v X-x-365-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (g-v i-v) matita-basics-bool.true) -> matita-arithmetics-nat.le (max X-x-365-v f-v) (max X-x-365-v g-v)) (λ (auto-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (g-v i-v) matita-basics-bool.true) -> matita-arithmetics-nat.le-n (max matita-arithmetics-nat.O f-v)) (λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (g-v i-v) matita-basics-bool.true) -> matita-arithmetics-nat.le (max m-v f-v) (max m-v g-v)) -> λ (ext-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S m-v)) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (g-v i-v) matita-basics-bool.true) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false)) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v f-v matita-arithmetics-nat.O) (f-v m-v)) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v g-v matita-arithmetics-nat.O) (g-v m-v))) (λ (Heq-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v f-v matita-arithmetics-nat.O) x-v) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v g-v matita-arithmetics-nat.O) (g-v m-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v f-v matita-arithmetics-nat.O) matita-basics-bool.true) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v g-v matita-arithmetics-nat.O) x-v)) (matita-arithmetics-nat.le-n (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v f-v matita-arithmetics-nat.O) matita-basics-bool.true)) (g-v m-v) (ext-v m-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.lt-plus-Sn-r m-v matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v X---v) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X---v) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus-n-Sm m-v matita-arithmetics-nat.O) m-v (matita-arithmetics-nat.plus-n-O m-v))) (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O m-v))) (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v m-v) Heq-v))) (f-v m-v) Heq-v) (λ (Heq-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.false) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v f-v matita-arithmetics-nat.O) x-v) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v g-v matita-arithmetics-nat.O) (g-v m-v))) (matita-basics-bool.match-bool lzero (λ (X---v : matita-basics-bool.bool) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v f-v matita-arithmetics-nat.O) matita-basics-bool.false) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) m-v (max' m-v g-v matita-arithmetics-nat.O) X---v)) (le-max-n f-v m-v) (Hind-v (λ (i-v : matita-arithmetics-nat.nat) -> λ (ltim-v : matita-arithmetics-nat.lt i-v m-v) -> ext-v i-v (matita-arithmetics-nat.le-S (matita-arithmetics-nat.S i-v) m-v ltim-v))) (g-v m-v)) (f-v m-v) Heq-v) (matita-basics-bool.true-or-false (f-v m-v))) n-v

f-max-true : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (max n-v f-v)) matita-basics-bool.true
f-max-true = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> match-max-spec n-v f-v lzero (λ (X---v : matita-arithmetics-nat.nat) -> λ (X-0-v : max-spec n-v f-v X---v) -> (X--1-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v X---v) matita-basics-bool.true) (λ (m-v : matita-arithmetics-nat.nat) -> λ (auto-v : matita-arithmetics-nat.lt m-v n-v) -> λ (auto'-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> λ (auto''-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> λ (auto'''-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v m-v) auto'-v) (λ (Hall-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.match-ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true)) lzero (λ (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v matita-arithmetics-nat.O) matita-basics-bool.true) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt x-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.true)) -> matita-basics-logic.match-And lzero lzero (matita-arithmetics-nat.lt x-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.true) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt x-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.true)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v matita-arithmetics-nat.O) matita-basics-bool.true) (λ (ltx-v : matita-arithmetics-nat.lt x-v n-v) -> λ (fx-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.true) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v matita-arithmetics-nat.O) matita-basics-bool.true) (matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.true) fx-v (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (x0-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x0-v matita-basics-bool.false) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool x0-v matita-basics-bool.true)) (matita-basics-logic.sym-not-eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.false matita-basics-bool.not-eq-true-false) (f-v x-v) (Hall-v x-v ltx-v)))) X-clearme0-v) X-clearme-v) (max n-v f-v) (max-to-max-spec f-v n-v (max n-v f-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (max n-v f-v)))

f-false-to-le-max : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> (X--1-v : (m-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt p-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-arithmetics-nat.le (max n-v f-v) p-v
f-false-to-le-max = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> λ (H1-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> λ (H2-v : (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt p-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-arithmetics-nat.not-lt-to-le p-v (max n-v f-v) (matita-basics-logic.nmk lzero (matita-arithmetics-nat.lt p-v (max n-v f-v)) (λ (H3-v : matita-arithmetics-nat.lt p-v (max n-v f-v)) -> matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.false) (matita-basics-logic.eq-ind lzero lzero matita-basics-bool.bool (f-v (max n-v f-v)) (λ (x-1-v : matita-basics-bool.bool) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (max n-v f-v)) x-1-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true x-1-v) (matita-basics-logic.sym-eq lzero matita-basics-bool.bool (f-v (max n-v f-v)) matita-basics-bool.true (f-max-true f-v n-v H1-v)) matita-basics-bool.false (H2-v (max n-v f-v) H3-v)) matita-basics-bool.not-eq-true-false))

exists-forall-lt : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false)
exists-forall-lt = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v X-x-365-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v X-x-365-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false)) (matita-basics-logic.or-intror lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (λ (i-v : matita-arithmetics-nat.nat) -> λ (lti0-v : matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt i-v matita-arithmetics-nat.O) lti0-v (matita-arithmetics-nat.le-to-not-lt matita-arithmetics-nat.O i-v (matita-arithmetics-nat.le-O-n i-v))))) (λ (n1-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n1-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n1-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false)) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n1-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n1-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n1-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n1-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false)) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false)) (λ (X-clearme0-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n1-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.match-ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n1-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true)) lzero (λ (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n1-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false)) (λ (a-v : matita-arithmetics-nat.nat) -> λ (X-clearme1-v : matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt a-v n1-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v a-v) matita-basics-bool.true)) -> matita-basics-logic.match-And lzero lzero (matita-arithmetics-nat.lt a-v n1-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v a-v) matita-basics-bool.true) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt a-v n1-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v a-v) matita-basics-bool.true)) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false)) (λ (Ha1-v : matita-arithmetics-nat.lt a-v n1-v) -> λ (Ha2-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v a-v) matita-basics-bool.true) -> matita-basics-logic.or-introl lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.ex-intro lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true)) a-v (matita-basics-logic.conj lzero lzero (matita-arithmetics-nat.lt a-v (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v a-v) matita-basics-bool.true) (matita-arithmetics-nat.le-S (matita-arithmetics-nat.S a-v) n1-v Ha1-v) (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v a-v) Ha2-v)))) X-clearme1-v) X-clearme0-v) (λ (H-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n1-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n1-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n1-v) matita-basics-bool.false) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n1-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n1-v) matita-basics-bool.false)) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false)) (λ (HfS-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n1-v) matita-basics-bool.true) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false)) (matita-basics-logic.or-introl lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.ex-intro lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true)) n1-v (matita-basics-logic.conj lzero lzero (matita-arithmetics-nat.lt n1-v (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n1-v) matita-basics-bool.true) (matita-arithmetics-nat.le-n (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v n1-v) HfS-v)))) (f-v n1-v) HfS-v) (λ (HfS-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n1-v) matita-basics-bool.false) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.false) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false)) (matita-basics-logic.or-intror lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (λ (i-v : matita-arithmetics-nat.nat) -> λ (lei-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n1-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n1-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n1-v))) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (λ (Hi-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n1-v)) -> H-v i-v (matita-arithmetics-nat.le-S-S-to-le (matita-arithmetics-nat.S i-v) n1-v Hi-v)) (λ (Hi-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n1-v)) -> matita-arithmetics-nat.nat-discr lzero (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n1-v) Hi-v (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (λ (e0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R0 lzero matita-arithmetics-nat.nat i-v) n1-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat n1-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v n1-v) -> (X--1-v : matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.S n1-v)) -> (X--2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.false) (λ (lei0-v : matita-arithmetics-nat.lt n1-v (matita-arithmetics-nat.S n1-v)) -> λ (Hi0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.streicherK lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n1-v) matita-basics-bool.false) (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.false) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.false) (f-v n1-v) HfS-v) Hi0-v) i-v e0-v lei-v Hi-v)) (matita-arithmetics-nat.le-to-or-lt-eq (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n1-v) lei-v))) (f-v n1-v) HfS-v) (matita-basics-bool.true-or-false (f-v n1-v))) X-clearme-v) n-v

exists-max-forall-false : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (max n-v f-v)) matita-basics-bool.true)) (matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max n-v f-v) matita-arithmetics-nat.O))
exists-max-forall-false = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false)) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (max n-v f-v)) matita-basics-bool.true)) (matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max n-v f-v) matita-arithmetics-nat.O))) (λ (H-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.or-introl lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (max n-v f-v)) matita-basics-bool.true)) (matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max n-v f-v) matita-arithmetics-nat.O)) (matita-basics-logic.conj lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (max n-v f-v)) matita-basics-bool.true) H-v (f-max-true f-v n-v H-v))) (λ (H-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.or-intror lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (max n-v f-v)) matita-basics-bool.true)) (matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max n-v f-v) matita-arithmetics-nat.O)) (matita-basics-logic.conj lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max n-v f-v) matita-arithmetics-nat.O) H-v (max-not-exists f-v n-v H-v))) (exists-forall-lt f-v n-v)

let-clause-1009 : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (Hfn-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n-v) matita-basics-bool.false) -> (Hmax-v : matita-arithmetics-nat.le (max m-v f-v) n-v) -> (Hmax0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) n-v) -> (X-clearme-v : matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) matita-arithmetics-nat.O)) -> (auto-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> (auto'-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) matita-arithmetics-nat.O) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v
let-clause-1009 = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (Hfn-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n-v) matita-basics-bool.false) -> λ (Hmax-v : matita-arithmetics-nat.le (max m-v f-v) n-v) -> λ (Hmax0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) n-v) -> λ (X-clearme-v : matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) matita-arithmetics-nat.O)) -> λ (auto-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> λ (auto'-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) matita-arithmetics-nat.O) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (max m-v f-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v n-v) Hmax0-v matita-arithmetics-nat.O auto'-v

false-to-lt-max : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n-v) matita-basics-bool.false) -> (X--2-v : matita-arithmetics-nat.le (max m-v f-v) n-v) -> matita-arithmetics-nat.lt (max m-v f-v) n-v
false-to-lt-max = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (Hfn-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v n-v) matita-basics-bool.false) -> λ (Hmax-v : matita-arithmetics-nat.le (max m-v f-v) n-v) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt (max m-v f-v) n-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) n-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (max m-v f-v) n-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) n-v)) -> matita-arithmetics-nat.lt (max m-v f-v) n-v) (λ (Hmax0-v : matita-arithmetics-nat.lt (max m-v f-v) n-v) -> Hmax0-v) (λ (Hmax0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) n-v) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (max m-v f-v)) matita-basics-bool.true)) (matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) matita-arithmetics-nat.O)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.And lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (max m-v f-v)) matita-basics-bool.true)) (matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) matita-arithmetics-nat.O))) -> matita-arithmetics-nat.lt (max m-v f-v) n-v) (λ (X-clearme-v : matita-basics-logic.And lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (max m-v f-v)) matita-basics-bool.true)) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (max m-v f-v)) matita-basics-bool.true) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (max m-v f-v)) matita-basics-bool.true)) -> matita-arithmetics-nat.lt (max m-v f-v) n-v) (λ (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v m-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> λ (Hfmax-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (max m-v f-v)) matita-basics-bool.true) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.lt (max m-v f-v) n-v) (matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.false) (matita-basics-logic.rewrite-l lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X--1-v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true X--1-v) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) matita-basics-bool.false (matita-basics-logic.rewrite-l lzero lzero matita-basics-bool.bool (f-v n-v) (λ (X--1-v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X--1-v matita-basics-bool.false) Hfn-v matita-basics-bool.true (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (max m-v f-v) (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v X--1-v) matita-basics-bool.true) Hfmax-v n-v Hmax0-v))) matita-basics-bool.not-eq-true-false)) X-clearme-v) (λ (X-clearme-v : matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) matita-arithmetics-nat.O)) -> matita-basics-logic.match-And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) matita-arithmetics-nat.O) lzero (λ (X---v : matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) matita-arithmetics-nat.O)) -> matita-arithmetics-nat.lt (max m-v f-v) n-v) (λ (auto-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> λ (auto'-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) matita-arithmetics-nat.O) -> matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) (matita-arithmetics-nat.lt (max m-v f-v) n-v) posn-v (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt X---v n-v) (matita-arithmetics-nat.lt (max m-v f-v) n-v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt n-v n-v) (matita-arithmetics-nat.lt X---v n-v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt n-v n-v)) (max m-v f-v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (max m-v f-v) X---v) auto'-v n-v (let-clause-1009 f-v n-v m-v posn-v Hfn-v Hmax-v Hmax0-v X-clearme-v auto-v auto'-v))) matita-arithmetics-nat.O (let-clause-1009 f-v n-v m-v posn-v Hfn-v Hmax-v Hmax0-v X-clearme-v auto-v auto'-v))) X-clearme-v) (exists-max-forall-false f-v m-v)) (matita-arithmetics-nat.le-to-or-lt-eq (max m-v f-v) n-v Hmax-v)

min : (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.nat) -> (X--2-v : (X--2-v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> matita-arithmetics-nat.nat
min matita-arithmetics-nat.O b f = b
min (matita-arithmetics-nat.S p) b f = matita-basics-bool.match-bool lzero (λ (X--1-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b (min p (matita-arithmetics-nat.S b) f) (f b)


min0 : (X-n-v : matita-arithmetics-nat.nat) -> (X-f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> matita-arithmetics-nat.nat
min0 = λ (n-v : matita-arithmetics-nat.nat) -> λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> min n-v matita-arithmetics-nat.O f-v

min-O-f : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (b-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min matita-arithmetics-nat.O b-v f-v) b-v
min-O-f = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (b-v : matita-arithmetics-nat.nat) -> matita-basics-logic.refl lzero matita-arithmetics-nat.nat (min matita-arithmetics-nat.O b-v f-v)

true-min : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) -> (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min n-v b-v f-v) b-v
true-min = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (fb-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min X---v b-v f-v) b-v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v b-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat b-v) (min matita-arithmetics-nat.O b-v f-v) (min-O-f f-v b-v)) (λ (n0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min n0-v (matita-arithmetics-nat.S b-v) f-v) x-v) b-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat b-v) (f-v b-v) fb-v) n-v

false-min : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min (matita-arithmetics-nat.S n-v) b-v f-v) (min n-v (matita-arithmetics-nat.S b-v) f-v)
false-min = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (fb-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min n-v (matita-arithmetics-nat.S b-v) f-v) x-v) (min n-v (matita-arithmetics-nat.S b-v) f-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (min n-v (matita-arithmetics-nat.S b-v) f-v)) (f-v b-v) fb-v

le-min-r : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (min n-v b-v f-v) (matita-arithmetics-nat.plus n-v b-v)
le-min-r = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (min X-x-365-v b-v f-v) (matita-arithmetics-nat.plus X-x-365-v b-v)) (λ (b-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O)) (matita-arithmetics-nat.le (min matita-arithmetics-nat.O b-v f-v) (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v)) (matita-arithmetics-nat.le-plus-n-r matita-arithmetics-nat.O b-v) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O)) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O)) (matita-arithmetics-nat.le b-v X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O)) (matita-arithmetics-nat.le b-v X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v X---v) (matita-arithmetics-nat.le b-v b-v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v b-v)) (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O b-v)) (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O b-v)) (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v) (matita-arithmetics-nat.commutative-plus matita-arithmetics-nat.O b-v)) (min matita-arithmetics-nat.O b-v f-v) (min-O-f f-v b-v))) (λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (min m-v b-v f-v) (matita-arithmetics-nat.plus m-v b-v)) -> λ (b-v : matita-arithmetics-nat.nat) -> matita-basics-bool.match-bool lzero (λ (X---v : matita-basics-bool.bool) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) f-v) X---v) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus m-v b-v))) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.S (matita-arithmetics-nat.plus m-v b-v))) (matita-arithmetics-nat.minus-le (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus m-v b-v) m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.S (matita-arithmetics-nat.plus m-v b-v)))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus m-v b-v) m-v) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-nat.le b-v X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v)))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.plus m-v X---v)) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v)))) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X---v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus-n-Sm b-v matita-arithmetics-nat.O) b-v (matita-arithmetics-nat.plus-n-O b-v))) (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus m-v b-v) m-v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v (matita-arithmetics-nat.minus X---v m-v)) (matita-arithmetics-nat.minus-plus-m-m b-v m-v) (matita-arithmetics-nat.plus m-v b-v) (matita-arithmetics-nat.commutative-plus b-v m-v))) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus m-v b-v)) (matita-arithmetics-nat.plus-n-Sm m-v b-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus-minus-plus-plus-l m-v b-v m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (min m-v (matita-arithmetics-nat.S b-v) f-v) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v))) (matita-arithmetics-nat.le (min m-v (matita-arithmetics-nat.S b-v) f-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus m-v b-v))) (Hind-v (matita-arithmetics-nat.S b-v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (min m-v (matita-arithmetics-nat.S b-v) f-v) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v))) (matita-arithmetics-nat.le (min m-v (matita-arithmetics-nat.S b-v) f-v) X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (min m-v (matita-arithmetics-nat.S b-v) f-v) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v)))) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus m-v b-v)) (matita-arithmetics-nat.plus-n-Sm m-v b-v))) (f-v b-v)) n-v

le-min-l : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le b-v (min n-v b-v f-v)
le-min-l = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le b-v (min X-x-365-v b-v f-v)) (λ (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le-n b-v) (λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le b-v (min m-v b-v f-v)) -> λ (b-v : matita-arithmetics-nat.nat) -> matita-basics-bool.match-bool lzero (λ (X---v : matita-basics-bool.bool) -> matita-arithmetics-nat.le b-v (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) f-v) X---v)) (matita-arithmetics-nat.le-n b-v) (matita-arithmetics-nat.lt-to-le b-v (min m-v (matita-arithmetics-nat.S b-v) f-v) (Hind-v (matita-arithmetics-nat.S b-v))) (f-v b-v)) n-v

le-to-le-min : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le n-v m-v) -> (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (min n-v b-v f-v) (min m-v b-v f-v)
le-to-le-min = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> matita-arithmetics-nat.nat-elim2 lzero (λ (X---v : matita-arithmetics-nat.nat) -> λ (X-0-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.le X---v X-0-v) -> (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (min X---v b-v f-v) (min X-0-v b-v f-v)) (λ (n-v : matita-arithmetics-nat.nat) -> λ (auto-v : matita-arithmetics-nat.le matita-arithmetics-nat.O n-v) -> λ (b-v : matita-arithmetics-nat.nat) -> le-min-l f-v n-v (min matita-arithmetics-nat.O b-v f-v)) (λ (n-v : matita-arithmetics-nat.nat) -> λ (leSO-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (min (matita-arithmetics-nat.S n-v) b-v f-v) (min matita-arithmetics-nat.O b-v f-v)) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) matita-arithmetics-nat.O) leSO-v (matita-arithmetics-nat.not-le-Sn-O n-v))) (λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (X---v : matita-arithmetics-nat.le n-v m-v) -> (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (min n-v b-v f-v) (min m-v b-v f-v)) -> λ (leSS-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.S m-v)) -> λ (b-v : matita-arithmetics-nat.nat) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false)) -> matita-arithmetics-nat.le (min (matita-arithmetics-nat.S n-v) b-v f-v) (min (matita-arithmetics-nat.S m-v) b-v f-v)) (λ (fb-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat b-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v b-v) -> matita-arithmetics-nat.le x-v (min (matita-arithmetics-nat.S m-v) b-v f-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat b-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v b-v) -> matita-arithmetics-nat.le b-v x-v) (matita-arithmetics-nat.le-n b-v) (min (matita-arithmetics-nat.S m-v) b-v f-v) (true-min f-v b-v fb-v (matita-arithmetics-nat.S m-v))) (min (matita-arithmetics-nat.S n-v) b-v f-v) (true-min f-v b-v fb-v (matita-arithmetics-nat.S n-v))) (λ (fb-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (min n-v (matita-arithmetics-nat.S b-v) f-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (min n-v (matita-arithmetics-nat.S b-v) f-v)) -> matita-arithmetics-nat.le x-v (min (matita-arithmetics-nat.S m-v) b-v f-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (min m-v (matita-arithmetics-nat.S b-v) f-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (min m-v (matita-arithmetics-nat.S b-v) f-v)) -> matita-arithmetics-nat.le (min n-v (matita-arithmetics-nat.S b-v) f-v) x-v) (Hind-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.pred (matita-arithmetics-nat.S n-v)) (matita-arithmetics-nat.pred (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.le n-v m-v) (matita-arithmetics-nat.monotonic-pred (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.S m-v) leSS-v) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.pred (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.le n-v m-v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le n-v X---v) (matita-arithmetics-nat.le n-v m-v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le n-v m-v)) (matita-arithmetics-nat.pred (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.pred-Sn m-v)) (matita-arithmetics-nat.pred (matita-arithmetics-nat.S n-v)) (matita-arithmetics-nat.pred-Sn n-v))) (matita-arithmetics-nat.S b-v)) (min (matita-arithmetics-nat.S m-v) b-v f-v) (false-min f-v m-v b-v (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.false) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.false) (f-v b-v) fb-v))) (min (matita-arithmetics-nat.S n-v) b-v f-v) (false-min f-v n-v b-v (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.false) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.false) (f-v b-v) fb-v))) (matita-basics-bool.true-or-false (f-v b-v)))

true-to-le-min : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v m-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-arithmetics-nat.le (min n-v b-v f-v) m-v
true-to-le-min = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v m-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-arithmetics-nat.le (min X-x-365-v b-v f-v) m-v) (λ (m-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (auto-v : matita-arithmetics-nat.le b-v m-v) -> λ (auto'-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> auto-v) (λ (i-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (m-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v m-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-arithmetics-nat.le (min i-v b-v f-v) m-v) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (leb-v : matita-arithmetics-nat.le b-v m-v) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt b-v m-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v m-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt b-v m-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v m-v)) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-arithmetics-nat.le (min (matita-arithmetics-nat.S i-v) b-v f-v) m-v) (λ (ltm-v : matita-arithmetics-nat.lt b-v m-v) -> λ (fm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-basics-bool.match-bool lzero (λ (X---v : matita-basics-bool.bool) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min i-v (matita-arithmetics-nat.S b-v) f-v) X---v) m-v) leb-v (Hind-v m-v (matita-arithmetics-nat.S b-v) ltm-v (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v m-v) fm-v)) (f-v b-v)) (λ (eqm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v m-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat b-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v x-1-v) -> (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-1-v) matita-basics-bool.true) -> matita-arithmetics-nat.le (min (matita-arithmetics-nat.S i-v) b-v f-v) x-1-v) (λ (eqb-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min i-v (matita-arithmetics-nat.S b-v) f-v) x-v) b-v) (matita-arithmetics-nat.le-n b-v) (f-v b-v) eqb-v) m-v eqm-v) (matita-arithmetics-nat.le-to-or-lt-eq b-v m-v leb-v)) n-v

lt-min-to-false : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v m-v) -> (X--1-v : matita-arithmetics-nat.lt m-v (min n-v b-v f-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false
lt-min-to-false = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (lebm-v : matita-arithmetics-nat.le b-v m-v) -> λ (ltm-v : matita-arithmetics-nat.lt m-v (min n-v b-v f-v)) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) (λ (fm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt m-v (min n-v b-v f-v)) ltm-v (matita-arithmetics-nat.le-to-not-lt (min n-v b-v f-v) m-v (true-to-le-min f-v n-v m-v b-v lebm-v (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v m-v) fm-v))))) (λ (auto-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.false) -> matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.false) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.false) (f-v m-v) auto-v) (matita-basics-bool.true-or-false (f-v m-v))

fmin-true : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (min n-v b-v f-v)) -> (X--1-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus n-v b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true
fmin-true = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (min X-x-365-v b-v f-v)) -> (X--1-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus X-x-365-v b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) (λ (m-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (eqmb-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v b-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat b-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v b-v) -> (X--1-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) b-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.true) (λ (leSb-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S b-v) b-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S b-v) b-v) leSb-v (matita-arithmetics-nat.not-le-Sn-n b-v))) m-v eqmb-v) (λ (n0-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (m-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (min n0-v b-v f-v)) -> (X--1-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus n0-v b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false)) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (min (matita-arithmetics-nat.S n0-v) b-v f-v)) -> (X--2-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) (λ (caseb-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat b-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v b-v) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v x-v) -> (X--2-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) (λ (auto-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v b-v) -> λ (auto'-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) -> matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v m-v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v X---v) matita-basics-bool.true) caseb-v m-v auto-v)) (min (matita-arithmetics-nat.S n0-v) b-v f-v) (true-min f-v b-v (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v b-v) caseb-v) (matita-arithmetics-nat.S n0-v))) (λ (caseb-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (min n0-v (matita-arithmetics-nat.S b-v) f-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (min n0-v (matita-arithmetics-nat.S b-v) f-v)) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v x-v) -> (X--2-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) (λ (eqm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (min n0-v (matita-arithmetics-nat.S b-v) f-v)) -> λ (ltm-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) -> Hind-v m-v (matita-arithmetics-nat.S b-v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat m-v) (min n0-v (matita-arithmetics-nat.S b-v) f-v) eqm-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus n0-v (matita-arithmetics-nat.S b-v))) ltm-v (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S n0-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v X---v) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus n0-v (matita-arithmetics-nat.S b-v)))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus n0-v (matita-arithmetics-nat.S b-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v X---v) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus n0-v (matita-arithmetics-nat.S b-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus n0-v (matita-arithmetics-nat.S b-v)))) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S n0-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.plus b-v n0-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.plus n0-v (matita-arithmetics-nat.S b-v))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus n0-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X---v) (matita-arithmetics-nat.plus n0-v (matita-arithmetics-nat.S b-v))) (matita-arithmetics-nat.plus-n-Sm n0-v b-v) (matita-arithmetics-nat.plus b-v n0-v) (matita-arithmetics-nat.commutative-plus n0-v b-v)) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.plus-n-Sm b-v n0-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S n0-v) b-v)))) (min (matita-arithmetics-nat.S n0-v) b-v f-v) (false-min f-v n0-v b-v (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.false) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.false) (f-v b-v) caseb-v))) (matita-basics-bool.true-or-false (f-v b-v))) n-v

min-exists : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (t-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt m-v t-v) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> (k-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-arithmetics-nat.le b-v m-v) -> (X--3-v : (i-v : matita-arithmetics-nat.nat) -> (X--3-v : matita-arithmetics-nat.le b-v i-v) -> (X--4-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> (X--4-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat t-v (matita-arithmetics-nat.plus k-v b-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min k-v b-v f-v) m-v
min-exists = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (t-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (ltmt-v : matita-arithmetics-nat.lt m-v t-v) -> λ (fm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> λ (k-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v m-v) -> (X--1-v : (i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.le b-v i-v) -> (X--2-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> (X--2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat t-v (matita-arithmetics-nat.plus X-x-365-v b-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min X-x-365-v b-v f-v) m-v) (λ (b-v : matita-arithmetics-nat.nat) -> λ (lebm-v : matita-arithmetics-nat.le b-v m-v) -> λ (ismin-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> λ (eqtb-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat t-v (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min matita-arithmetics-nat.O b-v f-v) m-v) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.le b-v m-v) lebm-v (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat t-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat t-v x-1-v) -> matita-basics-logic.Not lzero (matita-arithmetics-nat.le b-v m-v)) (matita-arithmetics-nat.lt-to-not-le m-v b-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt m-v t-v) (matita-arithmetics-nat.lt m-v b-v) ltmt-v (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat t-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v t-v) (matita-arithmetics-nat.lt m-v X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt m-v t-v)) b-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat t-v X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat t-v X---v) eqtb-v (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (matita-arithmetics-nat.commutative-plus matita-arithmetics-nat.O b-v)) b-v (matita-arithmetics-nat.plus-n-O b-v))))) (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v) eqtb-v))) (λ (d-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v m-v) -> (X--1-v : (i-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.le b-v i-v) -> (X--2-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> (X--2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat t-v (matita-arithmetics-nat.plus d-v b-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min d-v b-v f-v) m-v) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (lebm-v : matita-arithmetics-nat.le b-v m-v) -> λ (ismin-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> λ (eqt-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat t-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S d-v) b-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt b-v m-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v m-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt b-v m-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v m-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min (matita-arithmetics-nat.S d-v) b-v f-v) m-v) (λ (ltbm-v : matita-arithmetics-nat.lt b-v m-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (min d-v (matita-arithmetics-nat.S b-v) f-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (min d-v (matita-arithmetics-nat.S b-v) f-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v m-v) (Hind-v (matita-arithmetics-nat.S b-v) ltbm-v (λ (i-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S b-v) i-v) -> λ (H1-v : matita-arithmetics-nat.lt i-v m-v) -> ismin-v i-v (matita-arithmetics-nat.lt-to-le b-v i-v H-v) H1-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S d-v) b-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S d-v) b-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus d-v (matita-arithmetics-nat.S b-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus d-v (matita-arithmetics-nat.S b-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.plus d-v (matita-arithmetics-nat.S b-v))) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus d-v (matita-arithmetics-nat.S b-v))) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus d-v b-v)) (matita-arithmetics-nat.plus-n-Sm d-v b-v)) t-v eqt-v)) (min (matita-arithmetics-nat.S d-v) b-v f-v) (false-min f-v d-v b-v (ismin-v b-v (matita-arithmetics-nat.le-n b-v) ltbm-v))) (λ (eqbm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v m-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat b-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v b-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v m-v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v m-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat m-v) b-v eqbm-v) (min (matita-arithmetics-nat.S d-v) b-v f-v) (true-min f-v b-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v X---v) matita-basics-bool.true) (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v m-v) fm-v) b-v eqbm-v) (matita-arithmetics-nat.S d-v))) (matita-arithmetics-nat.le-to-or-lt-eq b-v m-v lebm-v)) k-v

min-not-exists : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min n-v b-v f-v) (matita-arithmetics-nat.plus n-v b-v)
min-not-exists = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus X-x-365-v b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min X-x-365-v b-v f-v) (matita-arithmetics-nat.plus X-x-365-v b-v)) (λ (b-v : matita-arithmetics-nat.nat) -> λ (auto-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat b-v) (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O b-v)) (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v) (matita-arithmetics-nat.commutative-plus matita-arithmetics-nat.O b-v)) (min matita-arithmetics-nat.O b-v f-v) (min-O-f f-v b-v)) (λ (p-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (b-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus p-v b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min p-v b-v f-v) (matita-arithmetics-nat.plus p-v b-v)) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (ffalse-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S p-v) b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (min p-v (matita-arithmetics-nat.S b-v) f-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (min p-v (matita-arithmetics-nat.S b-v) f-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S p-v) b-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus p-v (matita-arithmetics-nat.S b-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus p-v (matita-arithmetics-nat.S b-v))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S p-v) b-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus p-v (matita-arithmetics-nat.S b-v)) X---v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v))) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v))) (matita-arithmetics-nat.plus p-v (matita-arithmetics-nat.S b-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.plus p-v b-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v p-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X---v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v))) (matita-arithmetics-nat.plus-n-Sm b-v p-v) (matita-arithmetics-nat.plus p-v b-v) (matita-arithmetics-nat.commutative-plus b-v p-v)) (matita-arithmetics-nat.plus p-v (matita-arithmetics-nat.S b-v)) (matita-arithmetics-nat.plus-n-Sm p-v b-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S p-v) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S p-v) b-v)) (min p-v (matita-arithmetics-nat.S b-v) f-v) (Hind-v (matita-arithmetics-nat.S b-v) (λ (i-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S b-v) i-v) -> λ (H1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus p-v (matita-arithmetics-nat.S b-v))) -> ffalse-v i-v (matita-arithmetics-nat.lt-to-le b-v i-v H-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus p-v (matita-arithmetics-nat.S b-v))) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S p-v) b-v)) H1-v (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus p-v (matita-arithmetics-nat.S b-v))) (matita-arithmetics-nat.lt i-v X---v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v X---v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v)))) (matita-arithmetics-nat.plus p-v (matita-arithmetics-nat.S b-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.plus p-v b-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v p-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X---v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v))) (matita-arithmetics-nat.plus-n-Sm b-v p-v) (matita-arithmetics-nat.plus p-v b-v) (matita-arithmetics-nat.commutative-plus b-v p-v)) (matita-arithmetics-nat.plus p-v (matita-arithmetics-nat.S b-v)) (matita-arithmetics-nat.plus-n-Sm p-v b-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S p-v) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S p-v) b-v)))))) (min (matita-arithmetics-nat.S p-v) b-v f-v) (false-min f-v p-v b-v (ffalse-v b-v (matita-arithmetics-nat.le-n b-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S p-v))) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S p-v) b-v)) (matita-arithmetics-nat.lt-plus-Sn-r b-v matita-arithmetics-nat.O p-v) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S p-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v X---v) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S p-v) b-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S p-v)))) (matita-arithmetics-nat.lt b-v X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S p-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus b-v X---v)) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S p-v)))) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S p-v)) (matita-arithmetics-nat.plus-O-n (matita-arithmetics-nat.S p-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S p-v) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S p-v) b-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S p-v)) (matita-arithmetics-nat.associative-plus b-v matita-arithmetics-nat.O (matita-arithmetics-nat.S p-v))))))) n-v

let-m : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat
let-m = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> min n-v b-v f-v

let-m1 : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (X-x-365-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat
let-m1 = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (X-x-365-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> min X-x-365-v b-v f-v

let-m2 : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (i-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat
let-m2 = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> min i-v b-v f-v

let-clause-1012 : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (i-v : matita-arithmetics-nat.nat) -> (Hind-v : (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (let-m2 f-v n-v i-v b-v)) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (let-m2 f-v n-v i-v b-v) (matita-arithmetics-nat.plus i-v b-v)) -> (b-v : matita-arithmetics-nat.nat) -> (fb-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) -> (eqm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.false matita-basics-bool.true
let-clause-1012 = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (let-m2 f-v n-v i-v b-v)) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (let-m2 f-v n-v i-v b-v) (matita-arithmetics-nat.plus i-v b-v)) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (fb-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) -> λ (eqm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false) -> matita-basics-logic.rewrite-l lzero lzero matita-basics-bool.bool (f-v b-v) (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) fb-v matita-basics-bool.false eqm-v

fmin-false : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (let-m f-v n-v b-v)) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (let-m f-v n-v b-v) (matita-arithmetics-nat.plus n-v b-v)
fmin-false = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (let-m1 f-v n-v X-x-365-v b-v)) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (let-m1 f-v n-v X-x-365-v b-v) (matita-arithmetics-nat.plus X-x-365-v b-v)) (λ (b-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq-f lzero lzero matita-basics-bool.bool matita-arithmetics-nat.nat (λ (X---v : matita-basics-bool.bool) -> min matita-arithmetics-nat.O b-v f-v) (f-v (min matita-arithmetics-nat.O b-v f-v)) matita-basics-bool.false) (λ (i-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (let-m2 f-v n-v i-v b-v)) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (let-m2 f-v n-v i-v b-v) (matita-arithmetics-nat.plus i-v b-v)) -> λ (b-v : matita-arithmetics-nat.nat) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false)) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min i-v (matita-arithmetics-nat.S b-v) f-v) (f-v b-v))) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min i-v (matita-arithmetics-nat.S b-v) f-v) (f-v b-v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus i-v b-v))) (λ (fb-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min i-v (matita-arithmetics-nat.S b-v) f-v) x-v)) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min i-v (matita-arithmetics-nat.S b-v) f-v) x-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus i-v b-v))) (λ (eqm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v (matita-arithmetics-nat.S (matita-arithmetics-nat.plus i-v b-v))) (matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) fb-v (matita-basics-logic.eq-coerc lzero (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.false)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true)) matita-basics-bool.not-eq-true-false (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true X---v)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.true)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.true))) (f-v b-v) (matita-basics-logic.rewrite-l lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) X---v) eqm-v matita-basics-bool.true (let-clause-1012 f-v n-v i-v Hind-v b-v fb-v eqm-v))) matita-basics-bool.false (let-clause-1012 f-v n-v i-v Hind-v b-v fb-v eqm-v))))) (f-v b-v) fb-v) (λ (fb-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.false) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min i-v (matita-arithmetics-nat.S b-v) f-v) x-v)) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min i-v (matita-arithmetics-nat.S b-v) f-v) x-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus i-v b-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S b-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S b-v))) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (min i-v (matita-arithmetics-nat.S b-v) f-v)) matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min i-v (matita-arithmetics-nat.S b-v) f-v) x-v) (Hind-v (matita-arithmetics-nat.S b-v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus i-v b-v)) (matita-arithmetics-nat.plus-n-Sm i-v b-v)) (f-v b-v) fb-v) (matita-basics-bool.true-or-false (f-v b-v))) n-v


data min-spec (n-v : matita-arithmetics-nat.nat) (b-v : matita-arithmetics-nat.nat)  (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) : matita-arithmetics-nat.nat -> Set (lzero) where
  found-min-spec' : (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v m-v) -> (X--1-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus n-v b-v)) -> (X--2-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> (X--3-v : (i-v : matita-arithmetics-nat.nat) -> (X--3-v : matita-arithmetics-nat.le b-v i-v) -> (X--4-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> min-spec n-v b-v f-v m-v
  not-found-min-spec' : (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> min-spec n-v b-v f-v (matita-arithmetics-nat.plus n-v b-v)

found-min-spec : (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v m-v) -> (X--1-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus n-v b-v)) -> (X--2-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> (X--3-v : (i-v : matita-arithmetics-nat.nat) -> (X--3-v : matita-arithmetics-nat.le b-v i-v) -> (X--4-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> min-spec n-v b-v f-v m-v
found-min-spec _ _ _ = found-min-spec'

not-found-min-spec : (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> min-spec n-v b-v f-v (matita-arithmetics-nat.plus n-v b-v)
not-found-min-spec _ _ _ = not-found-min-spec'

match-min-spec : (X-n-v : matita-arithmetics-nat.nat) -> (X-b-v : matita-arithmetics-nat.nat) -> (X-f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (return-sort-v : Level) -> (return-type-v : (X---v : matita-arithmetics-nat.nat) -> (z-v : min-spec X-n-v X-b-v X-f-v X---v) -> Set return-sort-v) -> (case-found-min-spec-v : (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le X-b-v m-v) -> (X--1-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus X-n-v X-b-v)) -> (X--2-v : matita-basics-logic.eq lzero matita-basics-bool.bool (X-f-v m-v) matita-basics-bool.true) -> (X--3-v : (i-v : matita-arithmetics-nat.nat) -> (X--3-v : matita-arithmetics-nat.le X-b-v i-v) -> (X--4-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (X-f-v i-v) matita-basics-bool.false) -> return-type-v m-v (found-min-spec X-n-v X-b-v X-f-v m-v X---v X--1-v X--2-v X--3-v)) -> (case-not-found-min-spec-v : (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le X-b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus X-n-v X-b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (X-f-v i-v) matita-basics-bool.false) -> return-type-v (matita-arithmetics-nat.plus X-n-v X-b-v) (not-found-min-spec X-n-v X-b-v X-f-v X---v)) -> (X---v : matita-arithmetics-nat.nat) -> (z-v : min-spec X-n-v X-b-v X-f-v X---v) -> return-type-v X---v z-v
match-min-spec _ _ _ _ _ casefound casenotfound _ (found-min-spec' x1 x2 x3 x4 x5) = casefound x1 x2 x3 x4 x5
match-min-spec _ _ _ _ _ casefound casenotfound _ (not-found-min-spec' x1) = casenotfound x1


min-spec-ind : (l9-v : Level) -> (X-n-v : matita-arithmetics-nat.nat) -> (X-b-v : matita-arithmetics-nat.nat) -> (X-f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (Q--v : (x-1075-v : matita-arithmetics-nat.nat) -> (X-x-1076-v : min-spec X-n-v X-b-v X-f-v x-1075-v) -> Set l9-v) -> (X-H-found-min-spec-v : (m-v : matita-arithmetics-nat.nat) -> (x-1080-v : matita-arithmetics-nat.le X-b-v m-v) -> (x-1079-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus X-n-v X-b-v)) -> (x-1078-v : matita-basics-logic.eq lzero matita-basics-bool.bool (X-f-v m-v) matita-basics-bool.true) -> (x-1077-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le X-b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (X-f-v i-v) matita-basics-bool.false) -> Q--v m-v (found-min-spec X-n-v X-b-v X-f-v m-v x-1080-v x-1079-v x-1078-v x-1077-v)) -> (X-H-not-found-min-spec-v : (x-1081-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le X-b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus X-n-v X-b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (X-f-v i-v) matita-basics-bool.false) -> Q--v (matita-arithmetics-nat.plus X-n-v X-b-v) (not-found-min-spec X-n-v X-b-v X-f-v x-1081-v)) -> (x-1075-v : matita-arithmetics-nat.nat) -> (x-1076-v : min-spec X-n-v X-b-v X-f-v x-1075-v) -> Q--v x-1075-v x-1076-v
min-spec-ind _ _ _ _ _ casefound casenotfound _ (found-min-spec' x1 x2 x3 x4 x5) = casefound x1 x2 x3 x4 x5
min-spec-ind _ _ _ _ _ casefound casenotfound _ (not-found-min-spec' x1) = casenotfound x1


min-spec-inv-ind : (l30-v : Level) -> (x1-v : matita-arithmetics-nat.nat) -> (x2-v : matita-arithmetics-nat.nat) -> (x3-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (x4-v : matita-arithmetics-nat.nat) -> (X-Hterm-v : min-spec x1-v x2-v x3-v x4-v) -> (P-v : (X-z1890-v : matita-arithmetics-nat.nat) -> Set l30-v) -> (X-H1-v : (m-v : matita-arithmetics-nat.nat) -> (X-x-1080-v : matita-arithmetics-nat.le x2-v m-v) -> (X-x-1079-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus x1-v x2-v)) -> (X-x-1078-v : matita-basics-logic.eq lzero matita-basics-bool.bool (x3-v m-v) matita-basics-bool.true) -> (X-x-1077-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le x2-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (x3-v i-v) matita-basics-bool.false) -> (X-z1891-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x4-v m-v) -> P-v m-v) -> (X-H2-v : (X-x-1081-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le x2-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus x1-v x2-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (x3-v i-v) matita-basics-bool.false) -> (X-z1891-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x4-v (matita-arithmetics-nat.plus x1-v x2-v)) -> P-v (matita-arithmetics-nat.plus x1-v x2-v)) -> P-v x4-v
min-spec-inv-ind = λ (l30-v : Level) -> λ (x1-v : matita-arithmetics-nat.nat) -> λ (x2-v : matita-arithmetics-nat.nat) -> λ (x3-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (x4-v : matita-arithmetics-nat.nat) -> λ (Hterm-v : min-spec x1-v x2-v x3-v x4-v) -> λ (P-v : (X-z1890-v : matita-arithmetics-nat.nat) -> Set l30-v) -> λ (H1-v : (m-v : matita-arithmetics-nat.nat) -> (X-x-1080-v : matita-arithmetics-nat.le x2-v m-v) -> (X-x-1079-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus x1-v x2-v)) -> (X-x-1078-v : matita-basics-logic.eq lzero matita-basics-bool.bool (x3-v m-v) matita-basics-bool.true) -> (X-x-1077-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le x2-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (x3-v i-v) matita-basics-bool.false) -> (X-z1891-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x4-v m-v) -> P-v m-v) -> λ (H2-v : (X-x-1081-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le x2-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus x1-v x2-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (x3-v i-v) matita-basics-bool.false) -> (X-z1891-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x4-v (matita-arithmetics-nat.plus x1-v x2-v)) -> P-v (matita-arithmetics-nat.plus x1-v x2-v)) -> min-spec-ind l30-v x1-v x2-v x3-v (λ (x-1075-v : matita-arithmetics-nat.nat) -> λ (X-x-1076-v : min-spec x1-v x2-v x3-v x-1075-v) -> (X-z1891-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x4-v x-1075-v) -> P-v x-1075-v) H1-v H2-v x4-v Hterm-v (matita-basics-logic.refl lzero matita-arithmetics-nat.nat x4-v)

min-spec-to-min : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : min-spec n-v b-v f-v m-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min n-v b-v f-v) m-v
min-spec-to-min = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (spec-v : min-spec n-v b-v f-v m-v) -> match-min-spec n-v b-v f-v lzero (λ (X---v : matita-arithmetics-nat.nat) -> λ (X-0-v : min-spec n-v b-v f-v X---v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min n-v b-v f-v) X---v) (λ (m0-v : matita-arithmetics-nat.nat) -> λ (lem-v : matita-arithmetics-nat.le b-v m0-v) -> λ (ltm-v : matita-arithmetics-nat.lt m0-v (matita-arithmetics-nat.plus n-v b-v)) -> λ (fm-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m0-v) matita-basics-bool.true) -> λ (ismin-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v m0-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> min-exists f-v (matita-arithmetics-nat.plus n-v b-v) m0-v ltm-v (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v m0-v) fm-v) n-v b-v lem-v ismin-v (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus n-v b-v))) (λ (ffalse-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> min-not-exists f-v n-v b-v ffalse-v) m-v spec-v

min-to-min-spec : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min n-v b-v f-v) m-v) -> min-spec n-v b-v f-v m-v
min-to-min-spec = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min X---v b-v f-v) m-v) -> min-spec X---v b-v f-v m-v) (λ (eqm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min matita-arithmetics-nat.O b-v f-v) m-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (min matita-arithmetics-nat.O b-v f-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min matita-arithmetics-nat.O b-v f-v) x-1-v) -> min-spec matita-arithmetics-nat.O b-v f-v x-1-v) (not-found-min-spec matita-arithmetics-nat.O b-v f-v (λ (i-v : matita-arithmetics-nat.nat) -> λ (lei-v : matita-arithmetics-nat.le b-v i-v) -> λ (lti-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v)) lti-v (matita-arithmetics-nat.le-to-not-lt (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v) i-v lei-v)))) m-v eqm-v) (λ (n0-v : matita-arithmetics-nat.nat) -> λ (eqm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min (matita-arithmetics-nat.S n0-v) b-v f-v) m-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat m-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v m-v) -> (X--1-v : matita-arithmetics-nat.le x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) -> min-spec (matita-arithmetics-nat.S n0-v) b-v f-v m-v) (λ (lem-v : matita-arithmetics-nat.le m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v))) -> min-spec (matita-arithmetics-nat.S n0-v) b-v f-v m-v) (λ (mcase-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) -> found-min-spec (matita-arithmetics-nat.S n0-v) b-v f-v m-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le b-v (min (matita-arithmetics-nat.S n0-v) b-v f-v)) (matita-arithmetics-nat.le b-v m-v) (le-min-l f-v (matita-arithmetics-nat.S n0-v) b-v) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v X---v) (matita-arithmetics-nat.le b-v m-v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v m-v)) (min (matita-arithmetics-nat.S n0-v) b-v f-v) eqm-v)) mcase-v (fmin-true f-v (matita-arithmetics-nat.S n0-v) m-v b-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat m-v) (min (matita-arithmetics-nat.S n0-v) b-v f-v) eqm-v) mcase-v) (λ (i-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.le b-v i-v) -> λ (H1-v : matita-arithmetics-nat.lt i-v m-v) -> lt-min-to-false f-v (matita-arithmetics-nat.S n0-v) i-v b-v H-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt i-v m-v) (matita-arithmetics-nat.lt i-v (min (matita-arithmetics-nat.S n0-v) b-v f-v)) H1-v (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v m-v) (matita-arithmetics-nat.lt i-v X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v m-v)) (min (matita-arithmetics-nat.S n0-v) b-v f-v) eqm-v)))) (λ (mcase-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) -> min-spec (matita-arithmetics-nat.S n0-v) b-v f-v x-v) (not-found-min-spec (matita-arithmetics-nat.S n0-v) b-v f-v (λ (i-v : matita-arithmetics-nat.nat) -> λ (lebi-v : matita-arithmetics-nat.le b-v i-v) -> λ (lti-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) -> lt-min-to-false f-v (matita-arithmetics-nat.S n0-v) i-v b-v lebi-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v)) (matita-arithmetics-nat.lt i-v (min (matita-arithmetics-nat.S n0-v) b-v f-v)) lti-v (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S n0-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v X---v) (matita-arithmetics-nat.lt i-v (min (matita-arithmetics-nat.S n0-v) b-v f-v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v X---v) (matita-arithmetics-nat.lt i-v (min (matita-arithmetics-nat.S n0-v) b-v f-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v m-v) (matita-arithmetics-nat.lt i-v X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v m-v)) (min (matita-arithmetics-nat.S n0-v) b-v f-v) eqm-v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S n0-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v X---v) mcase-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S n0-v)) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S n0-v) b-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S n0-v) b-v))))) m-v mcase-v) (matita-arithmetics-nat.le-to-or-lt-eq m-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) b-v) lem-v)) (min (matita-arithmetics-nat.S n0-v) b-v f-v) eqm-v (le-min-r f-v (matita-arithmetics-nat.S n0-v) b-v)) n-v

min-f-g : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (g-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) (g-v i-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min n-v b-v f-v) (min n-v b-v g-v)
min-f-g = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (g-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus X-x-365-v b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) (g-v i-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min X-x-365-v b-v f-v) (min X-x-365-v b-v g-v)) (λ (b-v : matita-arithmetics-nat.nat) -> λ (auto-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) (g-v i-v)) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (min matita-arithmetics-nat.O b-v g-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat b-v) (min matita-arithmetics-nat.O b-v g-v) (min-O-f g-v b-v)) (min matita-arithmetics-nat.O b-v f-v) (min-O-f f-v b-v)) (λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (b-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus m-v b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) (g-v i-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (min m-v b-v f-v) (min m-v b-v g-v)) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (ext-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m-v) b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) (g-v i-v)) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool (g-v b-v) (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v (g-v b-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) f-v) x-v) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) g-v) (g-v b-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (min m-v (matita-arithmetics-nat.S b-v) g-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (min m-v (matita-arithmetics-nat.S b-v) g-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v x-v (g-v b-v)) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) g-v) (g-v b-v))) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-basics-bool.match-bool lzero (λ (X---v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) g-v) (g-v b-v))) (min m-v (matita-arithmetics-nat.S b-v) f-v) (Hind-v (matita-arithmetics-nat.S b-v) (λ (i-v : matita-arithmetics-nat.nat) -> λ (ltib-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S b-v) i-v) -> λ (ltim-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v))) -> ext-v i-v (matita-arithmetics-nat.lt-to-le b-v i-v ltib-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v))) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m-v) b-v)) ltim-v (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v))) (matita-arithmetics-nat.lt i-v X---v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v X---v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.plus m-v b-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X---v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.plus-n-Sm b-v m-v) (matita-arithmetics-nat.plus m-v b-v) (matita-arithmetics-nat.commutative-plus b-v m-v)) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v)) (matita-arithmetics-nat.plus-n-Sm m-v b-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m-v) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S m-v) b-v)))))) (f-v b-v) (ext-v b-v (matita-arithmetics-nat.le-n b-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m-v) b-v)) (matita-arithmetics-nat.lt-plus-Sn-r b-v matita-arithmetics-nat.O m-v) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S m-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v X---v) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m-v) b-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S m-v)))) (matita-arithmetics-nat.lt b-v X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus b-v X---v)) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)))) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.plus-O-n (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m-v) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S m-v) b-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.associative-plus b-v matita-arithmetics-nat.O (matita-arithmetics-nat.S m-v)))))) n-v

le-min-f-min-g : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (g-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v)) -> (X--2-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (g-v i-v) matita-basics-bool.true) -> matita-arithmetics-nat.le (min n-v b-v g-v) (min n-v b-v f-v)
le-min-f-min-g = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (g-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus X-x-365-v b-v)) -> (X--2-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (g-v i-v) matita-basics-bool.true) -> matita-arithmetics-nat.le (min X-x-365-v b-v g-v) (min X-x-365-v b-v f-v)) (λ (b-v : matita-arithmetics-nat.nat) -> λ (auto-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus matita-arithmetics-nat.O b-v)) -> (X--2-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (g-v i-v) matita-basics-bool.true) -> matita-arithmetics-nat.le-n (min matita-arithmetics-nat.O b-v g-v)) (λ (m-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (b-v : matita-arithmetics-nat.nat) -> (X---v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus m-v b-v)) -> (X--2-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (g-v i-v) matita-basics-bool.true) -> matita-arithmetics-nat.le (min m-v b-v g-v) (min m-v b-v f-v)) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (ext-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m-v) b-v)) -> (X--2-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (g-v i-v) matita-basics-bool.true) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false)) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) g-v) (g-v b-v)) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) f-v) (f-v b-v))) (λ (Heq-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.true) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) g-v) (g-v b-v)) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) f-v) x-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) g-v) x-v) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) f-v) matita-basics-bool.true)) (matita-arithmetics-nat.le-n (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) g-v) matita-basics-bool.true)) (g-v b-v) (ext-v b-v (matita-arithmetics-nat.le-n b-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m-v) b-v)) (matita-arithmetics-nat.lt-plus-Sn-r b-v matita-arithmetics-nat.O m-v) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S m-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v X---v) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m-v) b-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S m-v)))) (matita-arithmetics-nat.lt b-v X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus b-v X---v)) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)))) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.plus-O-n (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m-v) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S m-v) b-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus b-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.associative-plus b-v matita-arithmetics-nat.O (matita-arithmetics-nat.S m-v)))) (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v b-v) Heq-v))) (f-v b-v) Heq-v) (λ (Heq-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v b-v) matita-basics-bool.false) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.false) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) g-v) (g-v b-v)) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) f-v) x-v)) (matita-basics-bool.match-bool lzero (λ (X---v : matita-basics-bool.bool) -> matita-arithmetics-nat.le (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) g-v) X---v) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) b-v (min m-v (matita-arithmetics-nat.S b-v) f-v) matita-basics-bool.false)) (matita-arithmetics-nat.lt-to-le b-v (min m-v (matita-arithmetics-nat.S b-v) f-v) (le-min-l f-v m-v (matita-arithmetics-nat.S b-v))) (Hind-v (matita-arithmetics-nat.S b-v) (λ (i-v : matita-arithmetics-nat.nat) -> λ (ltb-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S b-v) i-v) -> λ (ltim-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v))) -> λ (fi-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> ext-v i-v (matita-arithmetics-nat.lt-to-le b-v i-v ltb-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v))) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m-v) b-v)) ltim-v (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v))) (matita-arithmetics-nat.lt i-v X---v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v X---v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v)))) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.plus m-v b-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X---v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.plus-n-Sm b-v m-v) (matita-arithmetics-nat.plus m-v b-v) (matita-arithmetics-nat.commutative-plus b-v m-v)) (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S b-v)) (matita-arithmetics-nat.plus-n-Sm m-v b-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m-v) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S m-v) b-v))) (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v i-v) fi-v))) (g-v b-v)) (f-v b-v) Heq-v) (matita-basics-bool.true-or-false (f-v b-v))) n-v

f-min-true : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (min n-v b-v f-v)) matita-basics-bool.true
f-min-true = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> match-min-spec n-v b-v f-v lzero (λ (X---v : matita-arithmetics-nat.nat) -> λ (X-0-v : min-spec n-v b-v f-v X---v) -> (X--1-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v X---v) matita-basics-bool.true) (λ (m-v : matita-arithmetics-nat.nat) -> λ (auto-v : matita-arithmetics-nat.le b-v m-v) -> λ (auto'-v : matita-arithmetics-nat.lt m-v (matita-arithmetics-nat.plus n-v b-v)) -> λ (auto''-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v m-v) matita-basics-bool.true) -> λ (auto'''-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v m-v) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> λ (auto''''-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v m-v) auto''-v) (λ (Hall-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le b-v i-v) -> (X--1-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.false) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.match-ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true)) lzero (λ (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (matita-arithmetics-nat.plus n-v b-v)) matita-basics-bool.true) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v x-v) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.true)) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v x-v) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.true) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v x-v) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.true)) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (matita-arithmetics-nat.plus n-v b-v)) matita-basics-bool.true) (λ (X-clearme1-v : matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v x-v) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.plus n-v b-v))) -> matita-basics-logic.match-And lzero lzero (matita-arithmetics-nat.le b-v x-v) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.plus n-v b-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v x-v) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.plus n-v b-v))) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (matita-arithmetics-nat.plus n-v b-v)) matita-basics-bool.true) (λ (leb-v : matita-arithmetics-nat.le b-v x-v) -> λ (ltx-v : matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.plus n-v b-v)) -> λ (fx-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.true) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-basics-bool.bool (f-v (matita-arithmetics-nat.plus n-v b-v)) matita-basics-bool.true) (matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v x-v) matita-basics-bool.true) fx-v (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (x0-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x0-v matita-basics-bool.false) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-basics-bool.bool x0-v matita-basics-bool.true)) (matita-basics-logic.sym-not-eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.false matita-basics-bool.not-eq-true-false) (f-v x-v) (Hall-v x-v leb-v ltx-v)))) X-clearme1-v) X-clearme0-v) X-clearme-v) (min n-v b-v f-v) (min-to-min-spec f-v n-v b-v (min n-v b-v f-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (min n-v b-v f-v)))

lt-min : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> (n-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-arithmetics-nat.lt (min n-v b-v f-v) (matita-arithmetics-nat.plus n-v b-v)
lt-min = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.bool) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-basics-logic.match-ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true)) lzero (λ (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true))) -> matita-arithmetics-nat.lt (min n-v b-v f-v) (matita-arithmetics-nat.plus n-v b-v)) (λ (i-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true)) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true)) -> matita-arithmetics-nat.lt (min n-v b-v f-v) (matita-arithmetics-nat.plus n-v b-v)) (λ (X-clearme0-v : matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) -> matita-basics-logic.match-And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le b-v i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v))) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-arithmetics-nat.lt (min n-v b-v f-v) (matita-arithmetics-nat.plus n-v b-v)) (λ (lebi-v : matita-arithmetics-nat.le b-v i-v) -> λ (ltin-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus n-v b-v)) -> λ (fi-true-v : matita-basics-logic.eq lzero matita-basics-bool.bool (f-v i-v) matita-basics-bool.true) -> matita-arithmetics-nat.le-to-lt-to-lt (min n-v b-v f-v) i-v (matita-arithmetics-nat.plus n-v b-v) (true-to-le-min f-v n-v i-v b-v lebi-v (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (f-v i-v) fi-true-v)) ltin-v) X-clearme0-v) X-clearme-v) H-v


