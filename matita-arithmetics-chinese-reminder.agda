open import Agda.Primitive
import matita-arithmetics-minimization
import matita-basics-bool
import matita-arithmetics-div-and-mod
import matita-arithmetics-congruence
import matita-basics-logic
import matita-arithmetics-gcd
import matita-arithmetics-nat
let-clause-1562 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)
let-clause-1562 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) H-v (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.commutative-times c-v n-v)) (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.commutative-times d-v m-v)

let-clause-1600 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v))
let-clause-1600 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) pnm-v (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-gcd.commutative-gcd n-v m-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (let-clause-1562 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)

let-clause-15621 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)
let-clause-15621 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) H-v (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.commutative-times c-v n-v)) (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.commutative-times d-v m-v)

let-clause-16001 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v))
let-clause-16001 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) pnm-v (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-gcd.commutative-gcd n-v m-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (let-clause-15621 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)

let-clause-1569 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)
let-clause-1569 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) H-v (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.commutative-times c-v n-v)) (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.commutative-times d-v m-v)

let-clause-15691 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)
let-clause-15691 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) H-v (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.commutative-times c-v n-v)) (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.commutative-times d-v m-v)

let-clause-1575 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (x1029-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x1029-v (matita-arithmetics-nat.times x1029-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)))
let-clause-1575 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (x1029-v : matita-arithmetics-nat.nat) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x1029-v (matita-arithmetics-nat.times x1029-v X---v)) (matita-arithmetics-nat.times-n-1 x1029-v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (let-clause-15691 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)

let-clause-15692 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)
let-clause-15692 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) H-v (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.commutative-times d-v m-v)) (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.commutative-times c-v n-v)

let-clause-1607 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v))
let-clause-1607 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) pnm-v (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-gcd.commutative-gcd n-v m-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (let-clause-15692 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)

let-clause-15622 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)
let-clause-15622 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) H-v (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.commutative-times d-v m-v)) (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.commutative-times c-v n-v)

let-clause-16002 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v))
let-clause-16002 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) pnm-v (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-gcd.commutative-gcd n-v m-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (let-clause-15622 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)

let-clause-15623 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)
let-clause-15623 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) H-v (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.commutative-times d-v m-v)) (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.commutative-times c-v n-v)

let-clause-16003 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v))
let-clause-16003 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) pnm-v (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-gcd.commutative-gcd n-v m-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (let-clause-15623 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)

let-clause-15624 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)
let-clause-15624 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) H-v (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.commutative-times d-v m-v)) (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.commutative-times c-v n-v)

let-clause-16004 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v))
let-clause-16004 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) pnm-v (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-gcd.commutative-gcd n-v m-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (let-clause-15624 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)

let-clause-15625 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)
let-clause-15625 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) H-v (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.commutative-times d-v m-v)) (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.commutative-times c-v n-v)

let-clause-16005 : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> (c-v : matita-arithmetics-nat.nat) -> (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> (d-v : matita-arithmetics-nat.nat) -> (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v))
let-clause-16005 = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) pnm-v (matita-arithmetics-gcd.gcd m-v n-v) (matita-arithmetics-gcd.commutative-gcd n-v m-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (let-clause-15625 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)

congruent-ab : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v))
congruent-ab = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.match-ex lzero lzero matita-arithmetics-nat.nat (λ (c-v : matita-arithmetics-nat.nat) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) lzero (λ (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (c-v : matita-arithmetics-nat.nat) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v))) (λ (c-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> matita-basics-logic.match-ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) lzero (λ (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x0-v a-v m-v) (matita-arithmetics-congruence.congruent x0-v b-v n-v))) (λ (d-v : matita-arithmetics-nat.nat) -> λ (X-clearme0-v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-basics-logic.match-Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x0-v a-v m-v) (matita-arithmetics-congruence.congruent x0-v b-v n-v))) (λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.ex-intro lzero lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x0-v a-v m-v) (matita-arithmetics-congruence.congruent x0-v b-v n-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) (matita-basics-logic.conj lzero lzero (matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v m-v) (matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) b-v n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.times c-v n-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.times c-v n-v))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v m-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) x-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v m-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times d-v m-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times d-v m-v)) x-1-v) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) x-1-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v m-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.times d-v m-v))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.times d-v m-v)))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v m-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) x-1-v) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus x-1-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.times d-v m-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v m-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.times d-v m-v)))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.times d-v m-v))))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v m-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v) m-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v) m-v) x-1-v) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times b-v m-v) x-1-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v m-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) m-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) m-v) x-1-v) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v x-1-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v m-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) m-v) a-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) m-v) a-v) x-1-v) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus x-1-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v m-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v) x-1-v) -> matita-arithmetics-congruence.congruent x-1-v a-v m-v) (matita-arithmetics-congruence.eq-times-plus-to-congruent (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v) a-v m-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)) posm-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v X---v) d-v)) m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v X---v) m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) a-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times b-v d-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))))) X---v) a-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus X---v a-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)) m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)))) X---v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)) m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v X---v) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)) m-v))) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)) m-v))) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v))) (matita-arithmetics-nat.commutative-times m-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)) m-v) a-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v)) m-v) a-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v))) a-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v))) a-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))))) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times b-v d-v))) (matita-arithmetics-nat.distributive-times-minus m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times b-v d-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times b-v d-v) m-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) m-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) m-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) d-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) d-v)) (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.commutative-times b-v m-v))) (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) m-v) a-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v)) (matita-arithmetics-nat.plus-minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) m-v) a-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times b-v d-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) m-v)) (matita-arithmetics-nat.monotonic-le-times-r m-v (matita-arithmetics-nat.times b-v d-v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.transitive-le (matita-arithmetics-nat.times b-v d-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.times d-v b-v) (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times b-v d-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) (matita-arithmetics-nat.monotonic-le-times-r d-v b-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.transitive-le b-v (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O b-v) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O (matita-arithmetics-nat.times b-v m-v))) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-gcd.le-gcd-times matita-arithmetics-nat.O b-v m-v posm-v) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O b-v) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O (matita-arithmetics-nat.times b-v m-v))) (matita-arithmetics-nat.le b-v X---v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O b-v) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O X---v)) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.times m-v b-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le X---v (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.times m-v b-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v X---v) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.times m-v b-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O (matita-arithmetics-nat.times m-v b-v)) (matita-arithmetics-gcd.gcd-O-l (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O b-v) (matita-arithmetics-gcd.gcd-O-l b-v)) (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.commutative-times b-v m-v)) (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.commutative-times b-v m-v))) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v b-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v b-v) a-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v))) (matita-arithmetics-nat.le-plus-n-r a-v (matita-arithmetics-nat.times m-v b-v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v b-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v b-v) a-v)) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v b-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v b-v) a-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v b-v) (matita-arithmetics-nat.plus a-v X---v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v b-v) X---v) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v b-v) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v b-v) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v b-v) a-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times m-v b-v) a-v)) (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.commutative-times b-v m-v)) (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.commutative-times b-v m-v))))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times d-v b-v) (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v X---v))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times b-v d-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v X---v) d-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times d-v b-v) (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times b-v d-v) X---v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times b-v d-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times b-v d-v) (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times b-v d-v) (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))))) (matita-arithmetics-nat.times d-v b-v) (matita-arithmetics-nat.commutative-times d-v b-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) d-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) d-v)) (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.commutative-times b-v m-v))) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) b-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))))) (matita-arithmetics-nat.le-plus-n-r b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) b-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v X---v) d-v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) b-v)) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) X---v) (matita-arithmetics-nat.le (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) b-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) d-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) d-v)) (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.commutative-times b-v m-v))))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times b-v d-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times b-v d-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))))) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) m-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times b-v d-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times b-v d-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v X---v) d-v)) m-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times b-v d-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times b-v d-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v X---v) m-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times b-v d-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times b-v d-v)) X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times b-v d-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))))))) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) m-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) m-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) d-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) d-v)) (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.commutative-times b-v m-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times b-v d-v) m-v))))) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) m-v)) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v)) m-v) a-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v) m-v)) (matita-arithmetics-nat.distributive-times-plus-r m-v b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.associative-times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) d-v m-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.times d-v m-v))) (matita-arithmetics-nat.associative-plus a-v (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.times d-v m-v)))) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)))) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times d-v m-v))) (matita-arithmetics-nat.distributive-times-plus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times d-v m-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times d-v m-v))) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.minus-to-plus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.transitive-le (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.le-n-Sn (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.lt-minus-to-plus-r matita-arithmetics-nat.O (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v))) (matita-arithmetics-nat.lt-O-S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v c-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times d-v m-v)))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v d-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) X---v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O X---v) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-gcd.gcd m-v n-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-gcd.gcd m-v n-v))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (let-clause-1562 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v) (matita-arithmetics-gcd.gcd m-v n-v) (let-clause-1600 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v))) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (let-clause-1600 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.commutative-times d-v m-v)) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.commutative-times c-v n-v))))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v c-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v d-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (let-clause-15621 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v) (matita-arithmetics-gcd.gcd m-v n-v) (let-clause-16001 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v))) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (let-clause-16001 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.commutative-times d-v m-v)) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.commutative-times c-v n-v)))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) (matita-arithmetics-nat.associative-times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v n-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.times d-v m-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.times d-v m-v))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) x-v) b-v n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) (matita-arithmetics-nat.times b-v x-v)) b-v n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) x-v) b-v n-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v) x-1-v) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) (matita-arithmetics-nat.minus x-1-v (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) b-v n-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v))) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v))) x-1-v) -> matita-arithmetics-congruence.congruent x-1-v b-v n-v) (matita-arithmetics-congruence.eq-times-plus-to-congruent (matita-arithmetics-nat.plus (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v))) b-v n-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) posn-v (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times b-v X---v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) n-v) b-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus X---v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) n-v) b-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v X---v) c-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) n-v) b-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times X---v n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) n-v) b-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) n-v) b-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) X---v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) n-v) b-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v X---v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) n-v) b-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) n-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)))) X---v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v X---v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) n-v))) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) n-v))) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v))) (matita-arithmetics-nat.commutative-times n-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) n-v) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v)) n-v) b-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v))) (matita-arithmetics-nat.distributive-times-minus n-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.times b-v c-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times b-v c-v) n-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) n-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) c-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) c-v)) (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.commutative-times b-v m-v)) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v (matita-arithmetics-nat.times b-v X---v)) (matita-arithmetics-nat.times-n-1 b-v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (let-clause-1569 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (let-clause-1569 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v))) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-nat.minus-minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v))) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.times n-v c-v))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v)) (matita-arithmetics-nat.monotonic-le-times-r b-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.le-plus-to-minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.le-plus-n-r (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v))) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.times n-v c-v))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times b-v X---v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v))) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.times n-v c-v))) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v))) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.times n-v c-v))) (matita-arithmetics-nat.le b-v X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.times n-v c-v))) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v X---v) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)))) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.times n-v c-v)) (matita-arithmetics-nat.times-times b-v n-v c-v)) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v))) (let-clause-1575 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v b-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times b-v c-v) n-v)) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v))) (let-clause-1575 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v b-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (let-clause-15691 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v))) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v)) (matita-arithmetics-nat.monotonic-le-times-r n-v (matita-arithmetics-nat.times b-v c-v) (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v b-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times c-v b-v)) -> matita-arithmetics-nat.le x-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.monotonic-le-times-r c-v b-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) (matita-arithmetics-nat.transitive-le b-v (matita-arithmetics-nat.times m-v b-v) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O b-v) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O (matita-arithmetics-nat.times b-v m-v))) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.times m-v b-v)) (matita-arithmetics-gcd.le-gcd-times matita-arithmetics-nat.O b-v m-v posm-v) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O b-v) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O X---v)) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.times m-v b-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le X---v (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.times m-v b-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v X---v) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.times m-v b-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le b-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O (matita-arithmetics-nat.times m-v b-v)) (matita-arithmetics-gcd.gcd-O-l (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O b-v) (matita-arithmetics-gcd.gcd-O-l b-v)) (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.commutative-times b-v m-v))) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v b-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v b-v) a-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v b-v) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (matita-arithmetics-nat.le-plus-n-r a-v (matita-arithmetics-nat.times m-v b-v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v b-v) X---v) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v b-v) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v b-v) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v b-v) a-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times m-v b-v) a-v))))) (matita-arithmetics-nat.times b-v c-v) (matita-arithmetics-nat.commutative-times b-v c-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))))) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times b-v m-v)) c-v) n-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v X---v) c-v) n-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)) (matita-arithmetics-nat.times X---v n-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)) X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times b-v c-v)) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)))))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v))) n-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) c-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v b-v)) c-v)) (matita-arithmetics-nat.times b-v m-v) (matita-arithmetics-nat.commutative-times b-v m-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v c-v) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times b-v c-v) n-v))))) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.associative-times b-v c-v n-v)) (matita-arithmetics-nat.times b-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.distributive-times-minus b-v (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.times d-v m-v) (matita-basics-logic.sym-eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.plus-to-minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times d-v m-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v n-v) x-v) (matita-arithmetics-nat.minus-to-plus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.transitive-le (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.le-n-Sn (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.lt-minus-to-plus-r matita-arithmetics-nat.O (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v))) (matita-arithmetics-nat.lt-O-S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v c-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times d-v m-v)))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v d-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) X---v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O X---v) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) H-v (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.commutative-times c-v n-v)) (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.commutative-times d-v m-v))) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.commutative-times d-v m-v)) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.commutative-times c-v n-v))))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v c-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v d-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v)) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.times m-v d-v))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v c-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) H-v (matita-arithmetics-nat.times n-v c-v) (matita-arithmetics-nat.commutative-times c-v n-v)) (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.commutative-times d-v m-v))) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.commutative-times d-v m-v)) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.commutative-times c-v n-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times d-v m-v)))))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times b-v d-v) m-v) (matita-arithmetics-nat.associative-times b-v d-v m-v)))) (λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.ex-intro lzero lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x0-v a-v m-v) (matita-arithmetics-congruence.congruent x0-v b-v n-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) (matita-basics-logic.conj lzero lzero (matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) a-v m-v) (matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times c-v n-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times c-v n-v))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) x-v) a-v m-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) (matita-arithmetics-nat.times a-v x-v)) a-v m-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) x-v) a-v m-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times d-v m-v)))) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times d-v m-v)))) x-1-v) -> matita-arithmetics-congruence.congruent x-1-v a-v m-v) (matita-arithmetics-congruence.eq-times-plus-to-congruent (matita-arithmetics-nat.plus (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times d-v m-v)))) a-v m-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) posm-v (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times a-v X---v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times d-v m-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat a-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus X---v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times d-v m-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v a-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v X---v) d-v) m-v) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times d-v m-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times X---v m-v) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times d-v m-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times d-v m-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v d-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v X---v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times a-v d-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) X---v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v X---v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v) a-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)))) X---v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v X---v) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v))) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v))) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v))) (matita-arithmetics-nat.commutative-times m-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v) a-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v)) m-v) a-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times a-v d-v))) (matita-arithmetics-nat.distributive-times-minus m-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.times a-v d-v))) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times m-v d-v)) (matita-arithmetics-nat.times-times a-v m-v d-v)) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.commutative-times d-v m-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) m-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) m-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) d-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) d-v)) (matita-arithmetics-nat.times a-v n-v) (matita-arithmetics-nat.commutative-times a-v n-v)) (matita-arithmetics-nat.times a-v (matita-arithmetics-gcd.gcd m-v n-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat a-v (matita-arithmetics-nat.times a-v X---v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat a-v (matita-arithmetics-nat.times a-v X---v)) (matita-arithmetics-nat.times-n-1 a-v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (let-clause-15692 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)) (matita-arithmetics-gcd.gcd m-v n-v) (let-clause-1607 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (let-clause-15692 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v) (matita-arithmetics-gcd.gcd m-v n-v) (let-clause-1607 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)))) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-nat.minus-minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.monotonic-le-times-r a-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times d-v m-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) x-1-v) -> matita-arithmetics-nat.le x-1-v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.le-plus-to-minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.le-plus-n-r (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) H-v)) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v d-v) m-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v d-v) m-v) x-1-v) -> matita-arithmetics-nat.le x-1-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v)) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times a-v d-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v d-v) m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v)) (matita-arithmetics-nat.monotonic-le-times-r m-v (matita-arithmetics-nat.times a-v d-v) (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v a-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times d-v a-v)) -> matita-arithmetics-nat.le x-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.monotonic-le-times-r d-v a-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) (matita-arithmetics-nat.transitive-le a-v (matita-arithmetics-nat.times n-v a-v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O a-v) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O (matita-arithmetics-nat.times a-v n-v))) (matita-arithmetics-nat.le a-v (matita-arithmetics-nat.times n-v a-v)) (matita-arithmetics-gcd.le-gcd-times matita-arithmetics-nat.O a-v n-v posn-v) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v a-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O a-v) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O X---v)) (matita-arithmetics-nat.le a-v (matita-arithmetics-nat.times n-v a-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat a-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le X---v (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.le a-v (matita-arithmetics-nat.times n-v a-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v a-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le a-v X---v) (matita-arithmetics-nat.le a-v (matita-arithmetics-nat.times n-v a-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le a-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O (matita-arithmetics-nat.times n-v a-v)) (matita-arithmetics-gcd.gcd-O-l (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O a-v) (matita-arithmetics-gcd.gcd-O-l a-v)) (matita-arithmetics-nat.times a-v n-v) (matita-arithmetics-nat.commutative-times a-v n-v))) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v a-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times n-v a-v) b-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v a-v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.le-plus-n-r b-v (matita-arithmetics-nat.times n-v a-v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v a-v) X---v) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v a-v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v a-v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times n-v a-v) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times n-v a-v) b-v))))) (matita-arithmetics-nat.times a-v d-v) (matita-arithmetics-nat.commutative-times a-v d-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times a-v d-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times a-v d-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))))) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v a-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times a-v d-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times a-v d-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v X---v) d-v) m-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times a-v d-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times a-v d-v)) (matita-arithmetics-nat.times X---v m-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times a-v d-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times a-v d-v)) X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times a-v d-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) m-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times d-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) m-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) d-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) d-v)) (matita-arithmetics-nat.times a-v n-v) (matita-arithmetics-nat.commutative-times a-v n-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v d-v) m-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times a-v d-v) m-v))) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.times d-v m-v)) (matita-arithmetics-nat.associative-times a-v d-v m-v)))) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.distributive-times-minus a-v (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.times c-v n-v) (matita-basics-logic.sym-eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.plus-to-minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times c-v n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times d-v m-v) x-v) (matita-arithmetics-nat.minus-to-plus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.transitive-le (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.le-n-Sn (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.lt-minus-to-plus-r matita-arithmetics-nat.O (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v))) (matita-arithmetics-nat.lt-O-S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v d-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times c-v n-v)))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v c-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) X---v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O X---v) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-gcd.gcd m-v n-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-gcd.gcd m-v n-v))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (let-clause-15622 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v) (matita-arithmetics-gcd.gcd m-v n-v) (let-clause-16002 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v))) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (let-clause-16002 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.commutative-times c-v n-v)) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.commutative-times d-v m-v))))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v d-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v c-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (let-clause-15623 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v) (matita-arithmetics-gcd.gcd m-v n-v) (let-clause-16003 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v))) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (let-clause-16003 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.commutative-times c-v n-v)) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.commutative-times d-v m-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times c-v n-v)))))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v) (matita-arithmetics-nat.associative-times a-v c-v n-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) (matita-arithmetics-nat.times d-v m-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) (matita-arithmetics-nat.times d-v m-v))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) x-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times c-v n-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times c-v n-v))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) x-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) (matita-arithmetics-nat.times c-v n-v))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) (matita-arithmetics-nat.times c-v n-v)))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v n-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) x-1-v) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus x-1-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) (matita-arithmetics-nat.times c-v n-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v n-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v) n-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v) n-v) x-1-v) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) x-1-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times a-v n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v) n-v))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times a-v n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v) n-v)))) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v n-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v)) n-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v)) n-v) x-1-v) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus b-v x-1-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v n-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v)) n-v) b-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v)) n-v) b-v) x-1-v) -> matita-arithmetics-congruence.congruent (matita-arithmetics-nat.minus x-1-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v n-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v)) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v)) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v) x-1-v) -> matita-arithmetics-congruence.congruent x-1-v b-v n-v) (matita-arithmetics-congruence.eq-times-plus-to-congruent (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v)) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v) b-v n-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)) posn-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v a-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v X---v) c-v)) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)) n-v) b-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v X---v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)) n-v) b-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) b-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)) n-v) b-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times a-v c-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))))) X---v) b-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)) n-v) b-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus X---v b-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)) n-v) b-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)) n-v) b-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)) n-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)))) X---v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)) n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v X---v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)) n-v))) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)) n-v))) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v))) (matita-arithmetics-nat.commutative-times n-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)) n-v) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v)) n-v) b-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v))) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v))) b-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))))) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times a-v c-v))) (matita-arithmetics-nat.distributive-times-minus n-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.times a-v c-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times a-v c-v) n-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) n-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) c-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) c-v)) (matita-arithmetics-nat.times a-v n-v) (matita-arithmetics-nat.commutative-times a-v n-v))) (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v)) n-v) b-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v)) (matita-arithmetics-nat.plus-minus (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v)) n-v) b-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times a-v c-v)) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v)) n-v)) (matita-arithmetics-nat.monotonic-le-times-r n-v (matita-arithmetics-nat.times a-v c-v) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.transitive-le (matita-arithmetics-nat.times a-v c-v) (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v a-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v a-v) x-1-v) -> matita-arithmetics-nat.le x-1-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.monotonic-le-times-r c-v a-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) (matita-arithmetics-nat.transitive-le a-v (matita-arithmetics-nat.times n-v a-v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O a-v) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O (matita-arithmetics-nat.times a-v n-v))) (matita-arithmetics-nat.le a-v (matita-arithmetics-nat.times n-v a-v)) (matita-arithmetics-gcd.le-gcd-times matita-arithmetics-nat.O a-v n-v posn-v) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v a-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O a-v) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O X---v)) (matita-arithmetics-nat.le a-v (matita-arithmetics-nat.times n-v a-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat a-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le X---v (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.le a-v (matita-arithmetics-nat.times n-v a-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v a-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le a-v X---v) (matita-arithmetics-nat.le a-v (matita-arithmetics-nat.times n-v a-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le a-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O (matita-arithmetics-nat.times n-v a-v)) (matita-arithmetics-gcd.gcd-O-l (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-gcd.gcd matita-arithmetics-nat.O a-v) (matita-arithmetics-gcd.gcd-O-l a-v)) (matita-arithmetics-nat.times a-v n-v) (matita-arithmetics-nat.commutative-times a-v n-v))) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v a-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times n-v a-v) b-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v a-v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.le-plus-n-r b-v (matita-arithmetics-nat.times n-v a-v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v a-v) X---v) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v a-v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v a-v) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times n-v a-v) b-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times n-v a-v) b-v))))) (matita-arithmetics-nat.times a-v c-v) (matita-arithmetics-nat.commutative-times c-v a-v)) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) a-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))))) (matita-arithmetics-nat.le-plus-n-r a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) X---v) (matita-arithmetics-nat.le (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) a-v) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) a-v))))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times a-v c-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times a-v c-v)) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))))) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v)) n-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v a-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times a-v c-v)) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times a-v c-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v X---v) c-v)) n-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times a-v c-v)) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times a-v c-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v X---v) n-v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times a-v c-v)) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))))) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times a-v c-v)) X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times a-v c-v)) (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v))))))) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times c-v (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)))) n-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) c-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times n-v a-v)) c-v)) (matita-arithmetics-nat.times a-v n-v) (matita-arithmetics-nat.commutative-times a-v n-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times a-v c-v) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times a-v c-v) n-v))))) (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v)) n-v)) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times (matita-arithmetics-nat.plus a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v)) n-v) b-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times a-v n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v) n-v)) (matita-arithmetics-nat.distributive-times-plus-r n-v a-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v) n-v)) (matita-arithmetics-nat.associative-plus b-v (matita-arithmetics-nat.times a-v n-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v) n-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.associative-times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) c-v n-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)))) (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times c-v n-v))) (matita-arithmetics-nat.distributive-times-plus (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times c-v n-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.minus-to-plus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.transitive-le (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.le-n-Sn (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.lt-minus-to-plus-r matita-arithmetics-nat.O (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v))) (matita-arithmetics-nat.lt-O-S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v d-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times c-v n-v)))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v c-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) X---v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O X---v) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-gcd.gcd m-v n-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-gcd.gcd m-v n-v))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (let-clause-15624 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v) (matita-arithmetics-gcd.gcd m-v n-v) (let-clause-16004 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v))) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (let-clause-16004 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.commutative-times c-v n-v)) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.commutative-times d-v m-v))))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v d-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus X---v (matita-arithmetics-nat.times c-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v c-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) X---v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd m-v n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (let-clause-15625 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v) (matita-arithmetics-gcd.gcd m-v n-v) (let-clause-16005 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v))) (matita-arithmetics-nat.minus (matita-arithmetics-nat.times m-v d-v) (matita-arithmetics-nat.times n-v c-v)) (let-clause-16005 m-v n-v a-v b-v posn-v posm-v pnm-v c-v X-clearme-v d-v X-clearme0-v H-v)) (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.commutative-times c-v n-v)) (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.commutative-times d-v m-v)))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v) m-v) (matita-arithmetics-nat.associative-times (matita-arithmetics-nat.plus b-v (matita-arithmetics-nat.times a-v n-v)) d-v m-v)))) X-clearme0-v) X-clearme-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) x-1-v) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (c-v : matita-arithmetics-nat.nat) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (d-v : matita-arithmetics-nat.nat) -> matita-basics-logic.Or lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times c-v n-v) (matita-arithmetics-nat.times d-v m-v)) x-1-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times d-v m-v) (matita-arithmetics-nat.times c-v n-v)) x-1-v)))) (matita-arithmetics-gcd.eq-minus-gcd m-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O) pnm-v)

congruent-ab-lt : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v)))
congruent-ab-lt = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.match-ex lzero lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) lzero (λ (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v))) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v)))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) -> matita-basics-logic.match-And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x0-v a-v m-v) (matita-arithmetics-congruence.congruent x0-v b-v n-v)) (matita-arithmetics-nat.lt x0-v (matita-arithmetics-nat.times m-v n-v)))) (λ (cxa-v : matita-arithmetics-congruence.congruent x-v a-v m-v) -> λ (cxb-v : matita-arithmetics-congruence.congruent x-v b-v n-v) -> matita-basics-logic.ex-intro lzero lzero matita-arithmetics-nat.nat (λ (x0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x0-v a-v m-v) (matita-arithmetics-congruence.congruent x0-v b-v n-v)) (matita-arithmetics-nat.lt x0-v (matita-arithmetics-nat.times m-v n-v))) (matita-arithmetics-div-and-mod.mod x-v (matita-arithmetics-nat.times m-v n-v)) (matita-basics-logic.conj lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent (matita-arithmetics-div-and-mod.mod x-v (matita-arithmetics-nat.times m-v n-v)) a-v m-v) (matita-arithmetics-congruence.congruent (matita-arithmetics-div-and-mod.mod x-v (matita-arithmetics-nat.times m-v n-v)) b-v n-v)) (matita-arithmetics-nat.lt (matita-arithmetics-div-and-mod.mod x-v (matita-arithmetics-nat.times m-v n-v)) (matita-arithmetics-nat.times m-v n-v)) (matita-basics-logic.conj lzero lzero (matita-arithmetics-congruence.congruent (matita-arithmetics-div-and-mod.mod x-v (matita-arithmetics-nat.times m-v n-v)) a-v m-v) (matita-arithmetics-congruence.congruent (matita-arithmetics-div-and-mod.mod x-v (matita-arithmetics-nat.times m-v n-v)) b-v n-v) (matita-arithmetics-congruence.transitive-congruent m-v (matita-arithmetics-div-and-mod.mod x-v (matita-arithmetics-nat.times m-v n-v)) x-v a-v (matita-basics-logic.sym-eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod x-v m-v) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-div-and-mod.mod x-v (matita-arithmetics-nat.times m-v n-v)) m-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v m-v) (λ (x0-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x0-v (matita-arithmetics-nat.times n-v m-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod x-v m-v) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-div-and-mod.mod x-v x0-v) m-v)) (matita-arithmetics-congruence.congruent-n-mod-times x-v n-v m-v posm-v posn-v) (matita-arithmetics-nat.times m-v n-v) (matita-arithmetics-nat.commutative-times m-v n-v))) cxa-v) (matita-arithmetics-congruence.transitive-congruent n-v (matita-arithmetics-div-and-mod.mod x-v (matita-arithmetics-nat.times m-v n-v)) x-v b-v (matita-basics-logic.sym-eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod x-v n-v) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-div-and-mod.mod x-v (matita-arithmetics-nat.times m-v n-v)) n-v) (matita-arithmetics-congruence.congruent-n-mod-times x-v m-v n-v posn-v posm-v)) cxb-v)) (matita-arithmetics-div-and-mod.lt-mod-m-m x-v (matita-arithmetics-nat.times m-v n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O matita-arithmetics-nat.O) (λ (x0-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x0-v (matita-arithmetics-nat.times matita-arithmetics-nat.O matita-arithmetics-nat.O)) -> matita-arithmetics-nat.lt x0-v (matita-arithmetics-nat.times m-v n-v)) (matita-arithmetics-nat.lt-times matita-arithmetics-nat.O m-v matita-arithmetics-nat.O n-v posm-v posn-v) matita-arithmetics-nat.O (matita-arithmetics-nat.times-n-O matita-arithmetics-nat.O))))) X-clearme-v) (congruent-ab m-v n-v a-v b-v posn-v posm-v pnm-v)

cr-pair : (X-n-v : matita-arithmetics-nat.nat) -> (X-m-v : matita-arithmetics-nat.nat) -> (X-a-v : matita-arithmetics-nat.nat) -> (X-b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat
cr-pair = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> matita-arithmetics-minimization.min (matita-arithmetics-nat.times n-v m-v) matita-arithmetics-nat.O (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod x-v n-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod x-v m-v) b-v))

cr-pair1 : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (cr-pair (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) matita-arithmetics-nat.O matita-arithmetics-nat.O) matita-arithmetics-nat.O
cr-pair1 = matita-basics-logic.refl lzero matita-arithmetics-nat.nat (cr-pair (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) matita-arithmetics-nat.O matita-arithmetics-nat.O)

cr-pair2 : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (cr-pair (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)))
cr-pair2 = matita-basics-logic.refl lzero matita-arithmetics-nat.nat (cr-pair (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)

cr-pair3 : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (cr-pair (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)))))
cr-pair3 = matita-basics-logic.refl lzero matita-arithmetics-nat.nat (cr-pair (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)))

cr-pair4 : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (cr-pair (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))))))) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)))))))))))))))))))))))
cr-pair4 = matita-basics-logic.refl lzero matita-arithmetics-nat.nat (cr-pair (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))))))) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)))

cr-pair5 : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (cr-pair (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))))))) matita-arithmetics-nat.O (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))))))))))))))))))
cr-pair5 = matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))))))))))))))))))

mod-cr-pair : (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt a-v m-v) -> (X--1-v : matita-arithmetics-nat.lt b-v n-v) -> (X--2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (cr-pair m-v n-v a-v b-v) m-v) a-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (cr-pair m-v n-v a-v b-v) n-v) b-v)
mod-cr-pair = λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (ltam-v : matita-arithmetics-nat.lt a-v m-v) -> λ (ltbn-v : matita-arithmetics-nat.lt b-v n-v) -> λ (pnm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat a-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v a-v) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v a-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (cr-pair m-v n-v a-v b-v) n-v) b-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat b-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v b-v) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat a-v a-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v b-v)) (matita-basics-logic.conj lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat a-v a-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v b-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat a-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat b-v)) (matita-arithmetics-div-and-mod.mod (cr-pair m-v n-v a-v b-v) n-v) (matita-arithmetics-nat.eqb-true-to-eq (matita-arithmetics-div-and-mod.mod (cr-pair m-v n-v a-v b-v) n-v) b-v (matita-basics-bool.andb-true-r (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod (cr-pair m-v n-v a-v b-v) m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod (cr-pair m-v n-v a-v b-v) n-v) b-v) (matita-arithmetics-minimization.f-min-true (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod X---v m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod X---v n-v) b-v)) (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O (matita-basics-logic.match-ex lzero lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v))) lzero (λ (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v)))) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le matita-arithmetics-nat.O i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v n-v) b-v)) matita-basics-bool.true))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v))) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v))) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le matita-arithmetics-nat.O i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v n-v) b-v)) matita-basics-bool.true))) (λ (X-clearme0-v : matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) -> matita-basics-logic.match-And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) -> (X--1-v : matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v)) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le matita-arithmetics-nat.O i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v n-v) b-v)) matita-basics-bool.true))) (λ (cxa-v : matita-arithmetics-congruence.congruent x-v a-v m-v) -> λ (cxb-v : matita-arithmetics-congruence.congruent x-v b-v n-v) -> λ (ltx-v : matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v)) -> matita-basics-logic.ex-intro lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le matita-arithmetics-nat.O i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v n-v) b-v)) matita-basics-bool.true)) x-v (matita-basics-logic.conj lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le matita-arithmetics-nat.O x-v) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod x-v m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod x-v n-v) b-v)) matita-basics-bool.true) (matita-basics-logic.conj lzero lzero (matita-arithmetics-nat.le matita-arithmetics-nat.O x-v) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O)) (matita-arithmetics-nat.le-O-n x-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.times m-v n-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O)) ltx-v (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.times m-v n-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.times m-v n-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.times m-v n-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.times m-v n-v))) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.times m-v n-v)) (matita-arithmetics-nat.plus-O-n (matita-arithmetics-nat.times m-v n-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O)))) (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x0-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x0-v matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb x0-v (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod x-v n-v) b-v)) matita-basics-bool.true) (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x0-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x0-v matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb matita-basics-bool.true x0-v) matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool (matita-basics-bool.andb matita-basics-bool.true matita-basics-bool.true)) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod x-v n-v) b-v) (matita-arithmetics-nat.eq-to-eqb-true (matita-arithmetics-div-and-mod.mod x-v n-v) b-v (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod b-v n-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod b-v n-v) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod x-v n-v) x-1-v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod b-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-div-and-mod.mod b-v n-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod b-v n-v)) (matita-arithmetics-div-and-mod.mod x-v n-v) cxb-v) b-v (matita-arithmetics-div-and-mod.lt-to-eq-mod b-v n-v ltbn-v)))) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod x-v m-v) a-v) (matita-arithmetics-nat.eq-to-eqb-true (matita-arithmetics-div-and-mod.mod x-v m-v) a-v (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod a-v m-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod a-v m-v) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod x-v m-v) x-1-v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod a-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-div-and-mod.mod a-v m-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod a-v m-v)) (matita-arithmetics-div-and-mod.mod x-v m-v) cxa-v) a-v (matita-arithmetics-div-and-mod.lt-to-eq-mod a-v m-v ltam-v)))))) X-clearme0-v) X-clearme-v) (congruent-ab-lt m-v n-v a-v b-v (matita-arithmetics-nat.le-to-lt-to-lt matita-arithmetics-nat.O b-v n-v (matita-arithmetics-nat.le-O-n b-v) ltbn-v) (matita-arithmetics-nat.le-to-lt-to-lt matita-arithmetics-nat.O a-v m-v (matita-arithmetics-nat.le-O-n a-v) ltam-v) pnm-v)))))) (matita-arithmetics-div-and-mod.mod (cr-pair m-v n-v a-v b-v) m-v) (matita-arithmetics-nat.eqb-true-to-eq (matita-arithmetics-div-and-mod.mod (cr-pair m-v n-v a-v b-v) m-v) a-v (matita-basics-bool.andb-true-l (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod (cr-pair m-v n-v a-v b-v) m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod (cr-pair m-v n-v a-v b-v) n-v) b-v) (matita-arithmetics-minimization.f-min-true (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod X---v m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod X---v n-v) b-v)) (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O (matita-basics-logic.match-ex lzero lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v))) lzero (λ (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v)))) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le matita-arithmetics-nat.O i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v n-v) b-v)) matita-basics-bool.true))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X-clearme-v : matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v))) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v))) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le matita-arithmetics-nat.O i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v n-v) b-v)) matita-basics-bool.true))) (λ (X-clearme0-v : matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) -> matita-basics-logic.match-And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-arithmetics-congruence.congruent x-v a-v m-v) (matita-arithmetics-congruence.congruent x-v b-v n-v)) -> (X--1-v : matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v)) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le matita-arithmetics-nat.O i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v n-v) b-v)) matita-basics-bool.true))) (λ (cxa-v : matita-arithmetics-congruence.congruent x-v a-v m-v) -> λ (cxb-v : matita-arithmetics-congruence.congruent x-v b-v n-v) -> λ (ltx-v : matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times m-v n-v)) -> matita-basics-logic.ex-intro lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le matita-arithmetics-nat.O i-v) (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod i-v n-v) b-v)) matita-basics-bool.true)) x-v (matita-basics-logic.conj lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.le matita-arithmetics-nat.O x-v) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod x-v m-v) a-v) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod x-v n-v) b-v)) matita-basics-bool.true) (matita-basics-logic.conj lzero lzero (matita-arithmetics-nat.le matita-arithmetics-nat.O x-v) (matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O)) (matita-arithmetics-nat.le-O-n x-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.times m-v n-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O)) ltx-v (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.times m-v n-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.times m-v n-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) X---v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.times m-v n-v)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.times m-v n-v))) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.times m-v n-v)) (matita-arithmetics-nat.plus-O-n (matita-arithmetics-nat.times m-v n-v))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times m-v n-v) matita-arithmetics-nat.O)))) (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x0-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x0-v matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb x0-v (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod x-v n-v) b-v)) matita-basics-bool.true) (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x0-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x0-v matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb matita-basics-bool.true x0-v) matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool (matita-basics-bool.andb matita-basics-bool.true matita-basics-bool.true)) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod x-v n-v) b-v) (matita-arithmetics-nat.eq-to-eqb-true (matita-arithmetics-div-and-mod.mod x-v n-v) b-v (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod b-v n-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod b-v n-v) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod x-v n-v) x-1-v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod b-v n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-div-and-mod.mod b-v n-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod b-v n-v)) (matita-arithmetics-div-and-mod.mod x-v n-v) cxb-v) b-v (matita-arithmetics-div-and-mod.lt-to-eq-mod b-v n-v ltbn-v)))) (matita-arithmetics-nat.eqb (matita-arithmetics-div-and-mod.mod x-v m-v) a-v) (matita-arithmetics-nat.eq-to-eqb-true (matita-arithmetics-div-and-mod.mod x-v m-v) a-v (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod a-v m-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod a-v m-v) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod x-v m-v) x-1-v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod a-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-div-and-mod.mod a-v m-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod a-v m-v)) (matita-arithmetics-div-and-mod.mod x-v m-v) cxa-v) a-v (matita-arithmetics-div-and-mod.lt-to-eq-mod a-v m-v ltam-v)))))) X-clearme0-v) X-clearme-v) (congruent-ab-lt m-v n-v a-v b-v (matita-arithmetics-nat.le-to-lt-to-lt matita-arithmetics-nat.O b-v n-v (matita-arithmetics-nat.le-O-n b-v) ltbn-v) (matita-arithmetics-nat.le-to-lt-to-lt matita-arithmetics-nat.O a-v m-v (matita-arithmetics-nat.le-O-n a-v) ltam-v) pnm-v)))))

