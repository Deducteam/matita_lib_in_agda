
open import Agda.Primitive

import matita-arithmetics-gcd
import matita-arithmetics-exp
import matita-arithmetics-primes
import matita-basics-logic
import matita-arithmetics-div-and-mod
import matita-basics-types
import matita-arithmetics-nat

p-ord-aux : (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat
p-ord-aux matita-arithmetics-nat.O n m = matita-arithmetics-nat.match-nat lzero (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n) (λ (a-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n) (matita-arithmetics-div-and-mod.mod n m)
p-ord-aux (matita-arithmetics-nat.S p) n m = matita-arithmetics-nat.match-nat lzero (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) ( matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X--1-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q-v) r-v) (p-ord-aux p (matita-arithmetics-div-and-mod.div n m) m)) (λ (a-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n) (matita-arithmetics-div-and-mod.mod n m)


p-ord : (X-n-v : matita-arithmetics-nat.nat) -> (X-m-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat
p-ord = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> p-ord-aux n-v n-v m-v

p-ord-aux-0 : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux matita-arithmetics-nat.O n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)
p-ord-aux-0 = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-arithmetics-nat.match-nat lzero (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-arithmetics-nat.match-nat lzero (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (p0-v : matita-arithmetics-nat.nat) -> matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X-0-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q-v) r-v) (p-ord-aux p0-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v)) matita-arithmetics-nat.O) (λ (a-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) X---v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)) (matita-basics-logic.refl lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)) (λ (auto-v : matita-arithmetics-nat.nat) -> matita-basics-logic.refl lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)) (matita-arithmetics-div-and-mod.mod n-v m-v)

p-ord-aux-Strue : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) matita-arithmetics-nat.O) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S p-v) n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q-v) r-v)
p-ord-aux-Strue = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) matita-arithmetics-nat.O) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-arithmetics-nat.match-nat lzero (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-arithmetics-nat.match-nat lzero (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (p0-v : matita-arithmetics-nat.nat) -> matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X-0-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (λ (q0-v : matita-arithmetics-nat.nat) -> λ (r0-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q0-v) r0-v) (p-ord-aux p0-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v)) (matita-arithmetics-nat.S p-v)) (λ (a-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) x-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q-v) r-v)) (λ (Hord-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq-ind-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v) (λ (x-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X-0-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (λ (q0-v : matita-arithmetics-nat.nat) -> λ (r0-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q0-v) r0-v) x-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q-v) r-v)) (matita-basics-logic.refl lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X-0-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (λ (q0-v : matita-arithmetics-nat.nat) -> λ (r0-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q0-v) r0-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v))) (p-ord-aux p-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) Hord-v) (matita-arithmetics-div-and-mod.mod n-v m-v) H-v

p-ord-aux-false : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) (matita-arithmetics-nat.S a-v)) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p-v n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)
p-ord-aux-false = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) (matita-arithmetics-nat.S a-v)) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux X---v n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)) (λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) (matita-arithmetics-nat.S a-v)) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S a-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.S a-v)) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-arithmetics-nat.match-nat lzero (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-arithmetics-nat.match-nat lzero (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (p0-v : matita-arithmetics-nat.nat) -> matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X-0-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q-v) r-v) (p-ord-aux p0-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v)) matita-arithmetics-nat.O) (λ (a0-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) x-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)) (matita-basics-logic.refl lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-arithmetics-nat.match-nat lzero (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-arithmetics-nat.match-nat lzero (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (p0-v : matita-arithmetics-nat.nat) -> matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X-0-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q-v) r-v) (p-ord-aux p0-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v)) matita-arithmetics-nat.O) (λ (a0-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-arithmetics-nat.S a-v))) (matita-arithmetics-div-and-mod.mod n-v m-v) H-v) (λ (p1-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) (matita-arithmetics-nat.S a-v)) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S a-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.S a-v)) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-arithmetics-nat.match-nat lzero (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-arithmetics-nat.match-nat lzero (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (p0-v : matita-arithmetics-nat.nat) -> matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X-0-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q-v) r-v) (p-ord-aux p0-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v)) (matita-arithmetics-nat.S p1-v)) (λ (a0-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) x-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)) (matita-basics-logic.refl lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (p0-v : matita-arithmetics-nat.nat) -> matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X---v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q-v) r-v) (p-ord-aux p0-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v)) (matita-arithmetics-nat.S p1-v)) (λ (a0-v : matita-arithmetics-nat.nat) -> matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-arithmetics-nat.S a-v))) (matita-arithmetics-div-and-mod.mod n-v m-v) H-v) p-v

p-ord-degenerate : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p-v n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat p-v n-v)
p-ord-degenerate = λ (p-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux X-x-365-v n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat X-x-365-v n-v)) (λ (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.rewrite-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (X---v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) X---v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)) (matita-basics-logic.refl lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)) (p-ord-aux matita-arithmetics-nat.O n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (p-ord-aux-0 n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (p1-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat p1-v n-v)) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq-ind-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (x-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) n-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) x-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) (matita-arithmetics-nat.plus X---v (matita-arithmetics-div-and-mod.mod n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) X---v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) X---v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) X---v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) X---v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-basics-logic.refl lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S p1-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) X---v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-nat.plus-O-n (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) matita-arithmetics-nat.O) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-primes.divides-to-mod-O (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v (matita-arithmetics-nat.lt-O-S matita-arithmetics-nat.O) (matita-arithmetics-primes.divides-SO-n n-v))) (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) n-v (matita-arithmetics-div-and-mod.div-mod n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (p-ord-aux (matita-arithmetics-nat.S p1-v) n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (p-ord-aux-Strue n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) p1-v p1-v (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v matita-arithmetics-nat.O) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.mod n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-primes.divides-to-mod-O (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v (matita-arithmetics-nat.lt-O-S matita-arithmetics-nat.O) (matita-arithmetics-primes.divides-SO-n n-v))) (Hind-v (matita-arithmetics-div-and-mod.div n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) p-v

p-ord-aux-to-exp : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p-v n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)
p-ord-aux-to-exp = λ (p-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux X-x-365-v n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)) (λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-case lzero (matita-arithmetics-div-and-mod.mod n-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux matita-arithmetics-nat.O n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)) (λ (Hmod-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) matita-arithmetics-nat.O) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> matita-basics-logic.eq-ind-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (x-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)) (λ (Hqr-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-types.Prod-discr lzero lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v) Hqr-v (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)) (λ (e0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R0 lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) q-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-1-v) -> (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-1-v r-v)) -> (X-e1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) n-v x-1-v X-x-2-v) r-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v x-1-v) r-v)) (λ (Hqr0-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> λ (e00-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) n-v matita-arithmetics-nat.O (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O)) r-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat r-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v r-v) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod x-v m-v) matita-arithmetics-nat.O) -> (X--2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O x-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (λ (Hmod0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O) -> λ (Hqr1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.streicherK lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v) (λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) r-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus r-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O r-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus r-v X---v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus r-v (matita-arithmetics-nat.times matita-arithmetics-nat.O r-v)) (matita-arithmetics-nat.times X---v r-v)) (matita-arithmetics-nat.times-Sn-m matita-arithmetics-nat.O r-v) (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) (matita-arithmetics-exp.exp-n-O m-v)) matita-arithmetics-nat.O (matita-arithmetics-nat.times-O-n r-v)) r-v (matita-arithmetics-nat.plus-n-O r-v))) Hqr1-v) n-v e00-v Hmod-v Hqr0-v) q-v e0-v Hqr-v)) (p-ord-aux matita-arithmetics-nat.O n-v m-v) (p-ord-aux-0 n-v m-v)) (λ (a-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) (matita-arithmetics-nat.S a-v)) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> matita-basics-logic.eq-ind-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (x-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)) (λ (Hqr-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-types.Prod-discr lzero lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v) Hqr-v (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)) (λ (e0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R0 lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) q-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-1-v) -> (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-1-v r-v)) -> (X-e1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) n-v x-1-v X-x-2-v) r-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v x-1-v) r-v)) (λ (Hqr0-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> λ (e00-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) n-v matita-arithmetics-nat.O (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O)) r-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat r-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v r-v) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod x-v m-v) (matita-arithmetics-nat.S a-v)) -> (X--2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O x-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (λ (H0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) (matita-arithmetics-nat.S a-v)) -> λ (Hqr1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.streicherK lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v) (λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) r-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus r-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O r-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus r-v X---v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus r-v (matita-arithmetics-nat.times matita-arithmetics-nat.O r-v)) (matita-arithmetics-nat.times X---v r-v)) (matita-arithmetics-nat.times-Sn-m matita-arithmetics-nat.O r-v) (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) (matita-arithmetics-exp.exp-n-O m-v)) matita-arithmetics-nat.O (matita-arithmetics-nat.times-O-n r-v)) r-v (matita-arithmetics-nat.plus-n-O r-v))) Hqr1-v) n-v e00-v H-v Hqr0-v) q-v e0-v Hqr-v)) (p-ord-aux matita-arithmetics-nat.O n-v m-v) (p-ord-aux-false matita-arithmetics-nat.O n-v m-v a-v H-v))) (λ (p1-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-case lzero (matita-arithmetics-div-and-mod.mod n-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S p1-v) n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)) (λ (Hmod-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) matita-arithmetics-nat.O) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X---v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) X---v) -> (X--2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S p1-v) n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)) (λ (q1-v : matita-arithmetics-nat.nat) -> λ (r1-v : matita-arithmetics-nat.nat) -> λ (H1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q1-v r1-v)) -> matita-basics-logic.eq-ind-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r1-v) (λ (x-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r1-v)) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)) (λ (H-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r1-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-types.Prod-discr lzero lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r1-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v) H-v (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)) (λ (e0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R0 lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v)) q-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) x-1-v) -> (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r1-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-1-v r-v)) -> (X-e1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) x0-v) -> matita-arithmetics-nat.nat) r1-v x-1-v X-x-2-v) r-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v x-1-v) r-v)) (λ (H0-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r1-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v)) -> λ (e00-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) x0-v) -> matita-arithmetics-nat.nat) r1-v (matita-arithmetics-nat.S q1-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v))) r-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat r-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v r-v) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q1-v x-v)) -> (X--2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) x-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v (matita-arithmetics-nat.S q1-v)) r-v)) (λ (H10-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q1-v r-v)) -> λ (H2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v)) -> matita-basics-logic.streicherK lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v) (λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v (matita-arithmetics-nat.S q1-v)) r-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-arithmetics-div-and-mod.mod n-v m-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-arithmetics-div-and-mod.mod n-v m-v))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q1-v) m-v) r-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v m-v) m-v) x-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q1-v) m-v) r-v)) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v m-v) m-v) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-1-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q1-v) m-v) r-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q1-v) r-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q1-v) r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times x-v m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q1-v) m-v) r-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times r-v (matita-arithmetics-exp.exp m-v q1-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times X---v m-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q1-v) m-v) r-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times r-v (matita-arithmetics-exp.exp m-v q1-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q1-v) m-v) r-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-exp.exp m-v q1-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times r-v (matita-arithmetics-exp.exp m-v q1-v))) (matita-arithmetics-nat.times X---v r-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times r-v (matita-arithmetics-nat.times m-v (matita-arithmetics-exp.exp m-v q1-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times r-v (matita-arithmetics-exp.exp m-v q1-v))) X---v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times r-v (matita-arithmetics-exp.exp m-v q1-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times r-v (matita-arithmetics-exp.exp m-v q1-v))) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times r-v (matita-arithmetics-exp.exp m-v q1-v)))) (matita-arithmetics-nat.times r-v (matita-arithmetics-nat.times m-v (matita-arithmetics-exp.exp m-v q1-v))) (matita-arithmetics-nat.times-times r-v m-v (matita-arithmetics-exp.exp m-v q1-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times m-v (matita-arithmetics-exp.exp m-v q1-v)) r-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times m-v (matita-arithmetics-exp.exp m-v q1-v)) r-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q1-v) m-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp m-v q1-v) m-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times r-v (matita-arithmetics-exp.exp m-v q1-v)) m-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times r-v (matita-arithmetics-exp.exp m-v q1-v)) m-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q1-v) r-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp m-v q1-v) r-v)) (matita-arithmetics-div-and-mod.div n-v m-v) (Hind-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v q1-v r-v posm-v H10-v)) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v m-v) m-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v m-v) m-v))) (matita-arithmetics-div-and-mod.mod n-v m-v) Hmod-v) n-v (matita-arithmetics-div-and-mod.div-mod n-v m-v)) H2-v) r1-v e00-v H1-v H0-v) q-v e0-v H-v)) (p-ord-aux (matita-arithmetics-nat.S p1-v) n-v m-v) (p-ord-aux-Strue n-v m-v p1-v q1-v r1-v Hmod-v H1-v)) (p-ord-aux p1-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-basics-logic.refl lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v))) (λ (a-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) (matita-arithmetics-nat.S a-v)) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> matita-basics-logic.eq-ind-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (x-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)) (λ (Hqr-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-types.Prod-discr lzero lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v) Hqr-v (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v q-v) r-v)) (λ (e0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R0 lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) q-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-1-v) -> (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-1-v r-v)) -> (X-e1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) n-v x-1-v X-x-2-v) r-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v x-1-v) r-v)) (λ (Hqr0-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> λ (e00-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) n-v matita-arithmetics-nat.O (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O)) r-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat r-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v r-v) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod x-v m-v) (matita-arithmetics-nat.S a-v)) -> (X--2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O x-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (λ (H0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) (matita-arithmetics-nat.S a-v)) -> λ (Hqr1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.streicherK lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v) (λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) r-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus r-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O r-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus r-v X---v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) r-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus r-v (matita-arithmetics-nat.times matita-arithmetics-nat.O r-v)) (matita-arithmetics-nat.times X---v r-v)) (matita-arithmetics-nat.times-Sn-m matita-arithmetics-nat.O r-v) (matita-arithmetics-exp.exp m-v matita-arithmetics-nat.O) (matita-arithmetics-exp.exp-n-O m-v)) matita-arithmetics-nat.O (matita-arithmetics-nat.times-O-n r-v)) r-v (matita-arithmetics-nat.plus-n-O r-v))) Hqr1-v) n-v e00-v H-v Hqr0-v) q-v e0-v Hqr-v)) (p-ord-aux (matita-arithmetics-nat.S p1-v) n-v m-v) (p-ord-aux-false (matita-arithmetics-nat.S p1-v) n-v m-v a-v H-v))) p-v

p-ord-exp : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--1-v : matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) matita-arithmetics-nat.O)) -> (p-v : matita-arithmetics-nat.nat) -> (X--2-v : matita-arithmetics-nat.le i-v p-v) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i-v) n-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat i-v n-v)
p-ord-exp = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (Hmod-v : matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) matita-arithmetics-nat.O)) -> matita-basics-logic.match-ex lzero lzero matita-arithmetics-nat.nat (λ (a-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) (matita-arithmetics-nat.S a-v)) lzero (λ (X---v : matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (a-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) (matita-arithmetics-nat.S a-v))) -> (p-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.le i-v p-v) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i-v) n-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat i-v n-v)) (λ (mod1-v : matita-arithmetics-nat.nat) -> λ (Hmod1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) (matita-arithmetics-nat.S mod1-v)) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le X-x-365-v p-v) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v X-x-365-v) n-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat X-x-365-v n-v)) (λ (p-v : matita-arithmetics-nat.nat) -> λ (posp-v : matita-arithmetics-nat.le matita-arithmetics-nat.O p-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat n-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v x-1-v) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p-v x-1-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)) (p-ord-aux-false p-v n-v m-v mod1-v Hmod1-v) (matita-arithmetics-nat.plus n-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O n-v)) (λ (i0-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le i0-v p-v) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat i0-v n-v)) -> λ (p-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-case lzero p-v (λ (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S i0-v) X---v) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v (matita-arithmetics-nat.S i0-v)) n-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S i0-v) n-v)) (λ (Hp-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat p-v matita-arithmetics-nat.O) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O) -> (X--1-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S i0-v) matita-arithmetics-nat.O) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux matita-arithmetics-nat.O (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v (matita-arithmetics-nat.S i0-v)) n-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S i0-v) n-v)) (λ (Habs-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S i0-v) matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux matita-arithmetics-nat.O (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v (matita-arithmetics-nat.S i0-v)) n-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S i0-v) n-v)) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S i0-v) matita-arithmetics-nat.O) Habs-v (matita-arithmetics-nat.not-le-Sn-O i0-v))) p-v Hp-v) (λ (p1-v : matita-arithmetics-nat.nat) -> λ (Hp1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat p-v (matita-arithmetics-nat.S p1-v)) -> λ (lep1-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S i0-v) (matita-arithmetics-nat.S p1-v)) -> p-ord-aux-Strue (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v (matita-arithmetics-nat.S i0-v)) n-v) m-v p1-v i0-v n-v (matita-arithmetics-primes.divides-to-mod-O m-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) m-v) n-v) posm-v (matita-arithmetics-primes.quotient m-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) m-v) n-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-exp.exp m-v i0-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times X---v n-v) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times m-v (matita-arithmetics-exp.exp m-v i0-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-exp.exp m-v i0-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times m-v (matita-arithmetics-exp.exp m-v i0-v))) (matita-arithmetics-nat.times m-v X---v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times m-v (matita-arithmetics-exp.exp m-v i0-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times m-v (matita-arithmetics-exp.exp m-v i0-v))) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.times m-v (matita-arithmetics-exp.exp m-v i0-v)))) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.times n-v (matita-arithmetics-exp.exp m-v i0-v))) (matita-arithmetics-nat.times-times m-v n-v (matita-arithmetics-exp.exp m-v i0-v))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp m-v i0-v) n-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times m-v (matita-arithmetics-exp.exp m-v i0-v)) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times m-v (matita-arithmetics-exp.exp m-v i0-v)) n-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) m-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp m-v i0-v) m-v)))) (matita-basics-logic.eq-ind lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v) m-v) (λ (x-1-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v) m-v) x-1-v) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v (matita-arithmetics-nat.S i0-v)) n-v) m-v) m-v) x-1-v) (matita-basics-logic.eq-f2 lzero lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v) (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v (matita-arithmetics-nat.S i0-v)) n-v) m-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v) m-v m-v (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) (matita-arithmetics-nat.times m-v n-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) (matita-arithmetics-nat.times m-v n-v))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.div x-v m-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v m-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times n-v m-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) x-v) m-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v)) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v) m-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v) m-v) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.div x-1-v m-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-exp.exp m-v i0-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-exp.exp m-v i0-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-exp.exp m-v i0-v)) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-exp.exp m-v i0-v))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp m-v i0-v) n-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp m-v i0-v) n-v)) (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v) m-v) m-v) (matita-arithmetics-div-and-mod.div-times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) n-v) m-v posm-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) (matita-arithmetics-nat.times n-v m-v)) (matita-arithmetics-nat.associative-times (matita-arithmetics-exp.exp m-v i0-v) n-v m-v)) (matita-arithmetics-nat.times m-v n-v) (matita-arithmetics-nat.commutative-times m-v n-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp m-v i0-v) m-v) n-v) (matita-arithmetics-nat.associative-times (matita-arithmetics-exp.exp m-v i0-v) m-v n-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat m-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat i0-v n-v) (Hind-v p1-v (matita-arithmetics-nat.le-S-S-to-le i0-v p1-v lep1-v))))) i-v) (matita-arithmetics-nat.nat-case lzero (matita-arithmetics-div-and-mod.mod n-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (a-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S a-v))) (λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.ex lzero lzero matita-arithmetics-nat.nat (λ (a-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-nat.S a-v))) (matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v matita-arithmetics-nat.O) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.mod n-v m-v) H-v) Hmod-v)) (λ (a-v : matita-arithmetics-nat.nat) -> λ (Hmod1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) (matita-arithmetics-nat.S a-v)) -> matita-basics-logic.ex-intro lzero lzero matita-arithmetics-nat.nat (λ (a0-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S a-v) (matita-arithmetics-nat.S a0-v)) a-v (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S a-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v)) (matita-arithmetics-nat.S a-v) Hmod1-v) (matita-arithmetics-nat.S a-v) Hmod1-v)))

p-ord-aux-to-not-mod-O : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--2-v : matita-arithmetics-nat.le n-v p-v) -> (X--3-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p-v n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)
p-ord-aux-to-not-mod-O = λ (p-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--2-v : matita-arithmetics-nat.le n-v X-x-365-v) -> (X--3-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux X-x-365-v n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (nposn-v : matita-arithmetics-nat.le n-v matita-arithmetics-nat.O) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux matita-arithmetics-nat.O n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) posn-v (matita-arithmetics-nat.le-to-not-lt n-v matita-arithmetics-nat.O nposn-v))) (λ (p1-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--2-v : matita-arithmetics-nat.le n-v p1-v) -> (X--3-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-case lzero (matita-arithmetics-div-and-mod.mod n-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v) -> (X--2-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--3-v : matita-arithmetics-nat.le n-v (matita-arithmetics-nat.S p1-v)) -> (X--4-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S p1-v) n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (λ (Hmod-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) matita-arithmetics-nat.O) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> λ (lt1m-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (len-v : matita-arithmetics-nat.le n-v (matita-arithmetics-nat.S p1-v)) -> matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X---v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) X---v) -> (X--2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S p1-v) n-v m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (λ (q1-v : matita-arithmetics-nat.nat) -> λ (r1-v : matita-arithmetics-nat.nat) -> λ (H1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q1-v r1-v)) -> matita-basics-logic.eq-ind-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r1-v) (λ (x-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r1-v)) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (λ (H-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r1-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-types.Prod-discr lzero lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r1-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v) H-v (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (λ (e0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R0 lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v)) q-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) x-1-v) -> (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r1-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-1-v r-v)) -> (X-e1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) x0-v) -> matita-arithmetics-nat.nat) r1-v x-1-v X-x-2-v) r-v) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (λ (H0-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r1-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v)) -> λ (e00-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) x0-v) -> matita-arithmetics-nat.nat) r1-v (matita-arithmetics-nat.S q1-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v))) r-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat r-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v r-v) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q1-v x-v)) -> (X--2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) x-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (λ (H10-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q1-v r-v)) -> λ (H2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v)) -> matita-basics-logic.streicherK lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v) (λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S q1-v) r-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (Hind-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v q1-v r-v lt1m-v (matita-arithmetics-div-and-mod.pos-div n-v m-v (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v lt1m-v) posn-v Hmod-v) (matita-arithmetics-nat.le-S-S-to-le (matita-arithmetics-div-and-mod.div n-v m-v) p1-v (matita-arithmetics-nat.transitive-le (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.div n-v m-v)) n-v (matita-arithmetics-nat.S p1-v) (matita-arithmetics-div-and-mod.lt-times-to-lt-div n-v n-v m-v (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times n-v m-v)) (matita-arithmetics-nat.monotonic-lt-times-r n-v posn-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v lt1m-v) n-v (matita-arithmetics-nat.times-n-1 n-v))) len-v)) H10-v) H2-v) r1-v e00-v H1-v H0-v) q-v e0-v H-v)) (p-ord-aux (matita-arithmetics-nat.S p1-v) n-v m-v) (p-ord-aux-Strue n-v m-v p1-v q1-v r1-v Hmod-v H1-v)) (p-ord-aux p1-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-basics-logic.refl lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux p1-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v))) (λ (a-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod n-v m-v) (matita-arithmetics-nat.S a-v)) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> λ (lt1m-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.le n-v (matita-arithmetics-nat.S p1-v)) -> matita-basics-logic.eq-ind-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (x-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (λ (Hqr-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-types.Prod-discr lzero lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v) Hqr-v (matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (λ (e0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R0 lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) q-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-1-v) -> (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-1-v r-v)) -> (X-e1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) n-v x-1-v X-x-2-v) r-v) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (λ (Hqr0-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> λ (e00-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) n-v matita-arithmetics-nat.O (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O)) r-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat r-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v r-v) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod x-v m-v) (matita-arithmetics-nat.S a-v)) -> (X--2-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O x-v) -> (X--3-v : matita-arithmetics-nat.le x-v (matita-arithmetics-nat.S p1-v)) -> (X--4-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O x-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (λ (H0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) (matita-arithmetics-nat.S a-v)) -> λ (posn0-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O r-v) -> λ (posm0-v : matita-arithmetics-nat.le r-v (matita-arithmetics-nat.S p1-v)) -> λ (Hqr1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.streicherK lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v) (λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v m-v) matita-arithmetics-nat.O)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S a-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.S a-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O)) (matita-basics-logic.sym-not-eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-nat.S a-v) (matita-arithmetics-nat.not-eq-O-S a-v)) (matita-arithmetics-div-and-mod.mod r-v m-v) H0-v) Hqr1-v) n-v e00-v H-v posn-v posm-v Hqr0-v) q-v e0-v Hqr-v)) (p-ord-aux (matita-arithmetics-nat.S p1-v) n-v m-v) (p-ord-aux-false (matita-arithmetics-nat.S p1-v) n-v m-v a-v H-v))) p-v

let-clause-1033 : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (posp-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> (ndivpr-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v r-v)) -> (Hn-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v q-v) r-v)) -> (q0-v : matita-arithmetics-nat.nat) -> (q1-v : matita-arithmetics-nat.nat) -> (Hind-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S q1-v) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S q1-v))) -> (x2515-v : matita-arithmetics-nat.nat) -> (x2516-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x2515-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times x2516-v (matita-arithmetics-div-and-mod.div x2515-v x2516-v)) (matita-arithmetics-div-and-mod.mod x2515-v x2516-v))
let-clause-1033 = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> λ (posp-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> λ (ndivpr-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v r-v)) -> λ (Hn-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v q-v) r-v)) -> λ (q0-v : matita-arithmetics-nat.nat) -> λ (q1-v : matita-arithmetics-nat.nat) -> λ (Hind-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S q1-v) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S q1-v))) -> λ (x2515-v : matita-arithmetics-nat.nat) -> λ (x2516-v : matita-arithmetics-nat.nat) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div x2515-v x2516-v) x2516-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x2515-v (matita-arithmetics-nat.plus X---v (matita-arithmetics-div-and-mod.mod x2515-v x2516-v))) (matita-arithmetics-div-and-mod.div-mod x2515-v x2516-v) (matita-arithmetics-nat.times x2516-v (matita-arithmetics-div-and-mod.div x2515-v x2516-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-div-and-mod.div x2515-v x2516-v) x2516-v)

p-ord-exp1 : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> (X--1-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v r-v)) -> (X--2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v q-v) r-v)) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord n-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)
p-ord-exp1 = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> λ (posp-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> λ (ndivpr-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v r-v)) -> λ (Hn-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v q-v) r-v)) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v q-v) r-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v q-v) r-v)) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord x-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) (p-ord-exp r-v p-v q-v posp-v (matita-basics-logic.not-to-not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v p-v) matita-arithmetics-nat.O) (matita-arithmetics-primes.divides p-v r-v) (λ (auto-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v p-v) matita-arithmetics-nat.O) -> matita-basics-logic.eq-coerc lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus r-v matita-arithmetics-nat.O)) (matita-arithmetics-primes.divides p-v r-v) (matita-arithmetics-primes.eq-mod-to-divides r-v matita-arithmetics-nat.O p-v posp-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-div-and-mod.mod matita-arithmetics-nat.O p-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.mod matita-arithmetics-nat.O p-v) (matita-arithmetics-div-and-mod.mod-O-n p-v)) (matita-arithmetics-div-and-mod.mod r-v p-v) auto-v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat r-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-primes.divides p-v X---v) (matita-arithmetics-primes.divides p-v r-v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-primes.divides p-v r-v)) (matita-arithmetics-nat.minus r-v matita-arithmetics-nat.O) (matita-arithmetics-nat.minus-n-O r-v))) ndivpr-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v q-v) r-v) (matita-arithmetics-nat.transitive-le q-v (matita-arithmetics-exp.exp p-v q-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v q-v) r-v) (matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le X-x-365-v (matita-arithmetics-exp.exp p-v X-x-365-v)) (matita-arithmetics-nat.le-O-n (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O)) (λ (q0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> (X-x-368-v : matita-arithmetics-nat.le X---v (matita-arithmetics-exp.exp p-v X---v)) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S X---v) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S X---v))) (λ (X---v : matita-arithmetics-nat.le matita-arithmetics-nat.O (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O)) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat p-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat p-v x-1-v) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) x-1-v) (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v (matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) lzero (λ (X-0-v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v)) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) (λ (auto-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> auto-v) (λ (eqp1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) (matita-basics-logic.absurd lzero (matita-arithmetics-primes.divides p-v r-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) x-1-v) -> matita-arithmetics-primes.divides x-1-v r-v) (matita-arithmetics-primes.quotient (matita-arithmetics-nat.S matita-arithmetics-nat.O) r-v r-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat p-v (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v (matita-arithmetics-nat.times X--1-v r-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times r-v p-v) (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v X--1-v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat r-v (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v X--1-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat r-v) (matita-arithmetics-nat.times r-v p-v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v (matita-arithmetics-nat.times r-v X--1-v)) (matita-arithmetics-nat.times-n-1 r-v) p-v eqp1-v)) (matita-arithmetics-nat.times p-v r-v) (matita-arithmetics-nat.commutative-times p-v r-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) eqp1-v)) p-v eqp1-v) ndivpr-v)) (matita-arithmetics-nat.le-to-or-lt-eq (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v posp-v))) (matita-arithmetics-nat.plus p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O p-v)) (λ (q1-v : matita-arithmetics-nat.nat) -> λ (Hind-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S q1-v) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S q1-v))) -> matita-arithmetics-nat.lt-to-le-to-lt (matita-arithmetics-nat.S q1-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.S q1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (matita-arithmetics-nat.S q1-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S q1-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S q1-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S q1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-nat.monotonic-lt-times-r (matita-arithmetics-nat.S q1-v) (matita-arithmetics-nat.lt-O-S q1-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O))) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt-plus-Sn-r (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) matita-arithmetics-nat.O) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt X---v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) X---v) (matita-arithmetics-nat.times-Sn-m (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) X---v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (let-clause-1033 p-v n-v q-v r-v posp-v ndivpr-v Hn-v q0-v q1-v Hind-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O))) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O))) matita-arithmetics-nat.O (matita-arithmetics-nat.times-O-n (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-O-n (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)))) (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (let-clause-1033 p-v n-v q-v r-v posp-v ndivpr-v Hn-v q0-v q1-v Hind-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O))) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)))))) (matita-arithmetics-nat.S q1-v) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-nat.S q1-v))) (matita-arithmetics-nat.le-times (matita-arithmetics-nat.S q1-v) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S q1-v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) p-v Hind-v (matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v)) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) (λ (auto-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> auto-v) (λ (eqp1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) (matita-basics-logic.absurd lzero (matita-arithmetics-primes.divides p-v r-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) x-1-v) -> matita-arithmetics-primes.divides x-1-v r-v) (matita-arithmetics-primes.quotient (matita-arithmetics-nat.S matita-arithmetics-nat.O) r-v r-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat p-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v (matita-arithmetics-nat.times X---v r-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times r-v p-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat r-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat r-v) (matita-arithmetics-nat.times r-v p-v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v (matita-arithmetics-nat.times r-v X---v)) (matita-arithmetics-nat.times-n-1 r-v) p-v eqp1-v)) (matita-arithmetics-nat.times p-v r-v) (matita-arithmetics-nat.commutative-times p-v r-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) eqp1-v)) p-v eqp1-v) ndivpr-v)) (matita-arithmetics-nat.le-to-or-lt-eq (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v posp-v)))) q0-v) q-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v q-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v q-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-arithmetics-nat.le x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v q-v) r-v)) (matita-arithmetics-nat.le-times (matita-arithmetics-exp.exp p-v q-v) (matita-arithmetics-exp.exp p-v q-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O) r-v (matita-arithmetics-nat.le-n (matita-arithmetics-exp.exp p-v q-v)) (matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v X---v)) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (λ (Habs-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v matita-arithmetics-nat.O)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-basics-logic.absurd lzero (matita-arithmetics-primes.divides p-v matita-arithmetics-nat.O) (matita-arithmetics-primes.quotient p-v matita-arithmetics-nat.O matita-arithmetics-nat.O (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times p-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times p-v matita-arithmetics-nat.O)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times p-v matita-arithmetics-nat.O)) matita-arithmetics-nat.O (matita-arithmetics-nat.times-n-O p-v))) Habs-v)) (λ (auto-v : matita-arithmetics-nat.nat) -> λ (auto'-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.S auto-v))) -> matita-arithmetics-nat.lt-O-S auto-v) r-v ndivpr-v)) (matita-arithmetics-exp.exp p-v q-v) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-exp.exp p-v q-v))))) n-v Hn-v

p-ord-to-exp1 : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord n-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v r-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v q-v) r-v))
p-ord-to-exp1 = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (Hord-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord n-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.conj lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v r-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v q-v) r-v)) (matita-basics-logic.not-to-not lzero (matita-arithmetics-primes.divides p-v r-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod r-v p-v) matita-arithmetics-nat.O) (matita-arithmetics-primes.divides-to-mod-O p-v r-v (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v lt1p-v)) (p-ord-aux-to-not-mod-O n-v n-v p-v q-v r-v lt1p-v posn-v (matita-arithmetics-nat.le-n n-v) Hord-v)) (p-ord-aux-to-exp n-v n-v p-v q-v r-v (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v lt1p-v) Hord-v)

let-clause-10331 : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (n1-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (p1-v : matita-arithmetics-nat.nat) -> (p2-v : matita-arithmetics-nat.nat) -> (qa-v : matita-arithmetics-nat.nat) -> (ra-v : matita-arithmetics-nat.nat) -> (H-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat qa-v ra-v)) -> (x2515-v : matita-arithmetics-nat.nat) -> (x2516-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x2515-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times x2516-v (matita-arithmetics-div-and-mod.div x2515-v x2516-v)) (matita-arithmetics-div-and-mod.mod x2515-v x2516-v))
let-clause-10331 = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (n1-v : matita-arithmetics-nat.nat) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (p1-v : matita-arithmetics-nat.nat) -> λ (p2-v : matita-arithmetics-nat.nat) -> λ (qa-v : matita-arithmetics-nat.nat) -> λ (ra-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat qa-v ra-v)) -> λ (x2515-v : matita-arithmetics-nat.nat) -> λ (x2516-v : matita-arithmetics-nat.nat) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div x2515-v x2516-v) x2516-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x2515-v (matita-arithmetics-nat.plus X---v (matita-arithmetics-div-and-mod.mod x2515-v x2516-v))) (matita-arithmetics-div-and-mod.div-mod x2515-v x2516-v) (matita-arithmetics-nat.times x2516-v (matita-arithmetics-div-and-mod.div x2515-v x2516-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-div-and-mod.div x2515-v x2516-v) x2516-v)

eq-p-ord-q-O : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord n-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)
eq-p-ord-q-O = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux X---v X---v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) (λ (q-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux matita-arithmetics-nat.O matita-arithmetics-nat.O X---v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) (λ (H-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-types.Prod-discr lzero lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O) H-v (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) (λ (e0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R0 lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) q-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-1-v) -> (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-1-v matita-arithmetics-nat.O)) -> (X-e1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) matita-arithmetics-nat.O x-1-v X-x-2-v) matita-arithmetics-nat.O) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-1-v matita-arithmetics-nat.O)) (λ (H0-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O)) -> matita-basics-logic.streicherK lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O)) -> (X-e1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) matita-arithmetics-nat.O matita-arithmetics-nat.O (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O)) matita-arithmetics-nat.O) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O)) (λ (e00-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) matita-arithmetics-nat.O matita-arithmetics-nat.O (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O)) matita-arithmetics-nat.O) -> matita-basics-logic.streicherK lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O)) (matita-basics-logic.conj lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O)) e00-v) H0-v) q-v e0-v H-v)) (λ (q1-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-types.Prod-discr lzero lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O) H-v (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) (λ (e0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R0 lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) q-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-1-v) -> (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-1-v matita-arithmetics-nat.O)) -> (X-e1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) matita-arithmetics-nat.O x-1-v X-x-2-v) matita-arithmetics-nat.O) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-1-v matita-arithmetics-nat.O)) (λ (H0-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O)) -> matita-basics-logic.streicherK lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O)) -> (X-e1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) matita-arithmetics-nat.O matita-arithmetics-nat.O (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O)) matita-arithmetics-nat.O) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O)) (λ (e00-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) matita-arithmetics-nat.O matita-arithmetics-nat.O (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O)) matita-arithmetics-nat.O) -> matita-basics-logic.streicherK lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O)) (matita-basics-logic.conj lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O)) e00-v) H0-v) q-v e0-v H-v)) p-v) (λ (n1-v : matita-arithmetics-nat.nat) -> λ (q-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) X---v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) (λ (H-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-nat.S n1-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-types.Prod-discr lzero lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-nat.S n1-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O) H-v (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) (λ (e0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R0 lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) q-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-1-v) -> (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-nat.S n1-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-1-v matita-arithmetics-nat.O)) -> (X-e1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) (matita-arithmetics-nat.S n1-v) x-1-v X-x-2-v) matita-arithmetics-nat.O) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-1-v matita-arithmetics-nat.O)) (λ (H0-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-nat.S n1-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O)) -> λ (e00-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x0-v) -> matita-arithmetics-nat.nat) (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O)) matita-arithmetics-nat.O) -> matita-arithmetics-nat.nat-discr lzero (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O e00-v (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O))) q-v e0-v H-v)) (λ (p1-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S X---v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) (matita-basics-logic.eq-ind-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v)) (λ (x-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v))) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) (λ (H-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-types.Prod-discr lzero lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O) H-v (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) (λ (e0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R0 lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v)) q-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) x-1-v) -> (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-1-v matita-arithmetics-nat.O)) -> (X-e1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) x0-v) -> matita-arithmetics-nat.nat) (matita-arithmetics-nat.S n1-v) x-1-v X-x-2-v) matita-arithmetics-nat.O) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-1-v matita-arithmetics-nat.O)) (λ (H0-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O)) -> λ (e00-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) x0-v) -> matita-arithmetics-nat.nat) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v))) matita-arithmetics-nat.O) -> matita-arithmetics-nat.nat-discr lzero (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O e00-v (matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O))) q-v e0-v H-v)) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (p-ord-degenerate (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v))) (λ (p2-v : matita-arithmetics-nat.nat) -> matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X---v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) X---v) -> (X--2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) (λ (qa-v : matita-arithmetics-nat.nat) -> λ (ra-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat qa-v ra-v)) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) ra-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) qa-v) ra-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) ra-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) qa-v) ra-v))) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) (λ (X---v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) ra-v)) -> λ (H1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) qa-v) ra-v)) -> matita-basics-logic.eq-ind-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat qa-v ra-v) (λ (x-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X-0-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat qa-v ra-v)) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) (λ (H2-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat qa-v ra-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.And lzero lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) (matita-basics-types.Prod-discr lzero lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat qa-v ra-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O) H2-v (matita-basics-logic.False lzero) (λ (e0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R0 lzero matita-arithmetics-nat.nat qa-v) q-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat q-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X-0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v q-v) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-v ra-v)) -> (X--2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) x-v) ra-v)) -> (X--3-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-v ra-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> (X-e1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat x-v (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v x0-v) -> matita-arithmetics-nat.nat) ra-v q-v X-0-v) matita-arithmetics-nat.O) -> matita-basics-logic.False lzero) (λ (H0-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v ra-v)) -> λ (H10-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) q-v) ra-v)) -> λ (H20-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v ra-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> λ (e00-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-logic.R1 lzero lzero matita-arithmetics-nat.nat q-v (λ (x0-v : matita-arithmetics-nat.nat) -> λ (p0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v x0-v) -> matita-arithmetics-nat.nat) ra-v q-v (matita-basics-logic.refl lzero matita-arithmetics-nat.nat q-v)) matita-arithmetics-nat.O) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-v : matita-arithmetics-nat.nat) -> λ (X-0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v x-v)) -> (X--2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) q-v) x-v)) -> (X--3-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v x-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-logic.False lzero) (λ (H3-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> λ (H11-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) q-v) matita-arithmetics-nat.O)) -> λ (H21-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-logic.streicherK lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O) (λ (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v matita-arithmetics-nat.O)) -> matita-basics-logic.False lzero) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-1-v) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) x-1-v) -> matita-basics-logic.False lzero) (λ (Habs-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O) -> matita-arithmetics-nat.nat-discr lzero (matita-arithmetics-nat.S n1-v) matita-arithmetics-nat.O Habs-v (matita-basics-logic.False lzero)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) q-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.times-n-O (matita-arithmetics-exp.exp (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) q-v)) H11-v) H21-v) ra-v e00-v H0-v H10-v H20-v) qa-v e0-v H-v H1-v H2-v))) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) H-v) (p-ord-to-exp1 (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) (matita-arithmetics-nat.S n1-v) qa-v ra-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O))) (matita-arithmetics-nat.S p2-v))) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) (matita-arithmetics-nat.lt-plus-Sn-r (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) p2-v) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus X---v (matita-arithmetics-nat.S p2-v))) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt X---v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S p2-v))) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S p2-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S p2-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times (matita-arithmetics-nat.S p2-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) X---v) (matita-arithmetics-nat.times-Sn-m (matita-arithmetics-nat.S p2-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v)))) (matita-arithmetics-nat.S p2-v) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-nat.S p2-v)))) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) X---v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (let-clause-10331 p-v n-v n1-v q-v p1-v p2-v qa-v ra-v H-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O))) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O))) matita-arithmetics-nat.O (matita-arithmetics-nat.times-O-n (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-O-n (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)))) (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) (let-clause-10331 p-v n-v n1-v q-v p1-v p2-v qa-v ra-v H-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O))) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.O))))) (matita-arithmetics-nat.lt-O-S n1-v) H-v)) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))) (matita-basics-logic.refl lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord-aux (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.S p2-v))))) p1-v) p-v) n-v

p-ord-times : (p-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (qa-v : matita-arithmetics-nat.nat) -> (ra-v : matita-arithmetics-nat.nat) -> (qb-v : matita-arithmetics-nat.nat) -> (rb-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-primes.prime p-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O a-v) -> (X--2-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O b-v) -> (X--3-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord a-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat qa-v ra-v)) -> (X--4-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord b-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat qb-v rb-v)) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord (matita-arithmetics-nat.times a-v b-v) p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.plus qa-v qb-v) (matita-arithmetics-nat.times ra-v rb-v))
p-ord-times = λ (p-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (qa-v : matita-arithmetics-nat.nat) -> λ (ra-v : matita-arithmetics-nat.nat) -> λ (qb-v : matita-arithmetics-nat.nat) -> λ (rb-v : matita-arithmetics-nat.nat) -> λ (Hprime-v : matita-arithmetics-primes.prime p-v) -> λ (posa-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O a-v) -> λ (posb-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O b-v) -> λ (porda-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord a-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat qa-v ra-v)) -> λ (pordb-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord b-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat qb-v rb-v)) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v ra-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat a-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) ra-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v ra-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat a-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) ra-v))) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord (matita-arithmetics-nat.times a-v b-v) p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.plus qa-v qb-v) (matita-arithmetics-nat.times ra-v rb-v))) (λ (Hdiva-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v ra-v)) -> λ (Ha-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat a-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) ra-v)) -> matita-basics-logic.And-ind lzero lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v rb-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qb-v) rb-v)) (λ (X-x-118-v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v rb-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qb-v) rb-v))) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord (matita-arithmetics-nat.times a-v b-v) p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.plus qa-v qb-v) (matita-arithmetics-nat.times ra-v rb-v))) (λ (Hdivb-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v rb-v)) -> λ (Hb-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qb-v) rb-v)) -> p-ord-exp1 p-v (matita-arithmetics-nat.times a-v b-v) (matita-arithmetics-nat.plus qa-v qb-v) (matita-arithmetics-nat.times ra-v rb-v) (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v (matita-arithmetics-primes.prime-to-lt-SO p-v Hprime-v)) (matita-basics-logic.nmk lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.times ra-v rb-v)) (λ (Hdiv-v : matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.times ra-v rb-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-primes.divides p-v ra-v) (matita-arithmetics-primes.divides p-v rb-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-primes.divides p-v ra-v) (matita-arithmetics-primes.divides p-v rb-v)) -> matita-basics-logic.False lzero) (λ (Habs-v : matita-arithmetics-primes.divides p-v ra-v) -> matita-basics-logic.absurd lzero (matita-arithmetics-primes.divides p-v ra-v) Habs-v Hdiva-v) (λ (Habs-v : matita-arithmetics-primes.divides p-v rb-v) -> matita-basics-logic.absurd lzero (matita-arithmetics-primes.divides p-v rb-v) Habs-v Hdivb-v) (matita-arithmetics-gcd.divides-times-to-divides p-v ra-v rb-v Hprime-v Hdiv-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) ra-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) ra-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times x-v b-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus qa-v qb-v)) (matita-arithmetics-nat.times ra-v rb-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qb-v) rb-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qb-v) rb-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) ra-v) x-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus qa-v qb-v)) (matita-arithmetics-nat.times ra-v rb-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times ra-v (matita-arithmetics-exp.exp p-v qa-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qb-v) rb-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus qa-v qb-v)) (matita-arithmetics-nat.times ra-v rb-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times rb-v (matita-arithmetics-exp.exp p-v qb-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times ra-v (matita-arithmetics-exp.exp p-v qa-v)) X---v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus qa-v qb-v)) (matita-arithmetics-nat.times ra-v rb-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times ra-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-nat.times rb-v (matita-arithmetics-exp.exp p-v qb-v)))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus qa-v qb-v)) (matita-arithmetics-nat.times ra-v rb-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times rb-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-exp.exp p-v qb-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times ra-v X---v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus qa-v qb-v)) (matita-arithmetics-nat.times ra-v rb-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-exp.exp p-v qb-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times ra-v (matita-arithmetics-nat.times rb-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-exp.exp p-v qb-v)))) (matita-arithmetics-nat.times X---v (matita-arithmetics-nat.times ra-v rb-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times ra-v rb-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-exp.exp p-v qb-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times ra-v (matita-arithmetics-nat.times rb-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-exp.exp p-v qb-v)))) X---v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times ra-v (matita-arithmetics-nat.times rb-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-exp.exp p-v qb-v)))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times ra-v (matita-arithmetics-nat.times rb-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-exp.exp p-v qb-v)))) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times ra-v (matita-arithmetics-nat.times rb-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-exp.exp p-v qb-v))))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times ra-v rb-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-exp.exp p-v qb-v))) (matita-arithmetics-nat.associative-times ra-v rb-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-exp.exp p-v qb-v)))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-exp.exp p-v qb-v)) (matita-arithmetics-nat.times ra-v rb-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-exp.exp p-v qb-v)) (matita-arithmetics-nat.times ra-v rb-v))) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus qa-v qb-v)) (matita-arithmetics-exp.exp-plus-times p-v qa-v qb-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-nat.times rb-v (matita-arithmetics-exp.exp p-v qb-v))) (matita-arithmetics-nat.times-times (matita-arithmetics-exp.exp p-v qa-v) rb-v (matita-arithmetics-exp.exp p-v qb-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times ra-v (matita-arithmetics-exp.exp p-v qa-v)) (matita-arithmetics-nat.times rb-v (matita-arithmetics-exp.exp p-v qb-v))) (matita-arithmetics-nat.associative-times ra-v (matita-arithmetics-exp.exp p-v qa-v) (matita-arithmetics-nat.times rb-v (matita-arithmetics-exp.exp p-v qb-v)))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qb-v) rb-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v qb-v) rb-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v qa-v) ra-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v qa-v) ra-v)) b-v Hb-v) a-v Ha-v)) (p-ord-to-exp1 p-v b-v qb-v rb-v (matita-arithmetics-primes.prime-to-lt-SO p-v Hprime-v) posb-v pordb-v)) (p-ord-to-exp1 p-v a-v qa-v ra-v (matita-arithmetics-primes.prime-to-lt-SO p-v Hprime-v) posa-v porda-v)

fst-p-ord-times : (p-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-primes.prime p-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O a-v) -> (X--2-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O b-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord (matita-arithmetics-nat.times a-v b-v) p-v)) (matita-arithmetics-nat.plus (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord a-v p-v)) (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord b-v p-v)))
fst-p-ord-times = λ (p-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (primep-v : matita-arithmetics-primes.prime p-v) -> λ (posa-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O a-v) -> λ (posb-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O b-v) -> matita-basics-logic.eq-ind-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord a-v p-v)) (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord b-v p-v))) (matita-arithmetics-nat.times (matita-basics-types.snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord a-v p-v)) (matita-basics-types.snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord b-v p-v)))) (λ (x-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord a-v p-v)) (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord b-v p-v))) (matita-arithmetics-nat.times (matita-basics-types.snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord a-v p-v)) (matita-basics-types.snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord b-v p-v))))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-v) (matita-arithmetics-nat.plus (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord a-v p-v)) (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord b-v p-v)))) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord a-v p-v)) (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord b-v p-v)))) (p-ord (matita-arithmetics-nat.times a-v b-v) p-v) (p-ord-times p-v a-v b-v (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord a-v p-v)) (matita-basics-types.snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord a-v p-v)) (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord b-v p-v)) (matita-basics-types.snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord b-v p-v)) primep-v posa-v posb-v (matita-basics-logic.rewrite-l lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord a-v p-v) (λ (X---v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord a-v p-v) X---v) (matita-basics-logic.refl lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord a-v p-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord a-v p-v)) (matita-basics-types.snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord a-v p-v))) (matita-basics-types.eq-pair-fst-snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord a-v p-v))) (matita-basics-logic.rewrite-l lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord b-v p-v) (λ (X---v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord b-v p-v) X---v) (matita-basics-logic.refl lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord b-v p-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord b-v p-v)) (matita-basics-types.snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord b-v p-v))) (matita-basics-types.eq-pair-fst-snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord b-v p-v))))

p-ord-p : (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord p-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O))
p-ord-p = λ (p-v : matita-arithmetics-nat.nat) -> λ (ltp1-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> p-ord-exp1 p-v p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v ltp1-v) (matita-basics-logic.nmk lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (divp1-v : matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) ltp1-v (matita-arithmetics-nat.le-to-not-lt p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-primes.divides-to-le p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.lt-O-S matita-arithmetics-nat.O) divp1-v)))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat p-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat p-v (matita-arithmetics-nat.times X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus p-v (matita-arithmetics-nat.times p-v matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat p-v X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat p-v (matita-arithmetics-nat.plus p-v X---v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat p-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat p-v X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat p-v) (matita-arithmetics-nat.plus p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O p-v)) (matita-arithmetics-nat.times p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.times-n-O p-v)) (matita-arithmetics-nat.times p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-Sm p-v matita-arithmetics-nat.O)) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-exp.exp-n-1 p-v))

divides-to-p-ord : (p-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (b-v : matita-arithmetics-nat.nat) -> (c-v : matita-arithmetics-nat.nat) -> (d-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--2-v : matita-arithmetics-primes.prime p-v) -> (X--3-v : matita-arithmetics-primes.divides n-v m-v) -> (X--4-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord n-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat a-v b-v)) -> (X--5-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord m-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat c-v d-v)) -> matita-basics-logic.And lzero lzero (matita-arithmetics-primes.divides b-v d-v) (matita-arithmetics-nat.le a-v c-v)
divides-to-p-ord = λ (p-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (b-v : matita-arithmetics-nat.nat) -> λ (c-v : matita-arithmetics-nat.nat) -> λ (d-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (primep-v : matita-arithmetics-primes.prime p-v) -> λ (divnm-v : matita-arithmetics-primes.divides n-v m-v) -> λ (ordn-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord n-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat a-v b-v)) -> λ (ordm-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord m-v p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat c-v d-v)) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v b-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) b-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v b-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) b-v))) -> matita-basics-logic.And lzero lzero (matita-arithmetics-primes.divides b-v d-v) (matita-arithmetics-nat.le a-v c-v)) (λ (divn-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v b-v)) -> λ (eqn-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) b-v)) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v d-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v c-v) d-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v d-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v c-v) d-v))) -> matita-basics-logic.And lzero lzero (matita-arithmetics-primes.divides b-v d-v) (matita-arithmetics-nat.le a-v c-v)) (λ (divm-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v d-v)) -> λ (eqm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v c-v) d-v)) -> matita-basics-logic.conj lzero lzero (matita-arithmetics-primes.divides b-v d-v) (matita-arithmetics-nat.le a-v c-v) (matita-arithmetics-gcd.gcd-1-to-divides-times-to-divides b-v (matita-arithmetics-exp.exp p-v c-v) d-v (matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O b-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O b-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O b-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O b-v)) -> matita-arithmetics-nat.lt matita-arithmetics-nat.O b-v) (λ (auto-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O b-v) -> auto-v) (λ (auto-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O b-v) -> matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) (matita-arithmetics-nat.lt matita-arithmetics-nat.O b-v) posn-v (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt X---v n-v) (matita-arithmetics-nat.lt matita-arithmetics-nat.O b-v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v X---v) (matita-arithmetics-nat.lt matita-arithmetics-nat.O b-v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat b-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v b-v) (matita-arithmetics-nat.lt X---v b-v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt b-v b-v)) matita-arithmetics-nat.O auto-v) n-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times b-v (matita-arithmetics-exp.exp p-v a-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) eqn-v (matita-arithmetics-nat.times b-v (matita-arithmetics-exp.exp p-v a-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v a-v) b-v)) b-v (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat b-v (matita-arithmetics-nat.times X---v (matita-arithmetics-exp.exp p-v a-v))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-exp.exp p-v a-v))) (matita-arithmetics-nat.times-O-n (matita-arithmetics-exp.exp p-v a-v)) b-v auto-v) b-v auto-v))) matita-arithmetics-nat.O auto-v)) (matita-arithmetics-nat.le-to-or-lt-eq matita-arithmetics-nat.O b-v (matita-arithmetics-nat.le-O-n b-v))) (matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd b-v (matita-arithmetics-exp.exp p-v X-x-365-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) b-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-gcd.gcd (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) b-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-gcd.gcd (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) b-v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd X---v b-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-gcd.gcd-SO-n b-v) (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) (matita-arithmetics-exp.exp-n-O p-v))) (matita-arithmetics-gcd.gcd b-v (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O)) (matita-arithmetics-gcd.commutative-gcd b-v (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O))) (λ (c0-v : matita-arithmetics-nat.nat) -> λ (Hind-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd b-v (matita-arithmetics-exp.exp p-v c0-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-arithmetics-gcd.eq-gcd-times-1 b-v (matita-arithmetics-exp.exp p-v c0-v) p-v (matita-arithmetics-exp.lt-O-exp p-v c0-v (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v (matita-arithmetics-primes.prime-to-lt-SO p-v primep-v))) (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v (matita-arithmetics-primes.prime-to-lt-SO p-v primep-v)) Hind-v (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd p-v b-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-gcd.gcd p-v b-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-gcd.prime-to-gcd-1 p-v b-v primep-v divn-v) (matita-arithmetics-gcd.gcd b-v p-v) (matita-arithmetics-gcd.commutative-gcd b-v p-v))) c-v) (matita-arithmetics-primes.transitive-divides b-v n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v c-v) d-v) (matita-arithmetics-primes.quotient b-v n-v (matita-arithmetics-exp.exp p-v a-v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat n-v) (matita-arithmetics-nat.times b-v (matita-arithmetics-exp.exp p-v a-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) eqn-v (matita-arithmetics-nat.times b-v (matita-arithmetics-exp.exp p-v a-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v a-v) b-v)))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat m-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v x-1-v) -> matita-arithmetics-primes.divides n-v x-1-v) divnm-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v c-v) d-v) eqm-v))) (matita-arithmetics-exp.le-exp-to-le p-v a-v c-v (matita-arithmetics-primes.prime-to-lt-SO p-v primep-v) (matita-arithmetics-primes.divides-to-le (matita-arithmetics-exp.exp p-v a-v) (matita-arithmetics-exp.exp p-v c-v) (matita-arithmetics-exp.lt-O-exp p-v c-v (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v (matita-arithmetics-primes.prime-to-lt-SO p-v primep-v))) (matita-arithmetics-gcd.gcd-1-to-divides-times-to-divides (matita-arithmetics-exp.exp p-v a-v) d-v (matita-arithmetics-exp.exp p-v c-v) (matita-arithmetics-exp.lt-O-exp p-v a-v (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v (matita-arithmetics-primes.prime-to-lt-SO p-v primep-v))) (matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd (matita-arithmetics-exp.exp p-v X-x-365-v) d-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-gcd.gcd-SO-n d-v) (λ (a0-v : matita-arithmetics-nat.nat) -> λ (Hind-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd (matita-arithmetics-exp.exp p-v a0-v) d-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd d-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a0-v) p-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-gcd.gcd d-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a0-v) p-v))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-gcd.eq-gcd-times-1 d-v (matita-arithmetics-exp.exp p-v a0-v) p-v (matita-arithmetics-exp.lt-O-exp p-v a0-v (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v (matita-arithmetics-primes.prime-to-lt-SO p-v primep-v))) (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v (matita-arithmetics-primes.prime-to-lt-SO p-v primep-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd d-v (matita-arithmetics-exp.exp p-v a0-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd d-v (matita-arithmetics-exp.exp p-v a0-v)) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd d-v (matita-arithmetics-exp.exp p-v a0-v))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd (matita-arithmetics-exp.exp p-v a0-v) d-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) Hind-v (matita-arithmetics-gcd.gcd d-v (matita-arithmetics-exp.exp p-v a0-v)) (matita-arithmetics-gcd.commutative-gcd (matita-arithmetics-exp.exp p-v a0-v) d-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-gcd.gcd p-v d-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-gcd.gcd p-v d-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-gcd.prime-to-gcd-1 p-v d-v primep-v divm-v) (matita-arithmetics-gcd.gcd d-v p-v) (matita-arithmetics-gcd.commutative-gcd d-v p-v))) (matita-arithmetics-gcd.gcd (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a0-v) p-v) d-v) (matita-arithmetics-gcd.commutative-gcd (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a0-v) p-v) d-v)) a-v) (matita-arithmetics-primes.transitive-divides (matita-arithmetics-exp.exp p-v a-v) n-v (matita-arithmetics-nat.times d-v (matita-arithmetics-exp.exp p-v c-v)) (matita-arithmetics-primes.quotient (matita-arithmetics-exp.exp p-v a-v) n-v b-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times b-v (matita-arithmetics-exp.exp p-v a-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat n-v) (matita-arithmetics-nat.times b-v (matita-arithmetics-exp.exp p-v a-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) b-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) eqn-v (matita-arithmetics-nat.times b-v (matita-arithmetics-exp.exp p-v a-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v a-v) b-v))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) b-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v a-v) b-v))) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-primes.divides n-v m-v) (matita-arithmetics-primes.divides n-v (matita-arithmetics-nat.times d-v (matita-arithmetics-exp.exp p-v c-v))) divnm-v (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-primes.divides n-v m-v) (matita-arithmetics-primes.divides n-v X---v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-primes.divides n-v m-v)) (matita-arithmetics-nat.times d-v (matita-arithmetics-exp.exp p-v c-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v c-v) d-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v X---v) eqm-v (matita-arithmetics-nat.times d-v (matita-arithmetics-exp.exp p-v c-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v c-v) d-v))))))))) (p-ord-to-exp1 p-v m-v c-v d-v (matita-arithmetics-primes.prime-to-lt-SO p-v primep-v) posm-v ordm-v)) (p-ord-to-exp1 p-v n-v a-v b-v (matita-arithmetics-primes.prime-to-lt-SO p-v primep-v) posn-v ordn-v)

not-divides-to-p-ord-O : (n-v : matita-arithmetics-nat.nat) -> (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime i-v) n-v)) -> matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord n-v (matita-arithmetics-primes.nth-prime i-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v)
not-divides-to-p-ord-O = λ (n-v : matita-arithmetics-nat.nat) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime i-v) n-v)) -> p-ord-exp1 (matita-arithmetics-primes.nth-prime i-v) n-v matita-arithmetics-nat.O n-v (matita-arithmetics-primes.lt-O-nth-prime-n i-v) H-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime i-v) matita-arithmetics-nat.O) n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime i-v) matita-arithmetics-nat.O) n-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime i-v) matita-arithmetics-nat.O) n-v)) n-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus n-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime i-v) matita-arithmetics-nat.O) n-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O n-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus n-v X---v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime i-v) matita-arithmetics-nat.O) n-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus n-v (matita-arithmetics-nat.times matita-arithmetics-nat.O n-v)) (matita-arithmetics-nat.times X---v n-v)) (matita-arithmetics-nat.times-Sn-m matita-arithmetics-nat.O n-v) (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime i-v) matita-arithmetics-nat.O) (matita-arithmetics-exp.exp-n-O (matita-arithmetics-primes.nth-prime i-v))) matita-arithmetics-nat.O (matita-arithmetics-nat.times-O-n n-v)) n-v (matita-arithmetics-nat.plus-n-O n-v)))

p-ord-O-to-not-divides : (n-v : matita-arithmetics-nat.nat) -> (i-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord n-v (matita-arithmetics-primes.nth-prime i-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime i-v) n-v)
p-ord-O-to-not-divides = λ (n-v : matita-arithmetics-nat.nat) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (Hord-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord n-v (matita-arithmetics-primes.nth-prime i-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O r-v)) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime i-v) r-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime i-v) matita-arithmetics-nat.O) r-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime i-v) r-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime i-v) matita-arithmetics-nat.O) r-v))) -> matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime i-v) n-v)) (λ (H-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime i-v) r-v)) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat r-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v x-1-v) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v x-1-v) -> matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime i-v) n-v)) (λ (auto-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v r-v) -> matita-basics-logic.eq-coerc lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime i-v) r-v)) (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime i-v) n-v)) H-v (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime i-v) X---v)) (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime i-v) n-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime i-v) n-v))) r-v auto-v)) (matita-arithmetics-nat.plus r-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O r-v)) (p-ord-to-exp1 (matita-arithmetics-primes.nth-prime i-v) n-v matita-arithmetics-nat.O r-v (matita-arithmetics-primes.lt-SO-nth-prime-n i-v) posn-v Hord-v)

p-ord-to-not-eq-O : (n-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (r-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> (X--1-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord n-v (matita-arithmetics-primes.nth-prime p-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v matita-arithmetics-nat.O)
p-ord-to-not-eq-O = λ (n-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> λ (lt1n-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> λ (Hord-v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord n-v (matita-arithmetics-primes.nth-prime p-v)) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat q-v r-v)) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime p-v) r-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime p-v) q-v) r-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime p-v) r-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime p-v) q-v) r-v))) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v matita-arithmetics-nat.O)) (λ (H1-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides (matita-arithmetics-primes.nth-prime p-v) r-v)) -> λ (H2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime p-v) q-v) r-v)) -> matita-basics-logic.not-to-not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v matita-arithmetics-nat.O) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (eqr-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat r-v matita-arithmetics-nat.O) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime p-v) q-v) x-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (auto-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime p-v) q-v) matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v n-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat n-v) matita-arithmetics-nat.O (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime p-v) q-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime p-v) q-v) matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) auto-v (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime p-v) q-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime p-v) q-v) matita-arithmetics-nat.O)) matita-arithmetics-nat.O (matita-arithmetics-nat.times-O-n (matita-arithmetics-exp.exp (matita-arithmetics-primes.nth-prime p-v) q-v)))) r-v eqr-v H2-v) (matita-arithmetics-nat.lt-to-not-eq matita-arithmetics-nat.O n-v (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v lt1n-v))) (p-ord-to-exp1 (matita-arithmetics-primes.nth-prime p-v) n-v q-v r-v (matita-arithmetics-primes.lt-SO-nth-prime-n p-v) (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v lt1n-v) Hord-v)

ord : (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat
ord = λ (n-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord n-v p-v)

ord-rem : (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat
ord-rem = λ (n-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> matita-basics-types.snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord n-v p-v)

ord-eq : (n-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord n-v p-v) (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord n-v p-v))
ord-eq = λ (n-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> matita-basics-logic.refl lzero matita-arithmetics-nat.nat (ord n-v p-v)

ord-rem-eq : (n-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord-rem n-v p-v) (matita-basics-types.snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord n-v p-v))
ord-rem-eq = λ (n-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> matita-basics-logic.refl lzero matita-arithmetics-nat.nat (ord-rem n-v p-v)

divides-to-ord : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--2-v : matita-arithmetics-primes.prime p-v) -> (X--3-v : matita-arithmetics-primes.divides n-v m-v) -> matita-basics-logic.And lzero lzero (matita-arithmetics-primes.divides (ord-rem n-v p-v) (ord-rem m-v p-v)) (matita-arithmetics-nat.le (ord n-v p-v) (ord m-v p-v))
divides-to-ord = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (H1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (H2-v : matita-arithmetics-primes.prime p-v) -> λ (H3-v : matita-arithmetics-primes.divides n-v m-v) -> divides-to-p-ord p-v (ord n-v p-v) (ord-rem n-v p-v) (ord m-v p-v) (ord-rem m-v p-v) n-v m-v H-v H1-v H2-v H3-v (matita-basics-types.eq-pair-fst-snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord n-v p-v)) (matita-basics-types.eq-pair-fst-snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord m-v p-v))

divides-to-divides-ord-rem : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--2-v : matita-arithmetics-primes.prime p-v) -> (X--3-v : matita-arithmetics-primes.divides n-v m-v) -> matita-arithmetics-primes.divides (ord-rem n-v p-v) (ord-rem m-v p-v)
divides-to-divides-ord-rem = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (H1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (H2-v : matita-arithmetics-primes.prime p-v) -> λ (H3-v : matita-arithmetics-primes.divides n-v m-v) -> matita-basics-logic.match-And lzero lzero (matita-arithmetics-primes.divides (ord-rem n-v p-v) (ord-rem m-v p-v)) (matita-arithmetics-nat.le (ord n-v p-v) (ord m-v p-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-arithmetics-primes.divides (ord-rem n-v p-v) (ord-rem m-v p-v)) (matita-arithmetics-nat.le (ord n-v p-v) (ord m-v p-v))) -> matita-arithmetics-primes.divides (ord-rem n-v p-v) (ord-rem m-v p-v)) (λ (auto-v : matita-arithmetics-primes.divides (ord-rem n-v p-v) (ord-rem m-v p-v)) -> λ (auto'-v : matita-arithmetics-nat.le (ord n-v p-v) (ord m-v p-v)) -> auto-v) (divides-to-ord p-v n-v m-v H-v H1-v H2-v H3-v)

divides-to-le-ord : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--2-v : matita-arithmetics-primes.prime p-v) -> (X--3-v : matita-arithmetics-primes.divides n-v m-v) -> matita-arithmetics-nat.le (ord n-v p-v) (ord m-v p-v)
divides-to-le-ord = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (H1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (H2-v : matita-arithmetics-primes.prime p-v) -> λ (H3-v : matita-arithmetics-primes.divides n-v m-v) -> matita-basics-logic.match-And lzero lzero (matita-arithmetics-primes.divides (ord-rem n-v p-v) (ord-rem m-v p-v)) (matita-arithmetics-nat.le (ord n-v p-v) (ord m-v p-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-arithmetics-primes.divides (ord-rem n-v p-v) (ord-rem m-v p-v)) (matita-arithmetics-nat.le (ord n-v p-v) (ord m-v p-v))) -> matita-arithmetics-nat.le (ord n-v p-v) (ord m-v p-v)) (λ (auto-v : matita-arithmetics-primes.divides (ord-rem n-v p-v) (ord-rem m-v p-v)) -> λ (auto'-v : matita-arithmetics-nat.le (ord n-v p-v) (ord m-v p-v)) -> auto'-v) (divides-to-ord p-v n-v m-v H-v H1-v H2-v H3-v)

exp-ord : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord n-v p-v)) (ord-rem n-v p-v))
exp-ord = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> λ (H1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (ord-rem n-v p-v))) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord n-v p-v)) (ord-rem n-v p-v))) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (ord-rem n-v p-v))) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord n-v p-v)) (ord-rem n-v p-v)))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord n-v p-v)) (ord-rem n-v p-v))) (λ (auto-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (ord-rem n-v p-v))) -> λ (auto'-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord n-v p-v)) (ord-rem n-v p-v))) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (ord-rem n-v p-v) (matita-arithmetics-exp.exp p-v (ord n-v p-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat n-v) (matita-arithmetics-nat.times (ord-rem n-v p-v) (matita-arithmetics-exp.exp p-v (ord n-v p-v))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord n-v p-v)) (ord-rem n-v p-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) auto'-v (matita-arithmetics-nat.times (ord-rem n-v p-v) (matita-arithmetics-exp.exp p-v (ord n-v p-v))) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v (ord n-v p-v)) (ord-rem n-v p-v)))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord n-v p-v)) (ord-rem n-v p-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v (ord n-v p-v)) (ord-rem n-v p-v))) (p-ord-to-exp1 p-v n-v (ord n-v p-v) (ord-rem n-v p-v) H-v H1-v (matita-basics-types.eq-pair-fst-snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord n-v p-v)))

divides-ord-rem : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-arithmetics-primes.divides (ord-rem n-v p-v) n-v
divides-ord-rem = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> λ (H1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-arithmetics-primes.quotient (ord-rem n-v p-v) n-v (matita-arithmetics-exp.exp p-v (ord n-v p-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord n-v p-v)) (ord-rem n-v p-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord n-v p-v)) (ord-rem n-v p-v))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v x-v) (exp-ord p-v n-v H-v H1-v) (matita-arithmetics-nat.times (ord-rem n-v p-v) (matita-arithmetics-exp.exp p-v (ord n-v p-v))) (matita-arithmetics-nat.commutative-times (ord-rem n-v p-v) (matita-arithmetics-exp.exp p-v (ord n-v p-v))))

lt-O-ord-rem : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-arithmetics-nat.lt matita-arithmetics-nat.O (ord-rem n-v p-v)
lt-O-ord-rem = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> λ (H1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O (ord-rem n-v p-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (ord-rem n-v p-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O (ord-rem n-v p-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (ord-rem n-v p-v))) -> matita-arithmetics-nat.lt matita-arithmetics-nat.O (ord-rem n-v p-v)) (λ (auto-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O (ord-rem n-v p-v)) -> auto-v) (λ (remO-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (ord-rem n-v p-v)) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-1-v) -> (X---v : matita-arithmetics-primes.divides x-1-v n-v) -> matita-arithmetics-nat.lt matita-arithmetics-nat.O x-1-v) (λ (Hdiv0-v : matita-arithmetics-primes.divides matita-arithmetics-nat.O n-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.lt matita-arithmetics-nat.O matita-arithmetics-nat.O) (matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (matita-arithmetics-primes.match-divides matita-arithmetics-nat.O n-v lzero (λ (X---v : matita-arithmetics-primes.divides matita-arithmetics-nat.O n-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O n-v) (λ (q-v : matita-arithmetics-nat.nat) -> λ (auto-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v (matita-arithmetics-nat.times matita-arithmetics-nat.O q-v)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v n-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat n-v) matita-arithmetics-nat.O (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times q-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O q-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v X---v) auto-v (matita-arithmetics-nat.times q-v matita-arithmetics-nat.O) (matita-arithmetics-nat.commutative-times matita-arithmetics-nat.O q-v)) matita-arithmetics-nat.O (matita-arithmetics-nat.times-n-O q-v))) Hdiv0-v) (matita-arithmetics-nat.lt-to-not-eq matita-arithmetics-nat.O n-v H1-v))) (ord-rem n-v p-v) remO-v (divides-ord-rem p-v n-v H-v H1-v)) (matita-arithmetics-nat.le-to-or-lt-eq matita-arithmetics-nat.O (ord-rem n-v p-v) (matita-arithmetics-nat.le-O-n (ord-rem n-v p-v)))

ord-times : (p-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--2-v : matita-arithmetics-primes.prime p-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord (matita-arithmetics-nat.times m-v n-v) p-v) (matita-arithmetics-nat.plus (ord m-v p-v) (ord n-v p-v))
ord-times = λ (p-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (H1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (H2-v : matita-arithmetics-primes.prime p-v) -> matita-basics-logic.eq-f lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) matita-arithmetics-nat.nat (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (p-ord (matita-arithmetics-nat.times m-v n-v) p-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (ord m-v p-v) (ord n-v p-v)) (matita-arithmetics-nat.times (ord-rem m-v p-v) (ord-rem n-v p-v))) (p-ord-times p-v m-v n-v (ord m-v p-v) (ord-rem m-v p-v) (ord n-v p-v) (ord-rem n-v p-v) H2-v H-v H1-v (matita-basics-types.eq-pair-fst-snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord m-v p-v)) (matita-basics-types.eq-pair-fst-snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord n-v p-v)))

ord-exp : (p-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord (matita-arithmetics-exp.exp p-v m-v) p-v) m-v
ord-exp = λ (p-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord (matita-arithmetics-exp.exp p-v m-v) p-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord (matita-arithmetics-exp.exp p-v m-v) p-v))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v m-v) (matita-basics-logic.eq-ind-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-v) m-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat m-v) (p-ord (matita-arithmetics-exp.exp p-v m-v) p-v) (p-ord-exp1 p-v (matita-arithmetics-exp.exp p-v m-v) m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v H-v) (matita-basics-logic.not-to-not lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.le p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-primes.divides-to-le p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.lt-O-S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt-to-not-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v H-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-exp.exp p-v m-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v m-v) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp p-v m-v) X---v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-exp.exp p-v m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp p-v m-v) (matita-arithmetics-nat.plus (matita-arithmetics-exp.exp p-v m-v) X---v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp p-v m-v) (matita-arithmetics-nat.plus (matita-arithmetics-exp.exp p-v m-v) X---v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-exp.exp p-v m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp p-v m-v) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp p-v m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp p-v m-v) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp p-v m-v)) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-exp.exp p-v m-v)) (matita-arithmetics-nat.plus-O-n (matita-arithmetics-exp.exp p-v m-v))) (matita-arithmetics-nat.plus (matita-arithmetics-exp.exp p-v m-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-exp.exp p-v m-v) matita-arithmetics-nat.O)) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-exp.exp p-v m-v)) (matita-arithmetics-nat.times-O-n (matita-arithmetics-exp.exp p-v m-v))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v m-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v m-v) matita-arithmetics-nat.O)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-Sm (matita-arithmetics-exp.exp p-v m-v) matita-arithmetics-nat.O)))) (ord (matita-arithmetics-exp.exp p-v m-v) p-v) (ord-eq (matita-arithmetics-exp.exp p-v m-v) p-v)

not-divides-to-ord-O : (p-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-primes.prime p-v) -> (X--1-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v m-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord m-v p-v) matita-arithmetics-nat.O
not-divides-to-ord-O = λ (p-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-primes.prime p-v) -> λ (H1-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v m-v)) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord m-v p-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord m-v p-v))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O) (matita-basics-logic.eq-ind-r lzero lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O m-v) (λ (x-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero (matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) x-v (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat matita-arithmetics-nat.O m-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat x-v) matita-arithmetics-nat.O) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) (p-ord m-v p-v) (p-ord-exp1 p-v m-v matita-arithmetics-nat.O m-v (matita-arithmetics-primes.prime-to-lt-O p-v H-v) H1-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) m-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) m-v)) m-v (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) m-v)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus m-v X---v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) m-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.times matita-arithmetics-nat.O m-v)) (matita-arithmetics-nat.times X---v m-v)) (matita-arithmetics-nat.times-Sn-m matita-arithmetics-nat.O m-v) (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) (matita-arithmetics-exp.exp-n-O p-v)) matita-arithmetics-nat.O (matita-arithmetics-nat.times-O-n m-v)) m-v (matita-arithmetics-nat.plus-n-O m-v))))) (ord m-v p-v) (ord-eq m-v p-v)

ord-O-to-not-divides : (p-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--1-v : matita-arithmetics-primes.prime p-v) -> (X--2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord m-v p-v) matita-arithmetics-nat.O) -> matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v m-v)
ord-O-to-not-divides = λ (p-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (H1-v : matita-arithmetics-primes.prime p-v) -> λ (H2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord m-v p-v) matita-arithmetics-nat.O) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (ord-rem m-v p-v))) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v))) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (ord-rem m-v p-v))) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v)))) -> matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v m-v)) (λ (H3-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (ord-rem m-v p-v))) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v x-v) (ord-rem m-v p-v))) -> matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v m-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (ord-rem m-v p-v) (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (ord-rem m-v p-v) (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O))) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v x-v) -> matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v m-v)) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (ord-rem m-v p-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord-rem m-v p-v) x-1-v) -> (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v x-1-v) -> matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v m-v)) (λ (auto-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (ord-rem m-v p-v)) -> matita-basics-logic.eq-coerc lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (ord-rem m-v p-v))) (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v m-v)) H3-v (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v X---v)) (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v m-v))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v m-v))) (ord-rem m-v p-v) auto-v)) (matita-arithmetics-nat.times (ord-rem m-v p-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-1 (ord-rem m-v p-v))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) (ord-rem m-v p-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) (ord-rem m-v p-v))) (ord m-v p-v) H2-v) (p-ord-to-exp1 p-v m-v (ord m-v p-v) (ord-rem m-v p-v) (matita-arithmetics-primes.prime-to-lt-SO p-v H1-v) H-v (matita-basics-types.eq-pair-fst-snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord m-v p-v)))

divides-to-not-ord-O : (p-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--1-v : matita-arithmetics-primes.prime p-v) -> (X--2-v : matita-arithmetics-primes.divides p-v m-v) -> matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord m-v p-v) matita-arithmetics-nat.O)
divides-to-not-ord-O = λ (p-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (H1-v : matita-arithmetics-primes.prime p-v) -> λ (H2-v : matita-arithmetics-primes.divides p-v m-v) -> matita-basics-logic.nmk lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord m-v p-v) matita-arithmetics-nat.O) (λ (H3-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord m-v p-v) matita-arithmetics-nat.O) -> matita-basics-logic.absurd lzero (matita-arithmetics-primes.divides p-v m-v) H2-v (ord-O-to-not-divides p-v m-v H-v H1-v H3-v))

not-ord-O-to-divides : (p-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--1-v : matita-arithmetics-primes.prime p-v) -> (X--2-v : matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord m-v p-v) matita-arithmetics-nat.O)) -> matita-arithmetics-primes.divides p-v m-v
not-ord-O-to-divides = λ (p-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (H1-v : matita-arithmetics-primes.prime p-v) -> λ (H2-v : matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord m-v p-v) matita-arithmetics-nat.O)) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v))) -> matita-arithmetics-primes.divides p-v x-v) (matita-arithmetics-primes.transitive-divides p-v (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v)) (matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v matita-arithmetics-nat.O)) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-exp.exp p-v X---v)) (λ (X-clearme-v : matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O)) -> matita-basics-logic.match-Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) lzero (λ (X---v : matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O)) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O)) (λ (H3-v : (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O matita-arithmetics-nat.O) -> matita-basics-logic.False lzero) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O)) (H3-v (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O))) X-clearme-v) (λ (a-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.Not lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S a-v) matita-arithmetics-nat.O)) -> matita-arithmetics-primes.quotient p-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) p-v) (matita-arithmetics-exp.exp p-v a-v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times p-v (matita-arithmetics-exp.exp p-v a-v)) (λ (X--1-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X--1-v (matita-arithmetics-nat.times p-v (matita-arithmetics-exp.exp p-v a-v))) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times p-v (matita-arithmetics-exp.exp p-v a-v))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) p-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v a-v) p-v))) (ord m-v p-v) H2-v) (matita-arithmetics-primes.quotient (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v)) (ord-rem m-v p-v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (ord-rem m-v p-v) (matita-arithmetics-exp.exp p-v (ord m-v p-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v))) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (ord-rem m-v p-v) (matita-arithmetics-exp.exp p-v (ord m-v p-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (ord-rem m-v p-v) (matita-arithmetics-exp.exp p-v (ord m-v p-v))) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (ord-rem m-v p-v) (matita-arithmetics-exp.exp p-v (ord m-v p-v)))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v))))) m-v (exp-ord p-v m-v (matita-arithmetics-primes.prime-to-lt-SO p-v H1-v) H-v)

not-divides-ord-rem : (m-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--1-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (ord-rem m-v p-v))
not-divides-ord-rem = λ (m-v : matita-arithmetics-nat.nat) -> λ (p-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (H1-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-basics-logic.match-And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (ord-rem m-v p-v))) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v))) lzero (λ (X---v : matita-basics-logic.And lzero lzero (matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (ord-rem m-v p-v))) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v)))) -> matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (ord-rem m-v p-v))) (λ (H2-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (ord-rem m-v p-v))) -> λ (H3-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v))) -> H2-v) (p-ord-to-exp1 p-v m-v (ord m-v p-v) (ord-rem m-v p-v) H1-v H-v (matita-basics-types.eq-pair-fst-snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (p-ord m-v p-v)))

ord-ord-rem : (p-v : matita-arithmetics-nat.nat) -> (q-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--1-v : matita-arithmetics-primes.prime p-v) -> (X--2-v : matita-arithmetics-primes.prime q-v) -> (X--3-v : matita-arithmetics-nat.lt q-v p-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord (ord-rem m-v p-v) q-v) (ord m-v q-v)
ord-ord-rem = λ (p-v : matita-arithmetics-nat.nat) -> λ (q-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (H1-v : matita-arithmetics-primes.prime p-v) -> λ (H2-v : matita-arithmetics-primes.prime q-v) -> λ (H3-v : matita-arithmetics-nat.lt q-v p-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord (ord-rem m-v p-v) q-v) (ord x-v q-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (ord (matita-arithmetics-exp.exp p-v (ord m-v p-v)) q-v) (ord (ord-rem m-v p-v) q-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (ord (matita-arithmetics-exp.exp p-v (ord m-v p-v)) q-v) (ord (ord-rem m-v p-v) q-v))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord (ord-rem m-v p-v) q-v) x-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord (ord-rem m-v p-v) q-v) (matita-arithmetics-nat.plus x-v (ord (ord-rem m-v p-v) q-v))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (ord (ord-rem m-v p-v) q-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord (ord-rem m-v p-v) q-v) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (ord (ord-rem m-v p-v) q-v)) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (ord (ord-rem m-v p-v) q-v)) (matita-arithmetics-nat.plus-O-n (ord (ord-rem m-v p-v) q-v))) (ord (matita-arithmetics-exp.exp p-v (ord m-v p-v)) q-v) (not-divides-to-ord-O q-v (matita-arithmetics-exp.exp p-v (ord m-v p-v)) H2-v (matita-basics-logic.not-to-not lzero (matita-arithmetics-primes.divides q-v (matita-arithmetics-exp.exp p-v (ord m-v p-v))) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat q-v p-v) (matita-arithmetics-gcd.divides-exp-to-eq q-v p-v (ord m-v p-v) H2-v H1-v) (matita-arithmetics-nat.lt-to-not-eq q-v p-v H3-v)))) (ord (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v)) q-v) (ord-times q-v (matita-arithmetics-exp.exp p-v (ord m-v p-v)) (ord-rem m-v p-v) (matita-arithmetics-exp.lt-O-exp p-v (ord m-v p-v) (matita-arithmetics-primes.prime-to-lt-O p-v H1-v)) (lt-O-ord-rem p-v m-v (matita-arithmetics-primes.prime-to-lt-SO p-v H1-v) H-v) H2-v)) m-v (exp-ord p-v m-v (matita-arithmetics-primes.prime-to-lt-SO p-v H1-v) H-v)

lt-ord-rem : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-primes.prime n-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--2-v : matita-arithmetics-primes.divides n-v m-v) -> matita-arithmetics-nat.lt (ord-rem m-v n-v) m-v
lt-ord-rem = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (H-v : matita-arithmetics-primes.prime n-v) -> λ (H1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (H2-v : matita-arithmetics-primes.divides n-v m-v) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt (ord-rem m-v n-v) m-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord-rem m-v n-v) m-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (ord-rem m-v n-v) m-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord-rem m-v n-v) m-v)) -> matita-arithmetics-nat.lt (ord-rem m-v n-v) m-v) (λ (auto-v : matita-arithmetics-nat.lt (ord-rem m-v n-v) m-v) -> auto-v) (λ (Hm-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord-rem m-v n-v) m-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.lt (ord-rem m-v n-v) m-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (ord-rem m-v n-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (ord-rem m-v n-v) x-1-v) -> (X---v : matita-arithmetics-primes.divides n-v x-1-v) -> matita-basics-logic.False lzero) (λ (Habs-v : matita-arithmetics-primes.divides n-v (ord-rem m-v n-v)) -> matita-basics-logic.absurd lzero (matita-arithmetics-primes.divides n-v (ord-rem m-v n-v)) Habs-v (not-divides-ord-rem m-v n-v H1-v (matita-arithmetics-primes.prime-to-lt-SO n-v H-v))) m-v Hm-v H2-v)) (matita-arithmetics-nat.le-to-or-lt-eq (ord-rem m-v n-v) m-v (matita-arithmetics-primes.divides-to-le (ord-rem m-v n-v) m-v H1-v (divides-ord-rem n-v m-v (matita-arithmetics-primes.prime-to-lt-SO n-v H-v) H1-v)))

p-ord-inv : (X-p-v : matita-arithmetics-nat.nat) -> (X-m-v : matita-arithmetics-nat.nat) -> (X-x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat
p-ord-inv = λ (p-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X---v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) (λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus (matita-arithmetics-nat.times r-v m-v) q-v) (p-ord x-v p-v)

eq-p-ord-inv : (p-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (x-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (p-ord-inv p-v m-v x-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (ord-rem x-v p-v) m-v) (ord x-v p-v))
eq-p-ord-inv = λ (p-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X---v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X-0-v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) (λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus (matita-arithmetics-nat.times r-v m-v) q-v) X---v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (matita-basics-types.snd lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat X---v) m-v) (matita-basics-types.fst lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat X---v))) (λ (X-fst-v : matita-arithmetics-nat.nat) -> λ (X-snd-v : matita-arithmetics-nat.nat) -> matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-basics-types.match-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat lzero (λ (X---v : matita-basics-types.Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) (λ (q-v : matita-arithmetics-nat.nat) -> λ (r-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus (matita-arithmetics-nat.times r-v m-v) q-v) (matita-basics-types.mk-Prod lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat X-fst-v X-snd-v))) (p-ord-aux x-v x-v p-v)

div-p-ord-inv : (p-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (x-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (ord x-v p-v) m-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.div (p-ord-inv p-v m-v x-v) m-v) (ord-rem x-v p-v)
div-p-ord-inv = λ (p-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (ord-rem x-v p-v) m-v) (ord x-v p-v)) (λ (x0-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x0-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (ord-rem x-v p-v) m-v) (ord x-v p-v))) -> (X--1-v : matita-arithmetics-nat.lt (ord x-v p-v) m-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.div x0-v m-v) (ord-rem x-v p-v)) (matita-arithmetics-div-and-mod.div-plus-times m-v (ord-rem x-v p-v) (ord x-v p-v)) (p-ord-inv p-v m-v x-v) (eq-p-ord-inv p-v m-v x-v)

mod-p-ord-inv : (p-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (x-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (ord x-v p-v) m-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (p-ord-inv p-v m-v x-v) m-v) (ord x-v p-v)
mod-p-ord-inv = λ (p-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (x-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (ord-rem x-v p-v) m-v) (ord x-v p-v)) (λ (x0-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x0-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times (ord-rem x-v p-v) m-v) (ord x-v p-v))) -> (X--1-v : matita-arithmetics-nat.lt (ord x-v p-v) m-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod x0-v m-v) (ord x-v p-v)) (matita-arithmetics-div-and-mod.mod-plus-times m-v (ord-rem x-v p-v) (ord x-v p-v)) (p-ord-inv p-v m-v x-v) (eq-p-ord-inv p-v m-v x-v)


