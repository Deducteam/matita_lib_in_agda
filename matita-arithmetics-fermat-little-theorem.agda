
open import Agda.Primitive

import matita-arithmetics-sigma-pi
import matita-arithmetics-exp
import matita-arithmetics-bigops
import matita-basics-bool
import matita-arithmetics-gcd
import matita-arithmetics-factorial
import matita-arithmetics-primes
import matita-arithmetics-permutation
import matita-arithmetics-div-and-mod
import matita-basics-logic
import matita-arithmetics-congruence
import matita-arithmetics-nat
permut-S-mod : (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-permutation.permut (matita-arithmetics-congruence.S-mod (matita-arithmetics-nat.S n-v)) n-v
permut-S-mod = λ (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.conj lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le i-v n-v) -> matita-arithmetics-nat.le (matita-arithmetics-congruence.S-mod (matita-arithmetics-nat.S n-v) i-v) n-v) (matita-arithmetics-permutation.injn (matita-arithmetics-congruence.S-mod (matita-arithmetics-nat.S n-v)) n-v) (λ (i-v : matita-arithmetics-nat.nat) -> λ (lein-v : matita-arithmetics-nat.le i-v n-v) -> matita-arithmetics-nat.le-S-S-to-le (matita-arithmetics-congruence.S-mod (matita-arithmetics-nat.S n-v) i-v) n-v (matita-arithmetics-div-and-mod.lt-mod-m-m (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.lt-O-S n-v))) (λ (i-v : matita-arithmetics-nat.nat) -> λ (j-v : matita-arithmetics-nat.nat) -> λ (lein-v : matita-arithmetics-nat.le i-v n-v) -> λ (lejn-v : matita-arithmetics-nat.le j-v n-v) -> λ (Heq-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-congruence.S-mod (matita-arithmetics-nat.S n-v) i-v) (matita-arithmetics-congruence.S-mod (matita-arithmetics-nat.S n-v) j-v)) -> matita-arithmetics-nat.injective-S i-v j-v (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v)) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S x-1-v) (matita-arithmetics-nat.S j-v)) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v))) (matita-arithmetics-nat.S x-1-v)) (matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v n-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v n-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v))) (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)))) (λ (Hi-v : matita-arithmetics-nat.lt i-v n-v) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt j-v n-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat j-v n-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt j-v n-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat j-v n-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v))) (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)))) (λ (Hj-v : matita-arithmetics-nat.lt j-v n-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n-v)) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-1-v (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S j-v) (matita-arithmetics-nat.S n-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S j-v) (matita-arithmetics-nat.S n-v)) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n-v)) x-1-v) Heq-v (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v))) (matita-arithmetics-div-and-mod.mod-S j-v (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.lt-O-S n-v) (matita-arithmetics-nat.le-S-S (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v))) n-v (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat j-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v j-v) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) n-v) Hj-v (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)) (matita-arithmetics-div-and-mod.lt-to-eq-mod j-v (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.le-S (matita-arithmetics-nat.S j-v) n-v Hj-v)))))) (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v))) (matita-arithmetics-div-and-mod.mod-S i-v (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.lt-O-S n-v) (matita-arithmetics-nat.le-S-S (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v))) n-v (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat i-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v i-v) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) n-v) Hi-v (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v)) (matita-arithmetics-div-and-mod.lt-to-eq-mod i-v (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.le-S (matita-arithmetics-nat.S i-v) n-v Hi-v)))))) (λ (Hj-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat j-v n-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v))) (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)))) (matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v)))) (matita-basics-logic.sym-eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v))) matita-arithmetics-nat.O (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.S n-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.S n-v)) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v))) x-1-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat j-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat j-v x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v))) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S x-1-v) (matita-arithmetics-nat.S n-v))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n-v)) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-1-v (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S j-v) (matita-arithmetics-nat.S n-v))) Heq-v (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v))) (matita-arithmetics-div-and-mod.mod-S i-v (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.lt-O-S n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat i-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v i-v) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S n-v)) (matita-arithmetics-nat.le-S-S (matita-arithmetics-nat.S i-v) n-v Hi-v) (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v)) (matita-arithmetics-div-and-mod.lt-to-eq-mod i-v (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.le-S-S i-v n-v (matita-arithmetics-nat.lt-to-le i-v n-v Hi-v)))))) n-v Hj-v) matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod-n-n (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.lt-O-S n-v)))) (matita-arithmetics-nat.not-eq-O-S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v))))) (matita-arithmetics-nat.le-to-or-lt-eq j-v n-v lejn-v)) (λ (Hi-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v n-v) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt j-v n-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat j-v n-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt j-v n-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat j-v n-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v))) (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)))) (λ (Hj-v : matita-arithmetics-nat.lt j-v n-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod i-v (matita-arithmetics-nat.S n-v))) (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)))) (matita-basics-logic.absurd lzero (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.S n-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.S n-v)) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-1-v (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat i-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S x-1-v) (matita-arithmetics-nat.S n-v)) (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S j-v) (matita-arithmetics-nat.S n-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S j-v) (matita-arithmetics-nat.S n-v)) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.S i-v) (matita-arithmetics-nat.S n-v)) x-1-v) Heq-v (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v))) (matita-arithmetics-div-and-mod.mod-S j-v (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.lt-O-S n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat j-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v j-v) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S n-v)) (matita-arithmetics-nat.le-S-S (matita-arithmetics-nat.S j-v) n-v Hj-v) (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)) (matita-arithmetics-div-and-mod.lt-to-eq-mod j-v (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.le-S-S j-v n-v (matita-arithmetics-nat.lt-to-le j-v n-v Hj-v)))))) n-v Hi-v) matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod-n-n (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.lt-O-S n-v))) (matita-arithmetics-nat.not-eq-O-S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v))))) (λ (Hj-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat j-v n-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat n-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v n-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod x-v (matita-arithmetics-nat.S n-v))) (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod j-v (matita-arithmetics-nat.S n-v)))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat n-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v n-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod n-v (matita-arithmetics-nat.S n-v))) (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod x-v (matita-arithmetics-nat.S n-v)))) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod n-v (matita-arithmetics-nat.S n-v)))) j-v Hj-v) i-v Hi-v) (matita-arithmetics-nat.le-to-or-lt-eq j-v n-v lejn-v)) (matita-arithmetics-nat.le-to-or-lt-eq i-v n-v lein-v)) j-v (matita-arithmetics-div-and-mod.lt-to-eq-mod j-v (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.le-S-S j-v n-v lejn-v))) i-v (matita-arithmetics-div-and-mod.lt-to-eq-mod i-v (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.le-S-S i-v n-v lein-v))))

prime-to-not-divides-fact : (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-primes.prime p-v) -> (n-v : matita-arithmetics-nat.nat) -> (X--1-v : matita-arithmetics-nat.lt n-v p-v) -> matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-factorial.fact n-v))
prime-to-not-divides-fact = λ (p-v : matita-arithmetics-nat.nat) -> λ (primep-v : matita-arithmetics-primes.prime p-v) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt X-x-365-v p-v) -> matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-factorial.fact X-x-365-v))) (λ (X---v : matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-basics-logic.nmk lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (divp-v : matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.absurd lzero (matita-arithmetics-nat.le p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-primes.divides-to-le p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.lt-O-S matita-arithmetics-nat.O) divp-v) (matita-arithmetics-nat.lt-to-not-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v (matita-arithmetics-primes.prime-to-lt-SO p-v primep-v)))) (λ (n1-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (X---v : matita-arithmetics-nat.lt n1-v p-v) -> matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-factorial.fact n1-v))) -> λ (ltn1-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S n1-v) p-v) -> matita-basics-logic.nmk lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.times (matita-arithmetics-factorial.fact n1-v) (matita-arithmetics-nat.S n1-v))) (λ (Hdiv-v : matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.times (matita-arithmetics-factorial.fact n1-v) (matita-arithmetics-nat.S n1-v))) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-factorial.fact n1-v)) (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.S n1-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-factorial.fact n1-v)) (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.S n1-v))) -> matita-basics-logic.False lzero) (λ (Hdiv0-v : matita-arithmetics-primes.divides p-v (matita-arithmetics-factorial.fact n1-v)) -> matita-basics-logic.absurd lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-factorial.fact n1-v)) Hdiv0-v (Hind-v (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S n1-v) p-v ltn1-v))) (λ (Hdiv0-v : matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.S n1-v)) -> matita-basics-logic.absurd lzero (matita-arithmetics-nat.le p-v (matita-arithmetics-nat.S n1-v)) (matita-arithmetics-primes.divides-to-le p-v (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.lt-O-S n1-v) Hdiv0-v) (matita-arithmetics-nat.lt-to-not-le (matita-arithmetics-nat.S n1-v) p-v ltn1-v)) (matita-arithmetics-gcd.divides-times-to-divides p-v (matita-arithmetics-factorial.fact n1-v) (matita-arithmetics-nat.S n1-v) primep-v Hdiv-v))) n-v

permut-mod : (p-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-primes.prime p-v) -> (X--1-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v a-v)) -> matita-arithmetics-permutation.permut (λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v n-v) p-v) (matita-arithmetics-nat.pred p-v)
permut-mod = λ (p-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (primep-v : matita-arithmetics-primes.prime p-v) -> λ (ndiv-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v a-v)) -> matita-basics-logic.conj lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le i-v (matita-arithmetics-nat.pred p-v)) -> matita-arithmetics-nat.le (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-permutation.injn (λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v n-v) p-v) (matita-arithmetics-nat.pred p-v)) (λ (i-v : matita-arithmetics-nat.nat) -> λ (lei-v : matita-arithmetics-nat.le i-v (matita-arithmetics-nat.pred p-v)) -> matita-arithmetics-nat.le-S-S-to-le (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (matita-arithmetics-nat.pred p-v) (matita-arithmetics-nat.transitive-le (matita-arithmetics-nat.S (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) p-v (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-div-and-mod.lt-mod-m-m (matita-arithmetics-nat.times a-v i-v) p-v (matita-arithmetics-primes.prime-to-lt-O p-v primep-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat p-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v p-v) -> matita-arithmetics-nat.le p-v x-v) (matita-arithmetics-nat.le-n p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S-pred p-v (matita-arithmetics-primes.prime-to-lt-O p-v primep-v))))) (λ (i-v : matita-arithmetics-nat.nat) -> λ (j-v : matita-arithmetics-nat.nat) -> λ (lei-v : matita-arithmetics-nat.le i-v (matita-arithmetics-nat.pred p-v)) -> λ (lej-v : matita-arithmetics-nat.le j-v (matita-arithmetics-nat.pred p-v)) -> λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v j-v) p-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt i-v j-v) (matita-basics-logic.Not lzero (matita-arithmetics-nat.lt i-v j-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt i-v j-v) (matita-basics-logic.Not lzero (matita-arithmetics-nat.lt i-v j-v))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v j-v) (λ (ltij-v : matita-arithmetics-nat.lt i-v j-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v j-v) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.minus j-v i-v) p-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) x-1-v) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.minus j-v i-v) x-1-v) (matita-arithmetics-nat.le-S-S (matita-arithmetics-nat.minus j-v i-v) (matita-arithmetics-nat.pred p-v) (matita-arithmetics-nat.le-plus-to-minus j-v i-v (matita-arithmetics-nat.pred p-v) (matita-arithmetics-nat.transitive-le j-v (matita-arithmetics-nat.pred p-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.pred p-v) i-v) lej-v (matita-arithmetics-nat.le-plus-n-r i-v (matita-arithmetics-nat.pred p-v))))) p-v (matita-arithmetics-nat.S-pred p-v (matita-arithmetics-primes.prime-to-lt-O p-v primep-v))) (matita-arithmetics-nat.le-to-not-lt p-v (matita-arithmetics-nat.minus j-v i-v) (matita-arithmetics-primes.divides-to-le p-v (matita-arithmetics-nat.minus j-v i-v) (matita-arithmetics-nat.lt-plus-to-minus-r matita-arithmetics-nat.O i-v j-v ltij-v) (matita-basics-logic.match-Or lzero lzero (matita-arithmetics-primes.divides p-v a-v) (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus j-v i-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-primes.divides p-v a-v) (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus j-v i-v))) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus j-v i-v)) (λ (Hdiv-v : matita-arithmetics-primes.divides p-v a-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus j-v i-v)) (matita-basics-logic.absurd lzero (matita-arithmetics-primes.divides p-v a-v) Hdiv-v ndiv-v)) (λ (auto-v : matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus j-v i-v)) -> auto-v) (matita-arithmetics-gcd.divides-times-to-divides p-v a-v (matita-arithmetics-nat.minus j-v i-v) primep-v (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times a-v j-v) (matita-arithmetics-nat.times a-v i-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times a-v j-v) (matita-arithmetics-nat.times a-v i-v))) -> matita-arithmetics-primes.divides p-v x-v) (matita-arithmetics-primes.eq-mod-to-divides (matita-arithmetics-nat.times a-v j-v) (matita-arithmetics-nat.times a-v i-v) p-v (matita-arithmetics-primes.prime-to-lt-O p-v primep-v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v j-v) p-v) H-v)) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.minus j-v i-v)) (matita-arithmetics-nat.distributive-times-minus a-v j-v i-v)))))))) (λ (Hij-v : matita-basics-logic.Not lzero (matita-arithmetics-nat.lt i-v j-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt j-v i-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat j-v i-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt j-v i-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat j-v i-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v j-v) (λ (Hij0-v : matita-arithmetics-nat.lt j-v i-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v j-v) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.minus i-v j-v) p-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) x-1-v) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.minus i-v j-v) x-1-v) (matita-arithmetics-nat.le-S-S (matita-arithmetics-nat.minus i-v j-v) (matita-arithmetics-nat.pred p-v) (matita-arithmetics-nat.le-plus-to-minus i-v j-v (matita-arithmetics-nat.pred p-v) (matita-arithmetics-nat.transitive-le i-v (matita-arithmetics-nat.pred p-v) (matita-arithmetics-nat.plus (matita-arithmetics-nat.pred p-v) j-v) lei-v (matita-arithmetics-nat.le-plus-n-r j-v (matita-arithmetics-nat.pred p-v))))) p-v (matita-arithmetics-nat.S-pred p-v (matita-arithmetics-primes.prime-to-lt-O p-v primep-v))) (matita-arithmetics-nat.le-to-not-lt p-v (matita-arithmetics-nat.minus i-v j-v) (matita-arithmetics-primes.divides-to-le p-v (matita-arithmetics-nat.minus i-v j-v) (matita-arithmetics-nat.lt-plus-to-minus-r matita-arithmetics-nat.O j-v i-v Hij0-v) (matita-basics-logic.match-Or lzero lzero (matita-arithmetics-primes.divides p-v a-v) (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus i-v j-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-primes.divides p-v a-v) (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus i-v j-v))) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus i-v j-v)) (λ (Hdiv-v : matita-arithmetics-primes.divides p-v a-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus i-v j-v)) (matita-basics-logic.absurd lzero (matita-arithmetics-primes.divides p-v a-v) Hdiv-v ndiv-v)) (λ (auto-v : matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus i-v j-v)) -> auto-v) (matita-arithmetics-gcd.divides-times-to-divides p-v a-v (matita-arithmetics-nat.minus i-v j-v) primep-v (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times a-v i-v) (matita-arithmetics-nat.times a-v j-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times a-v i-v) (matita-arithmetics-nat.times a-v j-v))) -> matita-arithmetics-primes.divides p-v x-v) (matita-arithmetics-primes.eq-mod-to-divides (matita-arithmetics-nat.times a-v i-v) (matita-arithmetics-nat.times a-v j-v) p-v (matita-arithmetics-primes.prime-to-lt-O p-v primep-v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v j-v) p-v) H-v)) (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.minus i-v j-v)) (matita-arithmetics-nat.distributive-times-minus a-v i-v j-v)))))))) (λ (Hij0-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat j-v i-v) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat i-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat i-v X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat i-v) j-v Hij0-v) (matita-arithmetics-nat.le-to-or-lt-eq j-v i-v (matita-arithmetics-nat.not-lt-to-le i-v j-v Hij-v))) (matita-arithmetics-nat.decidable-lt i-v j-v))

eq-fact-pi-p : (n-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-factorial.fact n-v) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))
eq-fact-pi-p = λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-factorial.fact X-x-365-v) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S X-x-365-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-factorial.fact matita-arithmetics-nat.O)) (λ (n1-v : matita-arithmetics-nat.nat) -> λ (Hind-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-factorial.fact n1-v) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S n1-v) (matita-arithmetics-factorial.fact n1-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S n1-v) (matita-arithmetics-factorial.fact n1-v))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.S n1-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.plus n1-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-bigops.bigop n1-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.plus n1-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-bigops.bigop n1-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S n1-v) (matita-arithmetics-factorial.fact n1-v)) x-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.plus n1-v matita-arithmetics-nat.O)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.plus n1-v matita-arithmetics-nat.O)) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S n1-v) (matita-arithmetics-factorial.fact n1-v)) (matita-arithmetics-nat.times x-1-v (matita-arithmetics-bigops.bigop n1-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat n1-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n1-v x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S n1-v) (matita-arithmetics-factorial.fact n1-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.S x-1-v) (matita-arithmetics-bigops.bigop n1-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-basics-logic.eq-f lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S n1-v)) (matita-arithmetics-factorial.fact n1-v) (matita-arithmetics-bigops.bigop n1-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.S n1-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-factorial.fact n1-v) (matita-arithmetics-bigops.bigop x-1-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) Hind-v n1-v (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat n1-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v n1-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat n1-v) (matita-arithmetics-nat.minus n1-v matita-arithmetics-nat.O) (matita-arithmetics-nat.minus-n-O n1-v)))) (matita-arithmetics-nat.plus n1-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O n1-v)) (matita-arithmetics-nat.plus n1-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.plus-n-Sm n1-v matita-arithmetics-nat.O)) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.S n1-v) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-bigops.bigop-Strue n1-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true))) (matita-arithmetics-nat.times (matita-arithmetics-factorial.fact n1-v) (matita-arithmetics-nat.S n1-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-factorial.fact n1-v) (matita-arithmetics-nat.S n1-v))) n-v

congruent-pi : (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> matita-arithmetics-congruence.congruent (matita-arithmetics-bigops.bigop n-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> f-v i-v)) (matita-arithmetics-bigops.bigop n-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (f-v i-v) p-v)) p-v
congruent-pi = λ (f-v : (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> matita-arithmetics-congruence.congruent (matita-arithmetics-bigops.bigop X-x-365-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> f-v i-v)) (matita-arithmetics-bigops.bigop X-x-365-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (f-v i-v) p-v)) p-v) (λ (p-v : matita-arithmetics-nat.nat) -> λ (auto-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> matita-arithmetics-congruence.congruent-n-n (matita-arithmetics-bigops.bigop matita-arithmetics-nat.O (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> f-v i-v)) p-v) (λ (n1-v : matita-arithmetics-nat.nat) -> λ (Hind-v : (p-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> matita-arithmetics-congruence.congruent (matita-arithmetics-bigops.bigop n1-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> f-v i-v)) (matita-arithmetics-bigops.bigop n1-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (f-v i-v) p-v)) p-v) -> λ (p-v : matita-arithmetics-nat.nat) -> λ (posp-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O p-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (f-v n1-v) (matita-arithmetics-bigops.bigop n1-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> f-v i-v))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (f-v n1-v) (matita-arithmetics-bigops.bigop n1-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> f-v i-v)))) -> matita-arithmetics-congruence.congruent x-v (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.S n1-v) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (f-v i-v) p-v)) p-v) (matita-arithmetics-congruence.congruent-times (f-v n1-v) (matita-arithmetics-bigops.bigop n1-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> f-v i-v)) (matita-arithmetics-div-and-mod.mod (f-v n1-v) p-v) (matita-arithmetics-bigops.bigop n1-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (f-v i-v) p-v)) p-v posp-v (matita-arithmetics-congruence.congruent-n-mod-n (f-v n1-v) p-v posp-v) (Hind-v p-v posp-v)) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.S n1-v) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> f-v i-v)) (matita-arithmetics-bigops.bigop-Strue n1-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times f-v (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true))) n-v

congruent-exp-pred-SO : (p-v : matita-arithmetics-nat.nat) -> (a-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-primes.prime p-v) -> (X--1-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v a-v)) -> matita-arithmetics-congruence.congruent (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v
congruent-exp-pred-SO = λ (p-v : matita-arithmetics-nat.nat) -> λ (a-v : matita-arithmetics-nat.nat) -> λ (primep-v : matita-arithmetics-primes.prime p-v) -> λ (ndiv-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v a-v)) -> matita-arithmetics-congruence.divides-to-congruent (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v (matita-arithmetics-primes.prime-to-lt-O p-v primep-v) (matita-arithmetics-exp.lt-O-exp a-v (matita-arithmetics-nat.pred p-v) (matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> (X--1-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v X---v)) -> matita-arithmetics-nat.lt matita-arithmetics-nat.O X---v) (λ (X-clearme-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v matita-arithmetics-nat.O)) -> matita-basics-logic.match-Not lzero (matita-arithmetics-primes.divides p-v matita-arithmetics-nat.O) lzero (λ (X---v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v matita-arithmetics-nat.O)) -> matita-arithmetics-nat.lt matita-arithmetics-nat.O matita-arithmetics-nat.O) (λ (div0-v : (X---v : matita-arithmetics-primes.divides p-v matita-arithmetics-nat.O) -> matita-basics-logic.False lzero) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.lt matita-arithmetics-nat.O matita-arithmetics-nat.O) (div0-v (matita-arithmetics-primes.quotient p-v matita-arithmetics-nat.O matita-arithmetics-nat.O (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) (matita-arithmetics-nat.times p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.times-n-O p-v))))) X-clearme-v) (λ (auto-v : matita-arithmetics-nat.nat) -> λ (auto'-v : matita-basics-logic.Not lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.S auto-v))) -> matita-arithmetics-nat.lt-O-S auto-v) a-v ndiv-v)) (matita-basics-logic.match-Or lzero lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-primes.divides p-v (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v))) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-primes.divides p-v (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)))) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (auto-v : matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> auto-v) (λ (Hdiv-v : matita-arithmetics-primes.divides p-v (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v))) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-logic.absurd lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v))) Hdiv-v (prime-to-not-divides-fact p-v primep-v (matita-arithmetics-nat.pred p-v) (matita-arithmetics-nat.le-S-S-to-le (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) p-v (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat p-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v p-v) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.S p-v)) (matita-arithmetics-nat.le-n (matita-arithmetics-nat.S p-v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S-pred p-v (matita-arithmetics-primes.prime-to-lt-O p-v primep-v))))))) (matita-arithmetics-gcd.divides-times-to-divides p-v (matita-arithmetics-nat.minus (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) primep-v (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.minus (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.minus (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> matita-arithmetics-primes.divides p-v x-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v))) (matita-arithmetics-nat.times (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v))) (matita-arithmetics-nat.times (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> matita-arithmetics-primes.divides p-v x-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) x-1-v) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v))) x-1-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times x-v (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v))) x-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus x-v (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.times (matita-arithmetics-exp.exp a-v x-v) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.times a-v (matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.times a-v (matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) -> matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.minus x-v (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))) (matita-arithmetics-congruence.congruent-to-divides (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.times a-v (matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) p-v (matita-arithmetics-primes.prime-to-lt-O p-v primep-v) (matita-arithmetics-congruence.transitive-congruent p-v (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.times a-v (matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) p-v)) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (congruent-pi (λ (m-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.times a-v (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) p-v (matita-arithmetics-primes.prime-to-lt-O p-v primep-v)) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) x-1-v) -> matita-arithmetics-congruence.congruent x-1-v (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) p-v) (matita-arithmetics-congruence.congruent-n-n (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) p-v) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) p-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-bigops.op lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-sigma-pi.timesA) (λ (i-v : matita-arithmetics-nat.nat) -> i-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-bigops.op lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-sigma-pi.timesA) (λ (i-v : matita-arithmetics-nat.nat) -> i-v))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) p-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-bigops.op lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-sigma-pi.timesA) (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-bigops.op lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-sigma-pi.timesA) (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-bigops.op lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-sigma-pi.timesA) (λ (i-v : matita-arithmetics-nat.nat) -> i-v)) x-v) (matita-basics-logic.sym-eq lzero matita-arithmetics-nat.nat (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-bigops.op lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-sigma-pi.timesA) (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-bigops.op lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-sigma-pi.timesA) (λ (i-v : matita-arithmetics-nat.nat) -> i-v)) (matita-arithmetics-bigops.bigop-iso (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) matita-basics-bool.true) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-sigma-pi.timesAC (λ (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X---v) p-v) (λ (X---v : matita-arithmetics-nat.nat) -> X---v) (matita-basics-logic.ex-intro lzero lzero ((X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) (λ (h-v : (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) -> matita-basics-logic.ex lzero lzero ((X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) (λ (k-v : (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-bigops.upto matita-arithmetics-nat.nat (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X-0-v) p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)))) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (matita-arithmetics-bigops.filter matita-arithmetics-nat.nat (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X-0-v) p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)) i-v) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-bigops.enum matita-arithmetics-nat.nat (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X-0-v) p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)) i-v) (matita-arithmetics-bigops.enum matita-arithmetics-nat.nat (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> X-0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)) (h-v i-v))) (matita-arithmetics-bigops.sub-hk h-v k-v matita-arithmetics-nat.nat (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X-0-v) p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)) (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> X-0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)))) (matita-arithmetics-bigops.sub-hk k-v h-v matita-arithmetics-nat.nat (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> X-0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)) (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X-0-v) p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true))))) (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (matita-basics-logic.ex-intro lzero lzero ((X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) (λ (k-v : (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v))) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (matita-arithmetics-bigops.sub-hk (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) k-v matita-arithmetics-nat.nat (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X-0-v) p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)) (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> X-0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)))) (matita-arithmetics-bigops.sub-hk k-v (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) matita-arithmetics-nat.nat (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> X-0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)) (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X-0-v) p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)))) (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (matita-basics-logic.conj lzero lzero (matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v))) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (matita-arithmetics-bigops.sub-hk (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) matita-arithmetics-nat.nat (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X-0-v) p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)) (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> X-0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)))) (matita-arithmetics-bigops.sub-hk (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) matita-arithmetics-nat.nat (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> X-0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)) (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X-0-v) p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true))) (matita-basics-logic.conj lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v))) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true) matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (matita-arithmetics-bigops.sub-hk (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) matita-arithmetics-nat.nat (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X-0-v) p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)) (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> X-0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true))) (λ (i-v : matita-arithmetics-nat.nat) -> λ (lti-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v))) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true) matita-basics-bool.true) -> matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (λ (i-v : matita-arithmetics-nat.nat) -> λ (lti-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v))) -> λ (posi-v : matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true) matita-basics-bool.true) -> matita-basics-logic.conj lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) matita-basics-bool.true) matita-basics-bool.true)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) i-v) (matita-basics-logic.conj lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) matita-basics-bool.true) matita-basics-bool.true) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat p-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v p-v) -> matita-arithmetics-nat.lt (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) x-v) (matita-arithmetics-div-and-mod.lt-mod-m-m (matita-arithmetics-nat.times a-v i-v) p-v (matita-arithmetics-primes.prime-to-lt-O p-v primep-v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S-pred p-v (matita-arithmetics-primes.prime-to-lt-O p-v primep-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb x-v matita-basics-bool.true) matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool (matita-basics-bool.andb matita-basics-bool.true matita-basics-bool.true)) (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (matita-arithmetics-nat.le-to-leb-true (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v))) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (λ (auto-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) -> auto-v) (λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (matita-basics-logic.absurd lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.times a-v i-v)) (matita-arithmetics-primes.mod-O-to-divides p-v (matita-arithmetics-nat.times a-v i-v) (matita-arithmetics-primes.prime-to-lt-O p-v primep-v) (matita-basics-logic.sym-eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) H-v)) (matita-basics-logic.not-to-not lzero (matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.times a-v i-v)) (matita-arithmetics-primes.divides p-v a-v) (λ (Hdiv-v : matita-arithmetics-primes.divides p-v (matita-arithmetics-nat.times a-v i-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-primes.divides p-v a-v) (matita-arithmetics-primes.divides p-v i-v) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-primes.divides p-v a-v) (matita-arithmetics-primes.divides p-v i-v)) -> matita-arithmetics-primes.divides p-v a-v) (λ (auto-v : matita-arithmetics-primes.divides p-v a-v) -> auto-v) (λ (divpi-v : matita-arithmetics-primes.divides p-v i-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-primes.divides p-v a-v) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v))) lti-v (matita-arithmetics-nat.le-to-not-lt (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) i-v (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat p-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v p-v) -> matita-arithmetics-nat.le x-v i-v) (matita-arithmetics-primes.divides-to-le p-v i-v (matita-arithmetics-nat.leb-true-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v (matita-basics-bool.andb-true-l (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true posi-v)) divpi-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S-pred p-v (matita-arithmetics-primes.prime-to-lt-O p-v primep-v)))))) (matita-arithmetics-gcd.divides-times-to-divides p-v a-v i-v primep-v Hdiv-v)) ndiv-v))) (matita-arithmetics-nat.le-to-or-lt-eq matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) (matita-arithmetics-nat.le-O-n (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v))))))) (matita-arithmetics-permutation.invert-permut-f (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) (matita-arithmetics-nat.pred p-v) i-v (matita-arithmetics-nat.le-S-S-to-le i-v (matita-arithmetics-nat.pred p-v) lti-v) (matita-basics-logic.match-And lzero lzero ((i1-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le i1-v (matita-arithmetics-nat.pred p-v)) -> matita-arithmetics-nat.le (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i1-v) p-v) (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-permutation.injn (λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v n-v) p-v) (matita-arithmetics-nat.pred p-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero ((i0-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le i0-v (matita-arithmetics-nat.pred p-v)) -> matita-arithmetics-nat.le (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-permutation.injn (λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v n-v) p-v) (matita-arithmetics-nat.pred p-v))) -> matita-arithmetics-permutation.injn (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) (matita-arithmetics-nat.pred p-v)) (λ (auto-v : (i0-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le i0-v (matita-arithmetics-nat.pred p-v)) -> matita-arithmetics-nat.le (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) (matita-arithmetics-nat.pred p-v)) -> λ (auto'-v : matita-arithmetics-permutation.injn (λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v n-v) p-v) (matita-arithmetics-nat.pred p-v)) -> auto'-v) (permut-mod p-v a-v primep-v ndiv-v))))) (matita-basics-logic.match-And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le i-v (matita-arithmetics-nat.pred p-v)) -> matita-arithmetics-nat.le (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v n-v) p-v) i-v) (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-permutation.injn (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v n-v) p-v)) (matita-arithmetics-nat.pred p-v)) lzero (λ (X---v : matita-basics-logic.And lzero lzero ((i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le i-v (matita-arithmetics-nat.pred p-v)) -> matita-arithmetics-nat.le (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v n-v) p-v) i-v) (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-permutation.injn (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v n-v) p-v)) (matita-arithmetics-nat.pred p-v))) -> matita-arithmetics-bigops.sub-hk (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i-v) p-v) matita-arithmetics-nat.nat (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> X-0-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true)) (matita-arithmetics-bigops.mk-range matita-arithmetics-nat.nat (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X-0-v) p-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X-0-v : matita-arithmetics-nat.nat) -> matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) X-0-v) matita-basics-bool.true))) (λ (le-invert-permut-v : (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.le i-v (matita-arithmetics-nat.pred p-v)) -> matita-arithmetics-nat.le (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v n-v) p-v) i-v) (matita-arithmetics-nat.pred p-v)) -> λ (inj-inv-permut-v : matita-arithmetics-permutation.injn (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v n-v) p-v)) (matita-arithmetics-nat.pred p-v)) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (lti-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v))) -> λ (posi-v : matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) i-v) matita-basics-bool.true) matita-basics-bool.true) -> matita-basics-logic.conj lzero lzero (matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v)) matita-basics-bool.true) matita-basics-bool.true)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v)) p-v) i-v) (matita-basics-logic.conj lzero lzero (matita-arithmetics-nat.lt (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v))) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v)) matita-basics-bool.true) matita-basics-bool.true) (matita-arithmetics-nat.le-S-S (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v) (matita-arithmetics-nat.pred p-v) (le-invert-permut-v i-v (matita-arithmetics-nat.le-S-S-to-le i-v (matita-arithmetics-nat.pred p-v) lti-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb x-v matita-basics-bool.true) matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool (matita-basics-bool.andb matita-basics-bool.true matita-basics-bool.true)) (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v)) (matita-arithmetics-nat.le-to-leb-true (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v) (matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v))) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v)) (λ (auto-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v)) -> auto-v) (λ (H-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v)) p-v)) -> matita-basics-logic.False lzero) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat i-v (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v i-v) -> (X--1-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-v) -> matita-basics-logic.False lzero) (λ (eq0i-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O i-v) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-1-v) -> (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (matita-basics-bool.andb (matita-arithmetics-nat.leb (matita-arithmetics-nat.S matita-arithmetics-nat.O) x-1-v) matita-basics-bool.true) matita-basics-bool.true) -> matita-basics-logic.False lzero) (λ (H0-v : matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.false matita-basics-bool.true) -> matita-basics-bool.bool-discr lzero matita-basics-bool.false matita-basics-bool.true H0-v (matita-basics-logic.False lzero)) i-v eq0i-v posi-v) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v)) p-v) (matita-arithmetics-permutation.f-invert-permut (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) (matita-arithmetics-nat.pred p-v) i-v (matita-arithmetics-nat.le-S-S-to-le i-v (matita-arithmetics-nat.pred p-v) lti-v) (permut-mod p-v a-v primep-v ndiv-v))) (matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v matita-arithmetics-nat.O) p-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-1-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-div-and-mod.mod x-1-v p-v) matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v matita-arithmetics-nat.O) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) (matita-arithmetics-div-and-mod.mod matita-arithmetics-nat.O p-v) (matita-arithmetics-div-and-mod.mod-O-n p-v)) (matita-arithmetics-nat.times a-v matita-arithmetics-nat.O) (matita-arithmetics-nat.times-n-O a-v)) (matita-basics-logic.eq-f lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.nat (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) matita-arithmetics-nat.O (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v) H-v)))) (matita-arithmetics-nat.le-to-or-lt-eq matita-arithmetics-nat.O (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v) (matita-arithmetics-nat.le-O-n (matita-arithmetics-permutation.invert-permut (matita-arithmetics-nat.pred p-v) (λ (i0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v i0-v) p-v) i-v))))))) (matita-arithmetics-permutation.f-invert-permut (λ (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X---v) p-v) (matita-arithmetics-nat.pred p-v) i-v (matita-arithmetics-nat.le-S-S-to-le i-v (matita-arithmetics-nat.pred p-v) lti-v) (permut-mod p-v a-v primep-v ndiv-v))) (matita-arithmetics-permutation.permut-invert-permut (λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v n-v) p-v) (matita-arithmetics-nat.pred p-v) (permut-mod p-v a-v primep-v ndiv-v)))))))) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-bigops.op lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-sigma-pi.timesA) (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v (matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) p-v)) (matita-arithmetics-bigops.bigop-I-gen (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-sigma-pi.timesA (λ (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-div-and-mod.mod (matita-arithmetics-nat.times a-v X---v) p-v) (matita-arithmetics-nat.lt-O-S (matita-arithmetics-nat.pred p-v)))) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-bigops.op lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-sigma-pi.timesA) (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-bigops.bigop-I-gen (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-sigma-pi.timesA (λ (X---v : matita-arithmetics-nat.nat) -> X---v) (matita-arithmetics-nat.lt-O-S (matita-arithmetics-nat.pred p-v))))))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (matita-arithmetics-sigma-pi.exp-pi-bc a-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (λ (X---v : matita-arithmetics-nat.nat) -> X---v))) (matita-arithmetics-nat.pred p-v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.minus (matita-arithmetics-nat.pred p-v) matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.pred p-v) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.pred p-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.pred p-v) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.pred p-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.minus-n-O (matita-arithmetics-nat.pred p-v))) (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.minus-S-S (matita-arithmetics-nat.pred p-v) matita-arithmetics-nat.O))) (matita-arithmetics-nat.times (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v))) (matita-arithmetics-nat.commutative-times (matita-arithmetics-bigops.bigop (matita-arithmetics-nat.minus (matita-arithmetics-nat.S (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-bool.true) matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) matita-arithmetics-nat.times (λ (i-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.plus i-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)))) (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) (eq-fact-pi-p (matita-arithmetics-nat.pred p-v))) (matita-arithmetics-nat.times (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)))) (matita-arithmetics-nat.times (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.minus (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.distributive-times-minus (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.times (matita-arithmetics-nat.minus (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v))) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.minus (matita-arithmetics-exp.exp a-v (matita-arithmetics-nat.pred p-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-factorial.fact (matita-arithmetics-nat.pred p-v))))))

