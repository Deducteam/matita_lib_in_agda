
open import Agda.Primitive

import matita-arithmetics-div-and-mod
import matita-basics-bool
import matita-basics-logic
import matita-arithmetics-minimization
import matita-arithmetics-exp
import matita-arithmetics-nat
log : (X-p-v : matita-arithmetics-nat.nat) -> (X-n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.nat
log = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> matita-arithmetics-minimization.max n-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v)

tech-log : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v n-v) (matita-arithmetics-minimization.max (matita-arithmetics-nat.S n-v) (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v))
tech-log = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.false (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.false) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v n-v) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) n-v (matita-arithmetics-minimization.max' n-v (λ (x0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x0-v) n-v) matita-arithmetics-nat.O) x-v)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (log p-v n-v)) (matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v n-v) n-v) (matita-arithmetics-nat.not-le-to-leb-false (matita-arithmetics-exp.exp p-v n-v) n-v (matita-arithmetics-nat.lt-to-not-le n-v (matita-arithmetics-exp.exp p-v n-v) (matita-arithmetics-exp.lt-m-exp-nm p-v n-v lt1p-v)))

le-exp-log : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-arithmetics-nat.le (matita-arithmetics-exp.exp p-v (log p-v n-v)) n-v
le-exp-log = λ (a-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-arithmetics-nat.leb-true-to-le (matita-arithmetics-exp.exp a-v (log a-v n-v)) n-v (matita-arithmetics-minimization.f-max-true (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp a-v x-v) n-v) n-v (matita-basics-logic.ex-intro lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-arithmetics-nat.leb (matita-arithmetics-exp.exp a-v i-v) n-v) matita-basics-bool.true)) matita-arithmetics-nat.O (matita-basics-logic.conj lzero lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-arithmetics-nat.leb (matita-arithmetics-exp.exp a-v matita-arithmetics-nat.O) n-v) matita-basics-bool.true) posn-v (matita-arithmetics-nat.le-to-leb-true (matita-arithmetics-exp.exp a-v matita-arithmetics-nat.O) n-v posn-v))))

log-SO : (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) matita-arithmetics-nat.O
log-SO = λ (n-v : matita-arithmetics-nat.nat) -> λ (lt1n-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> matita-basics-logic.sym-eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (log n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.le-n-O-to-eq (log n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-exp.le-exp-to-le n-v (log n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) matita-arithmetics-nat.O lt1n-v (matita-arithmetics-nat.le-n (matita-arithmetics-exp.exp n-v (log n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))))))

lt-to-log-O : (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--1-v : matita-arithmetics-nat.lt m-v n-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log n-v m-v) matita-arithmetics-nat.O
lt-to-log-O = λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (ltnm-v : matita-arithmetics-nat.lt m-v n-v) -> matita-basics-logic.sym-eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (log n-v m-v) (matita-arithmetics-nat.le-n-O-to-eq (log n-v m-v) (matita-arithmetics-nat.le-S-S-to-le (log n-v m-v) matita-arithmetics-nat.O (matita-arithmetics-exp.lt-exp-to-lt n-v (log n-v m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.le-to-lt-to-lt matita-arithmetics-nat.O m-v n-v (matita-arithmetics-nat.le-O-n m-v) ltnm-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat n-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat n-v x-1-v) -> matita-arithmetics-nat.lt (matita-arithmetics-exp.exp n-v (log n-v m-v)) x-1-v) (matita-arithmetics-nat.le-to-lt-to-lt (matita-arithmetics-exp.exp n-v (log n-v m-v)) m-v n-v (le-exp-log n-v m-v posm-v) ltnm-v) (matita-arithmetics-nat.plus n-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O n-v)))))

lt-log-n-n : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-arithmetics-nat.lt (log p-v n-v) n-v
lt-log-n-n = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-basics-logic.Or-ind lzero lzero lzero (matita-arithmetics-nat.lt (log p-v n-v) n-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v n-v) n-v) (λ (X-x-170-v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (log p-v n-v) n-v) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v n-v) n-v)) -> matita-arithmetics-nat.lt (log p-v n-v) n-v) (λ (X-x-171-v : matita-arithmetics-nat.lt (log p-v n-v) n-v) -> X-x-171-v) (λ (Hn-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v n-v) n-v) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-arithmetics-nat.lt (log p-v n-v) n-v) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.le (matita-arithmetics-exp.exp p-v n-v) n-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (log p-v n-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v n-v) x-1-v) -> matita-arithmetics-nat.le (matita-arithmetics-exp.exp p-v x-1-v) n-v) (le-exp-log p-v n-v posn-v) n-v Hn-v) (matita-arithmetics-nat.lt-to-not-le n-v (matita-arithmetics-exp.exp p-v n-v) (matita-arithmetics-exp.lt-m-exp-nm p-v n-v lt1p-v)))) (matita-arithmetics-nat.le-to-or-lt-eq (log p-v n-v) n-v (matita-arithmetics-minimization.le-max-n (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v) n-v))

lt-O-log : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> (X--1-v : matita-arithmetics-nat.le p-v n-v) -> matita-arithmetics-nat.lt matita-arithmetics-nat.O (log p-v n-v)
lt-O-log = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> λ (lepn-v : matita-arithmetics-nat.le p-v n-v) -> matita-arithmetics-nat.not-lt-to-le (matita-arithmetics-minimization.max' n-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-basics-logic.nmk lzero (matita-arithmetics-nat.lt (matita-arithmetics-minimization.max' n-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (H-v : matita-arithmetics-nat.lt (matita-arithmetics-minimization.max' n-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat p-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat p-v x-1-v) -> (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool (matita-arithmetics-nat.leb x-1-v n-v) matita-basics-bool.false) -> matita-basics-logic.False lzero) (matita-basics-logic.eq-ind-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (x-v : matita-basics-bool.bool) -> λ (X---v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.true) -> (X--1-v : matita-basics-logic.eq lzero matita-basics-bool.bool x-v matita-basics-bool.false) -> matita-basics-logic.False lzero) (λ (H0-v : matita-basics-logic.eq lzero matita-basics-bool.bool matita-basics-bool.true matita-basics-bool.false) -> matita-basics-bool.bool-discr lzero matita-basics-bool.true matita-basics-bool.false H0-v (matita-basics-logic.False lzero)) (matita-arithmetics-nat.leb p-v n-v) (matita-arithmetics-nat.le-to-leb-true p-v n-v lepn-v)) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-exp.exp-n-1 p-v) (matita-arithmetics-minimization.lt-max-to-false (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v) n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) lt1p-v H-v)))

le-log-n-n : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-arithmetics-nat.le (log p-v n-v) n-v
le-log-n-n = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (log p-v X---v) X---v) (matita-arithmetics-nat.le-n (log p-v matita-arithmetics-nat.O)) (λ (m-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.lt-to-le (log p-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.S m-v) (lt-log-n-n p-v (matita-arithmetics-nat.S m-v) lt1p-v (matita-arithmetics-nat.lt-O-S m-v))) n-v

let-clause-1033 : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> (m-v : matita-arithmetics-nat.nat) -> (x2515-v : matita-arithmetics-nat.nat) -> (x2516-v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x2515-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.times x2516-v (matita-arithmetics-div-and-mod.div x2515-v x2516-v)) (matita-arithmetics-div-and-mod.mod x2515-v x2516-v))
let-clause-1033 = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (x2515-v : matita-arithmetics-nat.nat) -> λ (x2516-v : matita-arithmetics-nat.nat) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div x2515-v x2516-v) x2516-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x2515-v (matita-arithmetics-nat.plus X---v (matita-arithmetics-div-and-mod.mod x2515-v x2516-v))) (matita-arithmetics-div-and-mod.div-mod x2515-v x2516-v) (matita-arithmetics-nat.times x2516-v (matita-arithmetics-div-and-mod.div x2515-v x2516-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-div-and-mod.div x2515-v x2516-v) x2516-v)

lt-exp-log : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-arithmetics-nat.lt n-v (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v n-v)))
lt-exp-log = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.lt X---v (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v X---v)))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat p-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat p-v x-1-v) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) x-1-v) (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v lt1p-v) (matita-arithmetics-nat.plus p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O p-v)) (λ (m-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.not-le-to-lt (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v (matita-arithmetics-nat.S m-v)))) (matita-arithmetics-nat.S m-v) (matita-arithmetics-nat.leb-false-to-not-le (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v (matita-arithmetics-nat.S m-v)))) (matita-arithmetics-nat.S m-v) (matita-arithmetics-minimization.lt-max-to-false (λ (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v X---v) (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.S (log p-v (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.le-S-S (matita-arithmetics-nat.S (log p-v (matita-arithmetics-nat.S m-v))) (matita-arithmetics-nat.S m-v) (lt-log-n-n p-v (matita-arithmetics-nat.S m-v) lt1p-v (matita-arithmetics-nat.lt-O-S m-v))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (log p-v (matita-arithmetics-nat.S m-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v (matita-arithmetics-nat.S m-v)) x-1-v) -> matita-arithmetics-nat.lt x-1-v (matita-arithmetics-nat.S (log p-v (matita-arithmetics-nat.S m-v)))) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.lt (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O))) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt (log p-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.S (log p-v (matita-arithmetics-nat.S m-v)))) (matita-arithmetics-nat.lt-plus-Sn-r (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O)) matita-arithmetics-nat.O) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (log p-v (matita-arithmetics-nat.S m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus X---v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt (log p-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.S (log p-v (matita-arithmetics-nat.S m-v))))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (log p-v (matita-arithmetics-nat.S m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt X---v (matita-arithmetics-nat.plus (log p-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.lt (log p-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.S (log p-v (matita-arithmetics-nat.S m-v))))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.S (log p-v (matita-arithmetics-nat.S m-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (log p-v (matita-arithmetics-nat.S m-v)) X---v) (matita-arithmetics-nat.lt (log p-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.S (log p-v (matita-arithmetics-nat.S m-v))))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.lt (log p-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.S (log p-v (matita-arithmetics-nat.S m-v))))) (matita-arithmetics-nat.plus (log p-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X---v) (matita-arithmetics-nat.plus (log p-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus-n-Sm (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) (log p-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.plus-n-O (log p-v (matita-arithmetics-nat.S m-v))))) (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v (matita-arithmetics-nat.S m-v)) X---v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v (matita-arithmetics-nat.S m-v)) X---v) (matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v (matita-arithmetics-nat.S m-v)) (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) X---v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v (matita-arithmetics-nat.S m-v)) X---v) (let-clause-1033 p-v n-v lt1p-v m-v (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O))) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O))) matita-arithmetics-nat.O (matita-arithmetics-nat.times-O-n (matita-arithmetics-div-and-mod.div (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O)) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-O-n (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O)))) (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v (matita-arithmetics-nat.S m-v)) X---v) (let-clause-1033 p-v n-v lt1p-v m-v (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O))) (matita-arithmetics-nat.commutative-plus (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-div-and-mod.div (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O)) (matita-arithmetics-div-and-mod.mod (log p-v (matita-arithmetics-nat.S m-v)) matita-arithmetics-nat.O))))) (matita-arithmetics-minimization.max (matita-arithmetics-nat.S (matita-arithmetics-nat.S m-v)) (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) (matita-arithmetics-nat.S m-v))) (tech-log p-v (matita-arithmetics-nat.S m-v) lt1p-v (matita-arithmetics-nat.lt-O-S m-v)))))) n-v

log-times1 : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--2-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> matita-arithmetics-nat.le (log p-v (matita-arithmetics-nat.times n-v m-v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v n-v) (log p-v m-v)))
log-times1 = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> matita-arithmetics-minimization.f-false-to-le-max (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) (matita-arithmetics-nat.times n-v m-v)) (matita-arithmetics-nat.times n-v m-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v n-v) (log p-v m-v))) (matita-basics-logic.ex-intro lzero lzero matita-arithmetics-nat.nat (λ (i-v : matita-arithmetics-nat.nat) -> matita-basics-logic.And lzero lzero (matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.times n-v m-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v i-v) (matita-arithmetics-nat.times n-v m-v)) matita-basics-bool.true)) matita-arithmetics-nat.O (matita-basics-logic.conj lzero lzero (matita-arithmetics-nat.lt matita-arithmetics-nat.O (matita-arithmetics-nat.times n-v m-v)) (matita-basics-logic.eq lzero matita-basics-bool.bool (matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.times n-v m-v)) matita-basics-bool.true) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O matita-arithmetics-nat.O) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times matita-arithmetics-nat.O matita-arithmetics-nat.O)) -> matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times n-v m-v)) (matita-arithmetics-nat.lt-times matita-arithmetics-nat.O n-v matita-arithmetics-nat.O m-v posn-v posm-v) matita-arithmetics-nat.O (matita-arithmetics-nat.times-n-O matita-arithmetics-nat.O)) (matita-arithmetics-nat.le-to-leb-true (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.times n-v m-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O matita-arithmetics-nat.O) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times matita-arithmetics-nat.O matita-arithmetics-nat.O)) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.times n-v m-v)) (matita-arithmetics-nat.lt-times matita-arithmetics-nat.O n-v matita-arithmetics-nat.O m-v posn-v posm-v) matita-arithmetics-nat.O (matita-arithmetics-nat.times-n-O matita-arithmetics-nat.O))))) (λ (i-v : matita-arithmetics-nat.nat) -> λ (Hm-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v n-v) (log p-v m-v))) i-v) -> matita-arithmetics-nat.lt-to-leb-false (matita-arithmetics-exp.exp p-v i-v) (matita-arithmetics-nat.times n-v m-v) (matita-arithmetics-nat.lt-to-le-to-lt (matita-arithmetics-nat.times n-v m-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v n-v))) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v m-v)))) (matita-arithmetics-exp.exp p-v i-v) (matita-arithmetics-nat.lt-times n-v (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v n-v))) m-v (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v m-v))) (lt-exp-log p-v n-v lt1p-v) (lt-exp-log p-v m-v lt1p-v)) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S (log p-v n-v)) (matita-arithmetics-nat.S (log p-v m-v)))) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S (log p-v n-v)) (matita-arithmetics-nat.S (log p-v m-v)))) x-1-v) -> matita-arithmetics-nat.le x-1-v (matita-arithmetics-exp.exp p-v i-v)) (matita-arithmetics-exp.le-exp (matita-arithmetics-nat.plus (matita-arithmetics-nat.S (log p-v n-v)) (matita-arithmetics-nat.S (log p-v m-v))) i-v p-v (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v lt1p-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (matita-arithmetics-minimization.max' n-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v) matita-arithmetics-nat.O) (matita-arithmetics-minimization.max' m-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) m-v) matita-arithmetics-nat.O))) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (matita-arithmetics-minimization.max' n-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v) matita-arithmetics-nat.O) (matita-arithmetics-minimization.max' m-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) m-v) matita-arithmetics-nat.O))) x-1-v) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S x-1-v) i-v) Hm-v (matita-arithmetics-nat.plus (matita-arithmetics-minimization.max' n-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.S (matita-arithmetics-minimization.max' m-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) m-v) matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus-n-Sm (matita-arithmetics-minimization.max' n-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v) matita-arithmetics-nat.O) (matita-arithmetics-minimization.max' m-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) m-v) matita-arithmetics-nat.O)))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v n-v))) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v m-v)))) (matita-arithmetics-exp.exp-plus-times p-v (matita-arithmetics-nat.S (log p-v n-v)) (matita-arithmetics-nat.S (log p-v m-v))))))

log-times : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-arithmetics-nat.le (log p-v (matita-arithmetics-nat.times n-v m-v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v n-v) (log p-v m-v)))
log-times = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (log p-v (matita-arithmetics-nat.times X---v m-v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v X---v) (log p-v m-v)))) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S (log p-v m-v))) (matita-arithmetics-nat.S (log p-v m-v))) (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S (log p-v m-v)))) (matita-arithmetics-nat.le (log p-v (matita-arithmetics-nat.times matita-arithmetics-nat.O m-v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (log p-v m-v)))) (matita-arithmetics-nat.minus-le (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S (log p-v m-v))) (matita-arithmetics-nat.S (log p-v m-v))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (log p-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le X---v (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S (log p-v m-v)))) (matita-arithmetics-nat.le (log p-v (matita-arithmetics-nat.times matita-arithmetics-nat.O m-v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (log p-v m-v))))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v matita-arithmetics-nat.O) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S (log p-v m-v)))) (matita-arithmetics-nat.le (log p-v X---v) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (log p-v m-v))))) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S (log p-v m-v)))) (matita-arithmetics-nat.le (log p-v X---v) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (log p-v m-v))))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (log p-v m-v) (log p-v matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S (log p-v m-v)))) (matita-arithmetics-nat.le (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S X---v))) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (log p-v m-v) (matita-arithmetics-nat.S (log p-v matita-arithmetics-nat.O))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S (log p-v m-v)))) (matita-arithmetics-nat.le (log p-v matita-arithmetics-nat.O) X---v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (log p-v m-v) (matita-arithmetics-nat.S (log p-v matita-arithmetics-nat.O))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (log p-v matita-arithmetics-nat.O) X---v) (matita-arithmetics-nat.le (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (log p-v m-v) (matita-arithmetics-nat.S (log p-v matita-arithmetics-nat.O))))) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus (log p-v m-v) (matita-arithmetics-nat.S (log p-v matita-arithmetics-nat.O))))) (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S (log p-v m-v))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (log p-v m-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.plus (log p-v m-v) (matita-arithmetics-nat.S (log p-v matita-arithmetics-nat.O)))) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (log p-v m-v) (log p-v matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S X---v) (matita-arithmetics-nat.plus (log p-v m-v) (matita-arithmetics-nat.S (log p-v matita-arithmetics-nat.O)))) (matita-arithmetics-nat.plus-n-Sm (log p-v m-v) (log p-v matita-arithmetics-nat.O)) (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (log p-v m-v)) (matita-arithmetics-nat.commutative-plus (log p-v m-v) (log p-v matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S (log p-v m-v))) (matita-arithmetics-nat.plus-n-Sm (log p-v matita-arithmetics-nat.O) (log p-v m-v)))) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v m-v) (log p-v matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus-n-Sm (log p-v m-v) (log p-v matita-arithmetics-nat.O))) (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (log p-v m-v)) (matita-arithmetics-nat.commutative-plus (log p-v matita-arithmetics-nat.O) (log p-v m-v))) (matita-arithmetics-nat.times m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.times-n-O m-v)) (matita-arithmetics-nat.times matita-arithmetics-nat.O m-v) (matita-arithmetics-nat.commutative-times matita-arithmetics-nat.O m-v)) (matita-arithmetics-nat.minus (matita-arithmetics-nat.plus (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S (log p-v m-v))) (matita-arithmetics-nat.S (log p-v m-v))) (matita-arithmetics-nat.minus-plus-m-m (log p-v matita-arithmetics-nat.O) (matita-arithmetics-nat.S (log p-v m-v))))) (λ (n0-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.match-nat lzero (λ (X---v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (log p-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) X---v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v (matita-arithmetics-nat.S n0-v)) (log p-v X---v)))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O x-1-v) -> matita-arithmetics-nat.le (log p-v x-1-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v (matita-arithmetics-nat.S n0-v)) (log p-v matita-arithmetics-nat.O)))) (matita-arithmetics-nat.le-O-n (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v (matita-arithmetics-nat.S n0-v)) (log p-v matita-arithmetics-nat.O)))) (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.times-n-O (matita-arithmetics-nat.S n0-v))) (λ (m0-v : matita-arithmetics-nat.nat) -> log-times1 p-v (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S m0-v) lt1p-v (matita-arithmetics-nat.lt-O-S n0-v) (matita-arithmetics-nat.lt-O-S m0-v)) m-v) n-v

log-times-l : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--2-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-arithmetics-nat.le (matita-arithmetics-nat.plus (log p-v n-v) (log p-v m-v)) (log p-v (matita-arithmetics-nat.times n-v m-v))
log-times-l = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-arithmetics-minimization.true-to-le-max (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) (matita-arithmetics-nat.times n-v m-v)) (matita-arithmetics-nat.times n-v m-v) (matita-arithmetics-nat.plus (log p-v n-v) (log p-v m-v)) (matita-arithmetics-nat.match-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) lzero (λ (X---v : matita-arithmetics-nat.nat) -> λ (X-0-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.plus (log p-v X---v) (log p-v m-v)) (matita-arithmetics-nat.times X---v m-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.plus x-v (log p-v m-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.plus matita-arithmetics-nat.O (log p-v m-v)) x-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat m-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v x-1-v) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.plus matita-arithmetics-nat.O (log p-v m-v)) x-1-v) (lt-log-n-n p-v m-v lt1p-v posm-v) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-1 m-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v)) (log p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (log-SO p-v lt1p-v)) (λ (n0-v : matita-arithmetics-nat.nat) -> λ (posn0-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) n0-v) -> matita-arithmetics-nat.match-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) lzero (λ (X---v : matita-arithmetics-nat.nat) -> λ (X-0-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) X---v) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.plus (log p-v (matita-arithmetics-nat.S n0-v)) (log p-v X---v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) X---v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.plus (log p-v (matita-arithmetics-nat.S n0-v)) x-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (log p-v (matita-arithmetics-nat.S n0-v)) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v (matita-arithmetics-nat.S n0-v)) x-1-v) -> matita-arithmetics-nat.lt x-1-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n0-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S n0-v) x-1-v) -> matita-arithmetics-nat.lt (log p-v (matita-arithmetics-nat.S n0-v)) x-1-v) (lt-log-n-n p-v (matita-arithmetics-nat.S n0-v) lt1p-v (matita-arithmetics-nat.lt-O-S n0-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-nat.S n0-v))) (matita-arithmetics-nat.plus (log p-v (matita-arithmetics-nat.S n0-v)) matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O (log p-v (matita-arithmetics-nat.S n0-v)))) (log p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (log-SO p-v lt1p-v)) (λ (m1-v : matita-arithmetics-nat.nat) -> λ (lem1-v : matita-arithmetics-nat.le (matita-arithmetics-nat.S matita-arithmetics-nat.O) m1-v) -> matita-arithmetics-nat.transitive-le (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v (matita-arithmetics-nat.S n0-v)) (log p-v (matita-arithmetics-nat.S m1-v)))) (matita-arithmetics-nat.plus (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S m1-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.S m1-v)) (matita-arithmetics-nat.le-S-S (matita-arithmetics-nat.plus (log p-v (matita-arithmetics-nat.S n0-v)) (log p-v (matita-arithmetics-nat.S m1-v))) (matita-arithmetics-nat.plus n0-v (matita-arithmetics-nat.S m1-v)) (matita-arithmetics-nat.le-plus (log p-v (matita-arithmetics-nat.S n0-v)) n0-v (log p-v (matita-arithmetics-nat.S m1-v)) (matita-arithmetics-nat.S m1-v) (matita-arithmetics-nat.le-S-S-to-le (log p-v (matita-arithmetics-nat.S n0-v)) n0-v (lt-log-n-n p-v (matita-arithmetics-nat.S n0-v) lt1p-v (matita-arithmetics-nat.lt-O-S n0-v))) (matita-arithmetics-minimization.le-max-n (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) (matita-arithmetics-nat.S m1-v)) (matita-arithmetics-nat.S m1-v)))) (matita-arithmetics-nat.le-S-S (matita-arithmetics-nat.plus n0-v (matita-arithmetics-nat.S m1-v)) (matita-arithmetics-nat.plus m1-v (matita-arithmetics-nat.times n0-v (matita-arithmetics-nat.S m1-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m1-v) n0-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S m1-v) n0-v)) -> matita-arithmetics-nat.le x-v (matita-arithmetics-nat.plus m1-v (matita-arithmetics-nat.times n0-v (matita-arithmetics-nat.S m1-v)))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus m1-v (matita-arithmetics-nat.S n0-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus m1-v (matita-arithmetics-nat.S n0-v))) -> matita-arithmetics-nat.le x-v (matita-arithmetics-nat.plus m1-v (matita-arithmetics-nat.times n0-v (matita-arithmetics-nat.S m1-v)))) (matita-arithmetics-nat.monotonic-le-plus-r m1-v (matita-arithmetics-nat.S n0-v) (matita-arithmetics-nat.times n0-v (matita-arithmetics-nat.S m1-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n0-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times n0-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.times n0-v (matita-arithmetics-nat.S m1-v))) (matita-arithmetics-nat.monotonic-lt-times-r n0-v posn0-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S m1-v) (matita-arithmetics-nat.le-S-S (matita-arithmetics-nat.S matita-arithmetics-nat.O) m1-v lem1-v)) n0-v (matita-arithmetics-nat.times-n-1 n0-v))) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus m1-v n0-v)) (matita-arithmetics-nat.plus-n-Sm m1-v n0-v)) (matita-arithmetics-nat.plus n0-v (matita-arithmetics-nat.S m1-v)) (matita-arithmetics-nat.commutative-plus n0-v (matita-arithmetics-nat.S m1-v))))) m-v posm-v) n-v posn-v) (matita-arithmetics-nat.le-to-leb-true (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus (log p-v n-v) (log p-v m-v))) (matita-arithmetics-nat.times n-v m-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (log p-v n-v)) (matita-arithmetics-exp.exp p-v (log p-v m-v))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (log p-v n-v)) (matita-arithmetics-exp.exp p-v (log p-v m-v)))) -> matita-arithmetics-nat.le x-v (matita-arithmetics-nat.times n-v m-v)) (matita-arithmetics-nat.le-times (matita-arithmetics-exp.exp p-v (log p-v n-v)) n-v (matita-arithmetics-exp.exp p-v (log p-v m-v)) m-v (le-exp-log p-v n-v posn-v) (le-exp-log p-v m-v posm-v)) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus (log p-v n-v) (log p-v m-v))) (matita-arithmetics-exp.exp-plus-times p-v (log p-v n-v) (log p-v m-v))))

log-exp : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) m-v)) (matita-arithmetics-nat.plus n-v (log p-v m-v))
log-exp = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> λ (posm-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> matita-arithmetics-minimization.max-spec-to-max (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) m-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) m-v) (matita-arithmetics-nat.plus n-v (log p-v m-v)) (matita-arithmetics-minimization.found-max-spec (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) m-v) (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) m-v)) (matita-arithmetics-nat.plus n-v (log p-v m-v)) (matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.plus X-x-365-v (log p-v m-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v X-x-365-v) m-v)) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.S matita-arithmetics-nat.O) x-1-v) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.plus matita-arithmetics-nat.O (log p-v m-v)) (matita-arithmetics-nat.times x-1-v m-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.plus matita-arithmetics-nat.O (log p-v m-v)) x-v) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat m-v (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat m-v x-1-v) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.plus matita-arithmetics-nat.O (log p-v m-v)) x-1-v) (lt-log-n-n p-v m-v lt1p-v posm-v) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-1 m-v)) (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.S matita-arithmetics-nat.O) m-v)) (matita-arithmetics-exp.exp p-v matita-arithmetics-nat.O) (matita-arithmetics-exp.exp-n-O p-v)) (λ (a-v : matita-arithmetics-nat.nat) -> λ (Hind-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.plus a-v (log p-v m-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v)) -> matita-arithmetics-nat.lt-to-le-to-lt (matita-arithmetics-nat.S (matita-arithmetics-nat.plus a-v (log p-v m-v))) (matita-arithmetics-nat.S (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S a-v)) m-v) (matita-arithmetics-nat.le-S-S (matita-arithmetics-nat.S (matita-arithmetics-nat.plus a-v (log p-v m-v))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v) Hind-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times p-v (matita-arithmetics-exp.exp p-v a-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times p-v (matita-arithmetics-exp.exp p-v a-v))) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v)) (matita-arithmetics-nat.times x-v m-v)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times p-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times p-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v))) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v)) x-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.times p-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v))) -> matita-arithmetics-nat.le (matita-arithmetics-nat.S x-v) (matita-arithmetics-nat.times p-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v))) (matita-arithmetics-nat.monotonic-lt-times-l (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O matita-arithmetics-nat.O) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times matita-arithmetics-nat.O matita-arithmetics-nat.O)) -> matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v)) (matita-arithmetics-nat.lt-times matita-arithmetics-nat.O (matita-arithmetics-exp.exp p-v a-v) matita-arithmetics-nat.O m-v (matita-arithmetics-exp.lt-O-exp p-v a-v (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v lt1p-v)) posm-v) matita-arithmetics-nat.O (matita-arithmetics-nat.times-n-O matita-arithmetics-nat.O)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v lt1p-v) (matita-arithmetics-nat.times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) m-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.times p-v (matita-arithmetics-exp.exp p-v a-v)) m-v) (matita-arithmetics-nat.associative-times p-v (matita-arithmetics-exp.exp p-v a-v) m-v)) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v a-v) p-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp p-v a-v) p-v))) n-v) (matita-arithmetics-nat.le-to-leb-true (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus n-v (log p-v m-v))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) m-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) (matita-arithmetics-exp.exp p-v (log p-v m-v))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) (matita-arithmetics-exp.exp p-v (log p-v m-v)))) -> matita-arithmetics-nat.le x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) m-v)) (matita-arithmetics-nat.monotonic-le-times-r (matita-arithmetics-exp.exp p-v n-v) (matita-arithmetics-exp.exp p-v (log p-v m-v)) m-v (le-exp-log p-v m-v posm-v)) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus n-v (log p-v m-v))) (matita-arithmetics-exp.exp-plus-times p-v n-v (log p-v m-v)))) (λ (i-v : matita-arithmetics-nat.nat) -> λ (Hi-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.plus n-v (log p-v m-v)) i-v) -> λ (Hm-v : matita-arithmetics-nat.lt i-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) m-v)) -> matita-arithmetics-nat.lt-to-leb-false (matita-arithmetics-exp.exp p-v i-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) m-v) (matita-arithmetics-nat.lt-to-le-to-lt (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) m-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v m-v)))) (matita-arithmetics-exp.exp p-v i-v) (matita-arithmetics-nat.monotonic-lt-times-r (matita-arithmetics-exp.exp p-v n-v) (matita-arithmetics-exp.lt-O-exp p-v n-v (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v lt1p-v)) m-v (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v m-v))) (lt-exp-log p-v m-v lt1p-v)) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus n-v (matita-arithmetics-nat.S (log p-v m-v)))) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.plus n-v (matita-arithmetics-nat.S (log p-v m-v)))) x-1-v) -> matita-arithmetics-nat.le x-1-v (matita-arithmetics-exp.exp p-v i-v)) (matita-arithmetics-exp.le-exp (matita-arithmetics-nat.plus n-v (matita-arithmetics-nat.S (log p-v m-v))) i-v p-v (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v lt1p-v) (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.S (matita-arithmetics-nat.plus n-v (log p-v m-v))) i-v) (matita-arithmetics-nat.le (matita-arithmetics-nat.plus n-v (matita-arithmetics-nat.S (log p-v m-v))) i-v) Hi-v (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus n-v (matita-arithmetics-nat.S (log p-v m-v))) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le X---v i-v) (matita-arithmetics-nat.le (matita-arithmetics-nat.plus n-v (matita-arithmetics-nat.S (log p-v m-v))) i-v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.plus n-v (matita-arithmetics-nat.S (log p-v m-v))) i-v)) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus n-v (log p-v m-v))) (matita-arithmetics-nat.plus-n-Sm n-v (log p-v m-v))))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v m-v)))) (matita-arithmetics-exp.exp-plus-times p-v n-v (matita-arithmetics-nat.S (log p-v m-v)))))))

eq-log-exp : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v (matita-arithmetics-exp.exp p-v n-v)) n-v
eq-log-exp = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log p-v x-v) n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus n-v (log p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus n-v (log p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v matita-arithmetics-nat.O) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus n-v x-v) n-v) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat n-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v n-v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat n-v) (matita-arithmetics-nat.plus n-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O n-v)) (log p-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (log-SO p-v lt1p-v)) (log p-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp p-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (log-exp p-v n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) lt1p-v (matita-arithmetics-nat.lt-O-S matita-arithmetics-nat.O))) (matita-arithmetics-exp.exp p-v n-v) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-exp.exp p-v n-v))

log-exp1 : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-arithmetics-nat.le (log p-v (matita-arithmetics-exp.exp n-v m-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.S (log p-v n-v)))
log-exp1 = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (log p-v (matita-arithmetics-exp.exp n-v X-x-365-v)) (matita-arithmetics-nat.times X-x-365-v (matita-arithmetics-nat.S (log p-v n-v)))) (matita-arithmetics-nat.le-x-times-x (log p-v (matita-arithmetics-exp.exp n-v matita-arithmetics-nat.O))) (λ (m0-v : matita-arithmetics-nat.nat) -> λ (Hind-v : matita-arithmetics-nat.le (log p-v (matita-arithmetics-exp.exp n-v m0-v)) (matita-arithmetics-nat.times m0-v (matita-arithmetics-nat.S (log p-v n-v)))) -> matita-arithmetics-nat.transitive-le (log p-v (matita-arithmetics-exp.exp n-v (matita-arithmetics-nat.S m0-v))) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v n-v) (log p-v (matita-arithmetics-exp.exp n-v m0-v)))) (matita-arithmetics-nat.times (matita-arithmetics-nat.S m0-v) (matita-arithmetics-nat.S (log p-v n-v))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times n-v (matita-arithmetics-exp.exp n-v m0-v)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times n-v (matita-arithmetics-exp.exp n-v m0-v))) -> matita-arithmetics-nat.le (log p-v x-v) (matita-arithmetics-nat.S (matita-arithmetics-nat.plus (log p-v n-v) (log p-v (matita-arithmetics-exp.exp n-v m0-v))))) (log-times p-v n-v (matita-arithmetics-exp.exp n-v m0-v) lt1p-v) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp n-v m0-v) n-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp n-v m0-v) n-v)) (matita-arithmetics-nat.le-S-S (matita-arithmetics-nat.plus (log p-v n-v) (log p-v (matita-arithmetics-exp.exp n-v m0-v))) (matita-arithmetics-nat.plus (log p-v n-v) (matita-arithmetics-nat.times m0-v (matita-arithmetics-nat.S (log p-v n-v)))) (matita-arithmetics-nat.monotonic-le-plus-r (log p-v n-v) (log p-v (matita-arithmetics-exp.exp n-v m0-v)) (matita-arithmetics-nat.times m0-v (matita-arithmetics-nat.S (log p-v n-v))) Hind-v))) m-v

log-exp2 : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (log p-v n-v)) (log p-v (matita-arithmetics-exp.exp n-v m-v))
log-exp2 = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (ltp1-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-arithmetics-nat.le-S-S-to-le (matita-arithmetics-nat.times m-v (log p-v n-v)) (log p-v (matita-arithmetics-exp.exp n-v m-v)) (matita-arithmetics-exp.lt-exp-to-lt p-v (matita-arithmetics-nat.times m-v (log p-v n-v)) (matita-arithmetics-nat.S (log p-v (matita-arithmetics-exp.exp n-v m-v))) (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v ltp1-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (log p-v n-v) m-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (log p-v n-v) m-v)) -> matita-arithmetics-nat.lt (matita-arithmetics-exp.exp p-v x-v) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v (matita-arithmetics-exp.exp n-v m-v))))) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp (matita-arithmetics-exp.exp p-v (log p-v n-v)) m-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp (matita-arithmetics-exp.exp p-v (log p-v n-v)) m-v) x-1-v) -> matita-arithmetics-nat.lt x-1-v (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v (matita-arithmetics-exp.exp n-v m-v))))) (matita-arithmetics-nat.le-to-lt-to-lt (matita-arithmetics-exp.exp (matita-arithmetics-exp.exp p-v (log p-v n-v)) m-v) (matita-arithmetics-exp.exp n-v m-v) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.S (log p-v (matita-arithmetics-exp.exp n-v m-v)))) (matita-arithmetics-nat.nat-ind lzero (λ (X-x-365-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.le (matita-arithmetics-exp.exp (matita-arithmetics-exp.exp p-v (log p-v n-v)) X-x-365-v) (matita-arithmetics-exp.exp n-v X-x-365-v)) (matita-arithmetics-nat.le-n (matita-arithmetics-exp.exp (matita-arithmetics-exp.exp p-v (log p-v n-v)) matita-arithmetics-nat.O)) (λ (m0-v : matita-arithmetics-nat.nat) -> λ (Hind-v : matita-arithmetics-nat.le (matita-arithmetics-exp.exp (matita-arithmetics-exp.exp p-v (log p-v n-v)) m0-v) (matita-arithmetics-exp.exp n-v m0-v)) -> matita-arithmetics-nat.le-times (matita-arithmetics-exp.exp (matita-arithmetics-exp.exp p-v (log p-v n-v)) m0-v) (matita-arithmetics-exp.exp n-v m0-v) (matita-arithmetics-exp.exp p-v (log p-v n-v)) n-v Hind-v (le-exp-log p-v n-v posn-v)) m-v) (lt-exp-log p-v (matita-arithmetics-exp.exp n-v m-v) ltp1-v)) (matita-arithmetics-exp.exp p-v (matita-arithmetics-nat.times (log p-v n-v) m-v)) (matita-arithmetics-exp.exp-exp-times p-v (log p-v n-v) m-v)) (matita-arithmetics-nat.times m-v (log p-v n-v)) (matita-arithmetics-nat.commutative-times m-v (log p-v n-v))))

le-log-S : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-arithmetics-nat.le (log p-v n-v) (log p-v (matita-arithmetics-nat.S n-v))
le-log-S = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> matita-basics-bool.match-bool lzero (λ (X---v : matita-basics-bool.bool) -> matita-arithmetics-nat.le (matita-arithmetics-minimization.max' n-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v) matita-arithmetics-nat.O) (matita-basics-bool.match-bool lzero (λ (X-0-v : matita-basics-bool.bool) -> matita-arithmetics-nat.nat) n-v (matita-arithmetics-minimization.max' n-v (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) (matita-arithmetics-nat.S n-v)) matita-arithmetics-nat.O) X---v)) (matita-arithmetics-minimization.le-max-n (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v) n-v) (matita-arithmetics-minimization.le-max-f-max-g (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) n-v) (λ (x-v : matita-arithmetics-nat.nat) -> matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v x-v) (matita-arithmetics-nat.S n-v)) n-v (λ (i-v : matita-arithmetics-nat.nat) -> λ (ltin-v : matita-arithmetics-nat.lt i-v n-v) -> λ (H-v : matita-basics-logic.eq lzero matita-basics-bool.bool (matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v i-v) n-v) matita-basics-bool.true) -> matita-arithmetics-nat.le-to-leb-true (matita-arithmetics-exp.exp p-v i-v) (matita-arithmetics-nat.S n-v) (matita-arithmetics-nat.le-S (matita-arithmetics-exp.exp p-v i-v) n-v (matita-arithmetics-nat.leb-true-to-le (matita-arithmetics-exp.exp p-v i-v) n-v (matita-basics-logic.rewrite-r lzero lzero matita-basics-bool.bool matita-basics-bool.true (λ (X---v : matita-basics-bool.bool) -> matita-basics-logic.eq lzero matita-basics-bool.bool X---v matita-basics-bool.true) (matita-basics-logic.refl lzero matita-basics-bool.bool matita-basics-bool.true) (matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v i-v) n-v) H-v))))) (matita-arithmetics-nat.leb (matita-arithmetics-exp.exp p-v n-v) (matita-arithmetics-nat.S n-v))

le-log : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> (X--1-v : matita-arithmetics-nat.le n-v m-v) -> matita-arithmetics-nat.le (log p-v n-v) (log p-v m-v)
le-log = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> λ (lenm-v : matita-arithmetics-nat.le n-v m-v) -> matita-arithmetics-nat.le-ind lzero n-v (λ (x-417-v : matita-arithmetics-nat.nat) -> λ (X-x-418-v : matita-arithmetics-nat.le n-v x-417-v) -> matita-arithmetics-nat.le (log p-v n-v) (log p-v x-417-v)) (matita-arithmetics-nat.le-n (log p-v n-v)) (λ (m0-v : matita-arithmetics-nat.nat) -> λ (lenm0-v : matita-arithmetics-nat.le n-v m0-v) -> λ (Hind-v : matita-arithmetics-nat.le (log p-v n-v) (log p-v m0-v)) -> matita-arithmetics-nat.transitive-le (log p-v n-v) (log p-v m0-v) (log p-v (matita-arithmetics-nat.S m0-v)) Hind-v (le-log-S p-v m0-v lt1p-v)) m-v lenm-v

log-div : (p-v : matita-arithmetics-nat.nat) -> (n-v : matita-arithmetics-nat.nat) -> (m-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> (X--1-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> (X--2-v : matita-arithmetics-nat.le m-v n-v) -> matita-arithmetics-nat.le (log p-v (matita-arithmetics-div-and-mod.div n-v m-v)) (matita-arithmetics-nat.minus (log p-v n-v) (log p-v m-v))
log-div = λ (p-v : matita-arithmetics-nat.nat) -> λ (n-v : matita-arithmetics-nat.nat) -> λ (m-v : matita-arithmetics-nat.nat) -> λ (lt1p-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) p-v) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O m-v) -> λ (lemn-v : matita-arithmetics-nat.le m-v n-v) -> matita-arithmetics-nat.le-plus-to-minus-r (log p-v (matita-arithmetics-div-and-mod.div n-v m-v)) (log p-v m-v) (log p-v n-v) (matita-arithmetics-nat.transitive-le (matita-arithmetics-nat.plus (log p-v (matita-arithmetics-div-and-mod.div n-v m-v)) (log p-v m-v)) (log p-v (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v m-v) m-v)) (log p-v n-v) (log-times-l p-v (matita-arithmetics-div-and-mod.div n-v m-v) m-v (matita-arithmetics-div-and-mod.le-times-to-le-div n-v m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) posn-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le m-v n-v) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v) lemn-v (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.plus m-v (matita-arithmetics-nat.times m-v matita-arithmetics-nat.O)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le m-v n-v) (matita-arithmetics-nat.le X---v n-v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le m-v n-v) (matita-arithmetics-nat.le (matita-arithmetics-nat.plus m-v X---v) n-v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat m-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le m-v n-v) (matita-arithmetics-nat.le X---v n-v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le m-v n-v)) (matita-arithmetics-nat.plus m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.plus-n-O m-v)) (matita-arithmetics-nat.times m-v matita-arithmetics-nat.O) (matita-arithmetics-nat.times-n-O m-v)) (matita-arithmetics-nat.times m-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-Sm m-v matita-arithmetics-nat.O)))) posn-v lt1p-v) (le-log p-v (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v m-v) m-v) n-v lt1p-v (matita-basics-logic.eq-coerc lzero (matita-arithmetics-nat.le (matita-arithmetics-nat.minus n-v (matita-arithmetics-div-and-mod.mod n-v m-v)) n-v) (matita-arithmetics-nat.le (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v m-v) m-v) n-v) (matita-arithmetics-nat.minus-le n-v (matita-arithmetics-div-and-mod.mod n-v m-v)) (matita-basics-logic.rewrite-r lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-div-and-mod.div n-v m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.minus n-v (matita-arithmetics-div-and-mod.mod n-v m-v)) n-v) (matita-arithmetics-nat.le X---v n-v)) (matita-basics-logic.rewrite-l lzero (lsuc lzero) matita-arithmetics-nat.nat (matita-arithmetics-nat.times m-v (matita-arithmetics-div-and-mod.div n-v m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le X---v n-v) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-div-and-mod.div n-v m-v)) n-v)) (matita-basics-logic.refl (lsuc lzero) (Set (lzero)) (matita-arithmetics-nat.le (matita-arithmetics-nat.times m-v (matita-arithmetics-div-and-mod.div n-v m-v)) n-v)) (matita-arithmetics-nat.minus n-v (matita-arithmetics-div-and-mod.mod n-v m-v)) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v (matita-arithmetics-nat.minus n-v (matita-arithmetics-div-and-mod.mod n-v m-v))) (matita-arithmetics-div-and-mod.eq-times-div-minus-mod n-v m-v) (matita-arithmetics-nat.times m-v (matita-arithmetics-div-and-mod.div n-v m-v)) (matita-arithmetics-nat.commutative-times (matita-arithmetics-div-and-mod.div n-v m-v) m-v))) (matita-arithmetics-nat.times (matita-arithmetics-div-and-mod.div n-v m-v) m-v) (matita-arithmetics-nat.commutative-times (matita-arithmetics-div-and-mod.div n-v m-v) m-v)))))

log-n-n : (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log n-v n-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)
log-n-n = λ (n-v : matita-arithmetics-nat.nat) -> λ (lt1n-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-exp.exp n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log n-v x-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times (matita-arithmetics-exp.exp n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log n-v x-v) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (log n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (log n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.plus (matita-arithmetics-nat.S matita-arithmetics-nat.O) (log n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) (log n-v (matita-arithmetics-nat.times (matita-arithmetics-exp.exp n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (log-exp n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.S matita-arithmetics-nat.O) lt1n-v (matita-arithmetics-nat.lt-O-S matita-arithmetics-nat.O))) (matita-arithmetics-exp.exp n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.times-n-1 (matita-arithmetics-exp.exp n-v (matita-arithmetics-nat.S matita-arithmetics-nat.O)))) n-v (matita-arithmetics-exp.exp-n-1 n-v)

log-i-2n : (n-v : matita-arithmetics-nat.nat) -> (i-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> (X--1-v : matita-arithmetics-nat.lt n-v i-v) -> (X--2-v : matita-arithmetics-nat.le i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)
log-i-2n = λ (n-v : matita-arithmetics-nat.nat) -> λ (i-v : matita-arithmetics-nat.nat) -> λ (lt1n-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v) -> λ (ltni-v : matita-arithmetics-nat.lt n-v i-v) -> λ (lei-v : matita-arithmetics-nat.le i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) -> matita-basics-logic.match-Or lzero lzero (matita-arithmetics-nat.lt (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) lzero (λ (X---v : matita-basics-logic.Or lzero lzero (matita-arithmetics-nat.lt (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O))) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (λ (ltab-v : matita-arithmetics-nat.lt (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.False-ind lzero lzero (λ (X-x-66-v : matita-basics-logic.False lzero) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-basics-logic.absurd lzero (matita-arithmetics-nat.lt (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) ltab-v (matita-arithmetics-nat.le-to-not-lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.transitive-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) (log i-v i-v) (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-basics-logic.eq-ind lzero lzero matita-arithmetics-nat.nat (log i-v i-v) (λ (x-1-v : matita-arithmetics-nat.nat) -> λ (X-x-2-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log i-v i-v) x-1-v) -> matita-arithmetics-nat.le x-1-v (log i-v i-v)) (matita-arithmetics-nat.le-n (log i-v i-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (log-n-n i-v (matita-arithmetics-nat.transitive-lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v i-v lt1n-v ltni-v))) (le-log i-v i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v) (matita-arithmetics-nat.transitive-lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v i-v lt1n-v ltni-v) lei-v))))) (λ (auto-v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O)) -> matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) X---v) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v))) (matita-arithmetics-nat.S matita-arithmetics-nat.O) auto-v) (matita-arithmetics-nat.le-to-or-lt-eq (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.S matita-arithmetics-nat.O) (matita-arithmetics-nat.not-lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-basics-logic.nmk lzero (matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v))) (λ (H-v : matita-arithmetics-nat.lt (matita-arithmetics-nat.S matita-arithmetics-nat.O) (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v))) -> matita-basics-logic.absurd lzero (matita-arithmetics-nat.le (matita-arithmetics-exp.exp i-v (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.transitive-le (matita-arithmetics-exp.exp i-v (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-exp.exp i-v (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v))) (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v) (matita-arithmetics-exp.le-exp (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) i-v (matita-arithmetics-nat.ltn-to-ltO n-v i-v ltni-v) H-v) (le-exp-log i-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O matita-arithmetics-nat.O) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times matita-arithmetics-nat.O matita-arithmetics-nat.O)) -> matita-arithmetics-nat.lt x-v (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v)) (matita-arithmetics-nat.lt-times matita-arithmetics-nat.O (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) matita-arithmetics-nat.O n-v (matita-arithmetics-nat.lt-O-S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) (matita-arithmetics-nat.lt-to-le (matita-arithmetics-nat.S matita-arithmetics-nat.O) n-v lt1n-v)) matita-arithmetics-nat.O (matita-arithmetics-nat.times-n-O matita-arithmetics-nat.O)))) (matita-arithmetics-nat.lt-to-not-le (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v) (matita-arithmetics-exp.exp i-v (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-basics-logic.eq-ind-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times i-v i-v) (λ (x-v : matita-arithmetics-nat.nat) -> λ (X---v : matita-basics-logic.eq lzero matita-arithmetics-nat.nat x-v (matita-arithmetics-nat.times i-v i-v)) -> matita-arithmetics-nat.lt (matita-arithmetics-nat.times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v) x-v) (matita-arithmetics-nat.lt-times (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) i-v n-v i-v (matita-arithmetics-nat.le-to-lt-to-lt (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O)) n-v i-v lt1n-v ltni-v) (matita-arithmetics-nat.le-to-lt-to-lt n-v n-v i-v (matita-arithmetics-nat.le-n n-v) ltni-v)) (matita-arithmetics-exp.exp i-v (matita-arithmetics-nat.S (matita-arithmetics-nat.S matita-arithmetics-nat.O))) (matita-arithmetics-exp.exp-2 i-v)))))))

exp-n-O : (n-v : matita-arithmetics-nat.nat) -> (X---v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp matita-arithmetics-nat.O n-v) matita-arithmetics-nat.O
exp-n-O = λ (n-v : matita-arithmetics-nat.nat) -> λ (posn-v : matita-arithmetics-nat.lt matita-arithmetics-nat.O n-v) -> matita-arithmetics-nat.lt-O-n-elim lzero n-v posn-v (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat (matita-arithmetics-exp.exp matita-arithmetics-nat.O X---v) matita-arithmetics-nat.O) (λ (m-v : matita-arithmetics-nat.nat) -> matita-basics-logic.rewrite-r lzero lzero matita-arithmetics-nat.nat (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-exp.exp matita-arithmetics-nat.O m-v)) (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v matita-arithmetics-nat.O) (matita-basics-logic.rewrite-l lzero lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O (λ (X---v : matita-arithmetics-nat.nat) -> matita-basics-logic.eq lzero matita-arithmetics-nat.nat X---v matita-arithmetics-nat.O) (matita-basics-logic.refl lzero matita-arithmetics-nat.nat matita-arithmetics-nat.O) (matita-arithmetics-nat.times matita-arithmetics-nat.O (matita-arithmetics-exp.exp matita-arithmetics-nat.O m-v)) (matita-arithmetics-nat.times-O-n (matita-arithmetics-exp.exp matita-arithmetics-nat.O m-v))) (matita-arithmetics-nat.times (matita-arithmetics-exp.exp matita-arithmetics-nat.O m-v) matita-arithmetics-nat.O) (matita-arithmetics-nat.commutative-times (matita-arithmetics-exp.exp matita-arithmetics-nat.O m-v) matita-arithmetics-nat.O))

